; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare !dbg !4 float @llvm.amdgcn.exp2.f32(float) #0

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_attn_bwd(ptr addrspace(1) inreg nocapture readonly %0, ptr addrspace(1) inreg nocapture readonly %1, ptr addrspace(1) inreg nocapture readonly %2, float inreg %3, ptr addrspace(1) inreg nocapture readonly %4, ptr addrspace(1) inreg nocapture writeonly %5, ptr addrspace(1) inreg nocapture writeonly %6, ptr addrspace(1) inreg nocapture writeonly %7, ptr addrspace(1) inreg nocapture readonly %8, ptr addrspace(1) inreg nocapture readonly %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, i32 inreg %14) local_unnamed_addr #1 !dbg !7 {
  %16 = tail call i32 @llvm.amdgcn.workgroup.id.z(), !dbg !8
  %.frozen = freeze i32 %13, !dbg !9
  %17 = sdiv i32 %16, %.frozen, !dbg !9
  %18 = mul i32 %17, %.frozen, !dbg !10
  %.decomposed = sub i32 %16, %18, !dbg !10
  %19 = mul i32 %.decomposed, %11, !dbg !11
  %20 = mul i32 %17, %10, !dbg !12
  %21 = add i32 %20, %19, !dbg !13
  %22 = sext i32 %21 to i64, !dbg !14
  %23 = getelementptr half, ptr addrspace(1) %1, i64 %22, !dbg !15
  %24 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !16
  %25 = shl i32 %24, 7, !dbg !17
  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !18
  %27 = and i32 %26, 63, !dbg !18
  %28 = lshr i32 %26, 6, !dbg !18
  %29 = lshr i32 %26, 3, !dbg !18
  %30 = and i32 %29, 4, !dbg !18
  %31 = and i32 %26, 64, !dbg !18
  %32 = and i32 %26, 128, !dbg !18
  %33 = lshr i32 %26, 3, !dbg !18
  %34 = and i32 %33, 27, !dbg !18
  %35 = or disjoint i32 %34, %30, !dbg !18
  %36 = or disjoint i32 %35, 32, !dbg !18
  %37 = or disjoint i32 %35, 64, !dbg !18
  %38 = or disjoint i32 %35, 96, !dbg !18
  %39 = mul i32 %12, %25, !dbg !19
  %40 = mul i32 %12, %35, !dbg !19
  %41 = mul i32 %12, %36, !dbg !19
  %42 = mul i32 %12, %37, !dbg !19
  %43 = mul i32 %12, %38, !dbg !19
  %44 = sext i32 %39 to i64, !dbg !20
  %45 = getelementptr half, ptr addrspace(1) %23, i64 %44, !dbg !20
  %46 = sext i32 %40 to i64, !dbg !20
  %47 = sext i32 %41 to i64, !dbg !20
  %48 = sext i32 %42 to i64, !dbg !20
  %49 = sext i32 %43 to i64, !dbg !20
  %50 = shl i32 %26, 3, !dbg !21
  %51 = and i32 %50, 56, !dbg !21
  %52 = zext nneg i32 %51 to i64, !dbg !22
  %53 = add nsw i64 %46, %52, !dbg !22
  %54 = add nsw i64 %47, %52, !dbg !22
  %55 = add nsw i64 %48, %52, !dbg !22
  %56 = add nsw i64 %49, %52, !dbg !22
  %57 = getelementptr half, ptr addrspace(1) %45, i64 %53, !dbg !23
  %58 = getelementptr half, ptr addrspace(1) %45, i64 %54, !dbg !23
  %59 = getelementptr half, ptr addrspace(1) %45, i64 %55, !dbg !23
  %60 = getelementptr half, ptr addrspace(1) %45, i64 %56, !dbg !23
  %unmaskedload = load <8 x half>, ptr addrspace(1) %57, align 16, !dbg !23
  %unmaskedload4 = load <8 x half>, ptr addrspace(1) %58, align 16, !dbg !23
  %unmaskedload5 = load <8 x half>, ptr addrspace(1) %59, align 16, !dbg !23
  %unmaskedload6 = load <8 x half>, ptr addrspace(1) %60, align 16, !dbg !23
  %61 = getelementptr half, ptr addrspace(1) %2, i64 %22, !dbg !24
  %62 = getelementptr half, ptr addrspace(1) %61, i64 %44, !dbg !25
  %63 = getelementptr half, ptr addrspace(1) %62, i64 %53, !dbg !26
  %64 = getelementptr half, ptr addrspace(1) %62, i64 %54, !dbg !26
  %65 = getelementptr half, ptr addrspace(1) %62, i64 %55, !dbg !26
  %66 = getelementptr half, ptr addrspace(1) %62, i64 %56, !dbg !26
  %unmaskedload7 = load <8 x half>, ptr addrspace(1) %63, align 16, !dbg !26
  %unmaskedload8 = load <8 x half>, ptr addrspace(1) %64, align 16, !dbg !26
  %unmaskedload9 = load <8 x half>, ptr addrspace(1) %65, align 16, !dbg !26
  %unmaskedload10 = load <8 x half>, ptr addrspace(1) %66, align 16, !dbg !26
  %67 = mul i32 %14, %16, !dbg !27
  %68 = sext i32 %67 to i64, !dbg !28
  %69 = getelementptr float, ptr addrspace(1) %8, i64 %68, !dbg !29
  %70 = lshr i32 %26, 2, !dbg !30
  %71 = and i32 %70, 12, !dbg !30
  %72 = or disjoint i32 %71, 1, !dbg !30
  %73 = insertelement <2 x i32> poison, i32 %71, i64 0, !dbg !30
  %74 = shufflevector <2 x i32> %73, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !30
  %75 = or disjoint <2 x i32> %74, <i32 2, i32 3>, !dbg !30
  %76 = insertelement <2 x i32> %73, i32 %72, i64 1, !dbg !33
  %77 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !33
  %78 = shufflevector <2 x i32> %77, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !33
  %79 = or disjoint <2 x i32> %76, %78, !dbg !33
  %80 = or disjoint <2 x i32> %75, %78, !dbg !33
  %81 = sext i32 %25 to i64, !dbg !34
  %82 = getelementptr float, ptr addrspace(1) %69, i64 %81, !dbg !34
  %83 = zext nneg i32 %71 to i64, !dbg !35
  %84 = getelementptr float, ptr addrspace(1) %82, i64 %83, !dbg !35
  %unmaskedload11 = load <4 x float>, ptr addrspace(1) %84, align 16, !dbg !35
  %85 = extractelement <4 x float> %unmaskedload11, i64 0, !dbg !35
  %86 = extractelement <4 x float> %unmaskedload11, i64 1, !dbg !35
  %87 = extractelement <4 x float> %unmaskedload11, i64 2, !dbg !35
  %88 = extractelement <4 x float> %unmaskedload11, i64 3, !dbg !35
  %89 = getelementptr float, ptr addrspace(1) %9, i64 %68, !dbg !36
  %90 = getelementptr float, ptr addrspace(1) %89, i64 %81, !dbg !37
  %91 = getelementptr float, ptr addrspace(1) %90, i64 %83, !dbg !38
  %unmaskedload12 = load <4 x float>, ptr addrspace(1) %91, align 16, !dbg !38
  %92 = or disjoint i32 %25, 16, !dbg !39
  %93 = insertelement <2 x i32> poison, i32 %92, i64 0, !dbg !33
  %94 = shufflevector <2 x i32> %93, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !33
  %95 = or disjoint <2 x i32> %76, %94, !dbg !33
  %96 = or disjoint <2 x i32> %75, %94, !dbg !33
  %97 = sext i32 %92 to i64, !dbg !34
  %98 = getelementptr float, ptr addrspace(1) %69, i64 %97, !dbg !34
  %99 = getelementptr float, ptr addrspace(1) %98, i64 %83, !dbg !35
  %unmaskedload13 = load <4 x float>, ptr addrspace(1) %99, align 16, !dbg !35
  %100 = extractelement <4 x float> %unmaskedload13, i64 0, !dbg !35
  %101 = extractelement <4 x float> %unmaskedload13, i64 1, !dbg !35
  %102 = extractelement <4 x float> %unmaskedload13, i64 2, !dbg !35
  %103 = extractelement <4 x float> %unmaskedload13, i64 3, !dbg !35
  %104 = getelementptr float, ptr addrspace(1) %89, i64 %97, !dbg !37
  %105 = getelementptr float, ptr addrspace(1) %104, i64 %83, !dbg !38
  %unmaskedload14 = load <4 x float>, ptr addrspace(1) %105, align 16, !dbg !38
  %106 = or disjoint i32 %25, 32, !dbg !39
  %107 = insertelement <2 x i32> poison, i32 %106, i64 0, !dbg !33
  %108 = shufflevector <2 x i32> %107, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !33
  %109 = or disjoint <2 x i32> %76, %108, !dbg !33
  %110 = or disjoint <2 x i32> %75, %108, !dbg !33
  %111 = sext i32 %106 to i64, !dbg !34
  %112 = getelementptr float, ptr addrspace(1) %69, i64 %111, !dbg !34
  %113 = getelementptr float, ptr addrspace(1) %112, i64 %83, !dbg !35
  %unmaskedload15 = load <4 x float>, ptr addrspace(1) %113, align 16, !dbg !35
  %114 = extractelement <4 x float> %unmaskedload15, i64 0, !dbg !35
  %115 = extractelement <4 x float> %unmaskedload15, i64 1, !dbg !35
  %116 = extractelement <4 x float> %unmaskedload15, i64 2, !dbg !35
  %117 = extractelement <4 x float> %unmaskedload15, i64 3, !dbg !35
  %118 = getelementptr float, ptr addrspace(1) %89, i64 %111, !dbg !37
  %119 = getelementptr float, ptr addrspace(1) %118, i64 %83, !dbg !38
  %unmaskedload16 = load <4 x float>, ptr addrspace(1) %119, align 16, !dbg !38
  %120 = getelementptr half, ptr addrspace(1) %0, i64 %22, !dbg !40
  %121 = lshr i32 %26, 4, !dbg !30
  %122 = and i32 %121, 15, !dbg !30
  %123 = mul i32 %12, %122, !dbg !41
  %124 = getelementptr half, ptr addrspace(1) %120, i64 %44, !dbg !43
  %125 = sext i32 %123 to i64, !dbg !43
  %126 = shl i32 %26, 2, !dbg !44
  %127 = and i32 %126, 60, !dbg !44
  %128 = zext nneg i32 %127 to i64, !dbg !45
  %129 = add nsw i64 %125, %128, !dbg !45
  %130 = shl i32 %12, 4, !dbg !46
  %131 = sext i32 %130 to i64, !dbg !47
  %132 = getelementptr half, ptr addrspace(1) %124, i64 %131, !dbg !47
  %133 = getelementptr half, ptr addrspace(1) %124, i64 %129, !dbg !48
  %unmaskedload20 = load <4 x half>, ptr addrspace(1) %133, align 16, !dbg !48
  %134 = getelementptr half, ptr addrspace(1) %132, i64 %131, !dbg !47
  %135 = getelementptr half, ptr addrspace(1) %132, i64 %129, !dbg !48
  %unmaskedload21 = load <4 x half>, ptr addrspace(1) %135, align 16, !dbg !48
  %136 = getelementptr half, ptr addrspace(1) %134, i64 %131, !dbg !47
  %137 = getelementptr half, ptr addrspace(1) %134, i64 %129, !dbg !48
  %unmaskedload22 = load <4 x half>, ptr addrspace(1) %137, align 16, !dbg !48
  %138 = getelementptr half, ptr addrspace(1) %136, i64 %129, !dbg !48
  %unmaskedload23 = load <4 x half>, ptr addrspace(1) %138, align 16, !dbg !48
  %139 = or disjoint i32 %25, 48, !dbg !39
  %140 = sext i32 %139 to i64, !dbg !34
  %141 = getelementptr float, ptr addrspace(1) %69, i64 %140, !dbg !34
  %142 = getelementptr float, ptr addrspace(1) %141, i64 %83, !dbg !35
  %unmaskedload24 = load <4 x float>, ptr addrspace(1) %142, align 16, !dbg !35
  %143 = extractelement <4 x float> %unmaskedload24, i64 0, !dbg !35
  %144 = extractelement <4 x float> %unmaskedload24, i64 1, !dbg !35
  %145 = extractelement <4 x float> %unmaskedload24, i64 2, !dbg !35
  %146 = extractelement <4 x float> %unmaskedload24, i64 3, !dbg !35
  %147 = getelementptr half, ptr addrspace(1) %4, i64 %22, !dbg !49
  %148 = getelementptr half, ptr addrspace(1) %147, i64 %44, !dbg !50
  %149 = getelementptr half, ptr addrspace(1) %148, i64 %131, !dbg !51
  %150 = getelementptr half, ptr addrspace(1) %148, i64 %129, !dbg !52
  %unmaskedload25 = load <4 x half>, ptr addrspace(1) %150, align 16, !dbg !52
  %151 = getelementptr half, ptr addrspace(1) %149, i64 %131, !dbg !51
  %152 = getelementptr half, ptr addrspace(1) %149, i64 %129, !dbg !52
  %unmaskedload26 = load <4 x half>, ptr addrspace(1) %152, align 16, !dbg !52
  %153 = getelementptr half, ptr addrspace(1) %151, i64 %131, !dbg !51
  %154 = getelementptr half, ptr addrspace(1) %151, i64 %129, !dbg !52
  %unmaskedload27 = load <4 x half>, ptr addrspace(1) %154, align 16, !dbg !52
  %155 = getelementptr half, ptr addrspace(1) %153, i64 %129, !dbg !52
  %unmaskedload28 = load <4 x half>, ptr addrspace(1) %155, align 16, !dbg !52
  %156 = getelementptr float, ptr addrspace(1) %89, i64 %140, !dbg !37
  %157 = getelementptr float, ptr addrspace(1) %156, i64 %83, !dbg !38
  %unmaskedload29 = load <4 x float>, ptr addrspace(1) %157, align 16, !dbg !38
  %158 = getelementptr half, ptr addrspace(1) %6, i64 %22, !dbg !53
  %159 = and i32 %26, 15, !dbg !18
  %160 = and i32 %26, 31, !dbg !18
  %161 = lshr exact i32 %31, 1, !dbg !18
  %162 = lshr exact i32 %32, 1, !dbg !18
  %163 = or disjoint i32 %162, %160, !dbg !18
  %164 = or disjoint i32 %163, %161, !dbg !18
  %165 = lshr exact i32 %31, 2, !dbg !18
  %166 = or disjoint i32 %165, %159, !dbg !18
  %167 = lshr exact i32 %32, 2, !dbg !18
  %168 = or disjoint i32 %166, %167, !dbg !18
  %169 = or disjoint i32 %168, 64, !dbg !18
  %170 = or disjoint i32 %168, %25, !dbg !54
  %171 = or disjoint i32 %169, %25, !dbg !54
  %172 = mul i32 %12, %164, !dbg !55
  %173 = or disjoint i32 %30, 16, !dbg !21
  %174 = or disjoint i32 %30, 32, !dbg !21
  %175 = or disjoint i32 %30, 48, !dbg !21
  %176 = lshr i32 %26, 1, !dbg !23
  %177 = and i32 %176, 4, !dbg !23
  %178 = or disjoint i32 %51, %177, !dbg !23
  %179 = lshr i32 %26, 1, !dbg !23
  %180 = and i32 %179, 24, !dbg !23
  %181 = or disjoint i32 %180, %161, !dbg !23
  %182 = xor i32 %181, %178, !dbg !23
  %183 = shl nuw nsw i32 %35, 6, !dbg !23
  %184 = or disjoint i32 %182, %183, !dbg !23
  %185 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %184, !dbg !23
  %186 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !23
  store <4 x half> %186, ptr addrspace(3) %185, align 8, !dbg !23
  %187 = or disjoint i32 %51, 4, !dbg !23
  %188 = or disjoint i32 %180, %177, !dbg !23
  %189 = or disjoint i32 %188, %161, !dbg !23
  %190 = xor i32 %189, %187, !dbg !23
  %191 = or disjoint i32 %190, %183, !dbg !23
  %192 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %191, !dbg !23
  %193 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !23
  store <4 x half> %193, ptr addrspace(3) %192, align 8, !dbg !23
  %194 = or disjoint i32 %183, 2048, !dbg !23
  %195 = or disjoint i32 %182, %194, !dbg !23
  %196 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %195, !dbg !23
  %197 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !23
  store <4 x half> %197, ptr addrspace(3) %196, align 8, !dbg !23
  %198 = or disjoint i32 %190, %194, !dbg !23
  %199 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %198, !dbg !23
  %200 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !23
  store <4 x half> %200, ptr addrspace(3) %199, align 8, !dbg !23
  %201 = or disjoint i32 %183, 4096, !dbg !23
  %202 = or disjoint i32 %182, %201, !dbg !23
  %203 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %202, !dbg !23
  %204 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !23
  store <4 x half> %204, ptr addrspace(3) %203, align 8, !dbg !23
  %205 = or disjoint i32 %190, %201, !dbg !23
  %206 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %205, !dbg !23
  %207 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !23
  store <4 x half> %207, ptr addrspace(3) %206, align 8, !dbg !23
  %208 = or disjoint i32 %183, 6144, !dbg !23
  %209 = or disjoint i32 %182, %208, !dbg !23
  %210 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %209, !dbg !23
  %211 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !23
  store <4 x half> %211, ptr addrspace(3) %210, align 8, !dbg !23
  %212 = or disjoint i32 %190, %208, !dbg !23
  %213 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %212, !dbg !23
  %214 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !23
  store <4 x half> %214, ptr addrspace(3) %213, align 8, !dbg !23
  fence syncscope("workgroup") release, !dbg !23
  tail call void @llvm.amdgcn.s.barrier(), !dbg !23
  fence syncscope("workgroup") acquire, !dbg !23
  %215 = and i32 %28, 3, !dbg !23
  %216 = shl nuw nsw i32 %215, 5, !dbg !23
  %217 = icmp ugt i32 %27, 31, !dbg !23
  %218 = select i1 %217, i32 4, i32 0, !dbg !23
  %219 = or disjoint i32 %216, %160, !dbg !23
  %220 = or disjoint i32 %218, 8, !dbg !23
  %221 = or disjoint i32 %218, 16, !dbg !23
  %222 = or disjoint i32 %218, 24, !dbg !23
  %223 = or disjoint i32 %218, 32, !dbg !23
  %224 = or disjoint i32 %218, 40, !dbg !23
  %225 = or disjoint i32 %218, 48, !dbg !23
  %226 = or disjoint i32 %218, 56, !dbg !23
  %227 = lshr exact i32 %218, 2, !dbg !23
  %228 = xor i32 %227, %159, !dbg !23
  %229 = shl nuw nsw i32 %228, 2, !dbg !23
  %230 = shl nuw nsw i32 %219, 6, !dbg !23
  %231 = or disjoint i32 %229, %230, !dbg !23
  %232 = lshr exact i32 %220, 2, !dbg !23
  %233 = xor i32 %232, %159, !dbg !23
  %234 = shl nuw nsw i32 %233, 2, !dbg !23
  %235 = or disjoint i32 %234, %230, !dbg !23
  %236 = shl nuw nsw i32 %159, 2, !dbg !23
  %237 = xor i32 %221, %236, !dbg !23
  %238 = or disjoint i32 %230, %237, !dbg !23
  %239 = xor i32 %222, %236, !dbg !23
  %240 = or disjoint i32 %230, %239, !dbg !23
  %241 = xor i32 %223, %236, !dbg !23
  %242 = or disjoint i32 %230, %241, !dbg !23
  %243 = xor i32 %224, %236, !dbg !23
  %244 = or disjoint i32 %230, %243, !dbg !23
  %245 = xor i32 %225, %236, !dbg !23
  %246 = or disjoint i32 %230, %245, !dbg !23
  %247 = xor i32 %226, %236, !dbg !23
  %248 = or disjoint i32 %230, %247, !dbg !23
  %249 = getelementptr half, ptr addrspace(3) @global_smem, i32 %231, !dbg !23
  %250 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !23
  %251 = getelementptr half, ptr addrspace(3) @global_smem, i32 %235, !dbg !23
  %252 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !23
  %253 = getelementptr half, ptr addrspace(3) @global_smem, i32 %238, !dbg !23
  %254 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !23
  %255 = getelementptr half, ptr addrspace(3) @global_smem, i32 %240, !dbg !23
  %256 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !23
  %257 = getelementptr half, ptr addrspace(3) @global_smem, i32 %242, !dbg !23
  %258 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !23
  %259 = getelementptr half, ptr addrspace(3) @global_smem, i32 %244, !dbg !23
  %260 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !23
  %261 = getelementptr half, ptr addrspace(3) @global_smem, i32 %246, !dbg !23
  %262 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !23
  %263 = getelementptr half, ptr addrspace(3) @global_smem, i32 %248, !dbg !23
  %264 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !23
  %265 = lshr i32 %26, 2, !dbg !23
  %266 = and i32 %265, 12, !dbg !23
  %267 = or disjoint i32 %266, 16, !dbg !23
  %268 = or disjoint i32 %266, 32, !dbg !23
  %269 = or disjoint i32 %266, 48, !dbg !23
  %270 = xor i32 %266, %236, !dbg !23
  %271 = shl nuw nsw i32 %215, 10, !dbg !23
  %272 = shl nuw nsw i32 %159, 6, !dbg !23
  %273 = or disjoint i32 %271, %272, !dbg !23
  %274 = or disjoint i32 %273, %270, !dbg !23
  %275 = xor i32 %267, %236, !dbg !23
  %276 = or disjoint i32 %273, %275, !dbg !23
  %277 = xor i32 %268, %236, !dbg !23
  %278 = or disjoint i32 %273, %277, !dbg !23
  %279 = xor i32 %269, %236, !dbg !23
  %280 = or disjoint i32 %273, %279, !dbg !23
  %281 = or disjoint i32 %274, 4096, !dbg !23
  %282 = or disjoint i32 %276, 4096, !dbg !23
  %283 = or disjoint i32 %278, 4096, !dbg !23
  %284 = or disjoint i32 %280, 4096, !dbg !23
  %285 = getelementptr half, ptr addrspace(3) @global_smem, i32 %274, !dbg !23
  %286 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !23
  %287 = getelementptr half, ptr addrspace(3) @global_smem, i32 %276, !dbg !23
  %288 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !23
  %289 = getelementptr half, ptr addrspace(3) @global_smem, i32 %278, !dbg !23
  %290 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !23
  %291 = getelementptr half, ptr addrspace(3) @global_smem, i32 %280, !dbg !23
  %292 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !23
  %293 = getelementptr half, ptr addrspace(3) @global_smem, i32 %281, !dbg !23
  %294 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !23
  %295 = getelementptr half, ptr addrspace(3) @global_smem, i32 %282, !dbg !23
  %296 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !23
  %297 = getelementptr half, ptr addrspace(3) @global_smem, i32 %283, !dbg !23
  %298 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !23
  %299 = getelementptr half, ptr addrspace(3) @global_smem, i32 %284, !dbg !23
  %300 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !23
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %301 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !26
  store <4 x half> %301, ptr addrspace(3) %185, align 8, !dbg !26
  %302 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !26
  store <4 x half> %302, ptr addrspace(3) %192, align 8, !dbg !26
  %303 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !26
  store <4 x half> %303, ptr addrspace(3) %196, align 8, !dbg !26
  %304 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !26
  store <4 x half> %304, ptr addrspace(3) %199, align 8, !dbg !26
  %305 = shufflevector <8 x half> %unmaskedload9, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !26
  store <4 x half> %305, ptr addrspace(3) %203, align 8, !dbg !26
  %306 = shufflevector <8 x half> %unmaskedload9, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !26
  store <4 x half> %306, ptr addrspace(3) %206, align 8, !dbg !26
  %307 = shufflevector <8 x half> %unmaskedload10, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !26
  store <4 x half> %307, ptr addrspace(3) %210, align 8, !dbg !26
  %308 = shufflevector <8 x half> %unmaskedload10, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !26
  store <4 x half> %308, ptr addrspace(3) %213, align 8, !dbg !26
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %309 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !26
  %310 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !26
  %311 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !26
  %312 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !26
  %313 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !26
  %314 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !26
  %315 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !26
  %316 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !26
  %317 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !26
  %318 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !26
  %319 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !26
  %320 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !26
  %321 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !26
  %322 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !26
  %323 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !26
  %324 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !26
  %invariant.gep = getelementptr float, ptr addrspace(1) %69, i64 %83, !dbg !56
  %invariant.gep1347 = getelementptr float, ptr addrspace(1) %89, i64 %83, !dbg !56
  %325 = xor i32 %71, %127
  %326 = xor i32 %325, %165
  %327 = xor i32 %326, %167
  %328 = shl nuw nsw i32 %122, 6
  %329 = or disjoint i32 %327, %328
  %330 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %329
  %331 = or disjoint i32 %270, %272
  %332 = or disjoint i32 %275, %272
  %333 = or disjoint i32 %277, %272
  %334 = or disjoint i32 %279, %272
  %335 = getelementptr half, ptr addrspace(3) @global_smem, i32 %331
  %336 = getelementptr half, ptr addrspace(3) @global_smem, i32 %332
  %337 = getelementptr half, ptr addrspace(3) @global_smem, i32 %333
  %338 = getelementptr half, ptr addrspace(3) @global_smem, i32 %334
  %339 = xor i32 %70, %26
  %340 = and i32 %339, 12
  %341 = shl nuw nsw i32 %168, 4
  %342 = or disjoint i32 %341, %340
  %343 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %342
  %344 = or i32 %342, 1024
  %345 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %344
  %346 = and i32 %265, 3
  %347 = xor i32 %227, %346
  %348 = shl nuw nsw i32 %347, 2
  %349 = shl nuw nsw i32 %219, 4
  %350 = or disjoint i32 %348, %349
  %351 = xor i32 %232, %346
  %352 = shl nuw nsw i32 %351, 2
  %353 = or disjoint i32 %352, %349
  %354 = getelementptr half, ptr addrspace(3) @global_smem, i32 %350
  %355 = getelementptr half, ptr addrspace(3) @global_smem, i32 %353
  %356 = or disjoint i32 %328, %127
  %357 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %356
  %358 = shl nuw nsw i32 %27, 3
  %359 = and i32 %358, 256
  %360 = or disjoint i32 %359, %160
  %361 = or disjoint i32 %360, 64
  %362 = or disjoint i32 %360, 128
  %363 = or disjoint i32 %360, 192
  %364 = or disjoint i32 %360, 512
  %365 = or disjoint i32 %360, 576
  %366 = or disjoint i32 %360, 640
  %367 = or disjoint i32 %360, 704
  %368 = or disjoint i32 %360, 32
  %369 = or disjoint i32 %360, 96
  %370 = or disjoint i32 %360, 160
  %371 = or disjoint i32 %360, 224
  %372 = or disjoint i32 %360, 544
  %373 = or disjoint i32 %360, 608
  %374 = or disjoint i32 %360, 672
  %375 = or disjoint i32 %360, 736
  %376 = getelementptr half, ptr addrspace(3) @global_smem, i32 %360
  %377 = getelementptr half, ptr addrspace(3) @global_smem, i32 %361
  %378 = getelementptr half, ptr addrspace(3) @global_smem, i32 %362
  %379 = getelementptr half, ptr addrspace(3) @global_smem, i32 %363
  %380 = getelementptr half, ptr addrspace(3) @global_smem, i32 %364
  %381 = getelementptr half, ptr addrspace(3) @global_smem, i32 %365
  %382 = getelementptr half, ptr addrspace(3) @global_smem, i32 %366
  %383 = getelementptr half, ptr addrspace(3) @global_smem, i32 %367
  %384 = getelementptr half, ptr addrspace(3) @global_smem, i32 %368
  %385 = getelementptr half, ptr addrspace(3) @global_smem, i32 %369
  %386 = getelementptr half, ptr addrspace(3) @global_smem, i32 %370
  %387 = getelementptr half, ptr addrspace(3) @global_smem, i32 %371
  %388 = getelementptr half, ptr addrspace(3) @global_smem, i32 %372
  %389 = getelementptr half, ptr addrspace(3) @global_smem, i32 %373
  %390 = getelementptr half, ptr addrspace(3) @global_smem, i32 %374
  %391 = getelementptr half, ptr addrspace(3) @global_smem, i32 %375
  %392 = insertelement <2 x i32> poison, i32 %139, i64 0, !dbg !33
  %393 = shufflevector <2 x i32> %392, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !33
  %394 = or disjoint <2 x i32> %393, %75, !dbg !33
  %395 = or disjoint <2 x i32> %393, %76, !dbg !33
  %396 = shufflevector <4 x half> %unmaskedload21, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %397 = shufflevector <4 x half> %unmaskedload22, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %398 = shufflevector <4 x half> %unmaskedload23, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %399 = shufflevector <4 x half> %unmaskedload21, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %400 = shufflevector <4 x half> %unmaskedload22, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %401 = shufflevector <4 x half> %unmaskedload23, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %402 = shufflevector <4 x half> %unmaskedload26, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %403 = shufflevector <4 x half> %unmaskedload27, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %404 = shufflevector <4 x half> %unmaskedload28, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %405 = shufflevector <4 x half> %unmaskedload26, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %406 = shufflevector <4 x half> %unmaskedload27, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %407 = shufflevector <4 x half> %unmaskedload28, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %408 = shufflevector <4 x float> %unmaskedload14, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %409 = shufflevector <4 x float> %unmaskedload16, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %410 = shufflevector <4 x float> %unmaskedload29, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %411 = shufflevector <4 x float> %unmaskedload14, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %412 = shufflevector <4 x float> %unmaskedload16, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %413 = shufflevector <4 x float> %unmaskedload29, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %414 = shufflevector <4 x half> %unmaskedload25, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %415 = shufflevector <4 x half> %unmaskedload25, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %416 = shufflevector <4 x half> %unmaskedload20, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %417 = shufflevector <4 x half> %unmaskedload20, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %418 = shufflevector <4 x float> %unmaskedload12, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %419 = shufflevector <4 x float> %unmaskedload12, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %420 = insertelement <2 x i32> poison, i32 %170, i64 0, !dbg !57
  %421 = shufflevector <2 x i32> %420, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !57
  %422 = insertelement <2 x i32> poison, i32 %171, i64 0, !dbg !57
  %423 = shufflevector <2 x i32> %422, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !57
  br label %424, !dbg !56

424:                                              ; preds = %15, %424
  %425 = phi ptr addrspace(1) [ %153, %15 ], [ %533, %424 ]
  %426 = phi ptr addrspace(1) [ %136, %15 ], [ %525, %424 ]
  %.pn381384 = phi float [ %146, %15 ], [ %532, %424 ]
  %.pn401383 = phi float [ %145, %15 ], [ %531, %424 ]
  %.pn421382 = phi float [ %144, %15 ], [ %530, %424 ]
  %.pn441381 = phi float [ %143, %15 ], [ %529, %424 ]
  %.pn38.pn1380 = phi float [ %117, %15 ], [ %.pn381384, %424 ]
  %.pn40.pn1379 = phi float [ %116, %15 ], [ %.pn401383, %424 ]
  %.pn42.pn1378 = phi float [ %115, %15 ], [ %.pn421382, %424 ]
  %.pn44.pn1377 = phi float [ %114, %15 ], [ %.pn441381, %424 ]
  %.pn38.pn.pn1376 = phi float [ %103, %15 ], [ %.pn38.pn1380, %424 ]
  %.pn40.pn.pn1375 = phi float [ %102, %15 ], [ %.pn40.pn1379, %424 ]
  %.pn42.pn.pn1374 = phi float [ %101, %15 ], [ %.pn42.pn1378, %424 ]
  %.pn44.pn.pn1373 = phi float [ %100, %15 ], [ %.pn44.pn1377, %424 ]
  %.pn38.pn.pn.pn1372 = phi float [ %88, %15 ], [ %.pn38.pn.pn1376, %424 ]
  %.pn40.pn.pn.pn1371 = phi float [ %87, %15 ], [ %.pn40.pn.pn1375, %424 ]
  %.pn42.pn.pn.pn1370 = phi float [ %86, %15 ], [ %.pn42.pn.pn1374, %424 ]
  %.pn44.pn.pn.pn1369 = phi float [ %85, %15 ], [ %.pn44.pn.pn1373, %424 ]
  %427 = phi i32 [ %139, %15 ], [ %527, %424 ]
  %428 = phi float [ 0.000000e+00, %15 ], [ %805, %424 ]
  %429 = phi float [ 0.000000e+00, %15 ], [ %806, %424 ]
  %430 = phi float [ 0.000000e+00, %15 ], [ %807, %424 ]
  %431 = phi float [ 0.000000e+00, %15 ], [ %808, %424 ]
  %432 = phi float [ 0.000000e+00, %15 ], [ %809, %424 ]
  %433 = phi float [ 0.000000e+00, %15 ], [ %810, %424 ]
  %434 = phi float [ 0.000000e+00, %15 ], [ %811, %424 ]
  %435 = phi float [ 0.000000e+00, %15 ], [ %812, %424 ]
  %436 = phi float [ 0.000000e+00, %15 ], [ %813, %424 ]
  %437 = phi float [ 0.000000e+00, %15 ], [ %814, %424 ]
  %438 = phi float [ 0.000000e+00, %15 ], [ %815, %424 ]
  %439 = phi float [ 0.000000e+00, %15 ], [ %816, %424 ]
  %440 = phi float [ 0.000000e+00, %15 ], [ %817, %424 ]
  %441 = phi float [ 0.000000e+00, %15 ], [ %818, %424 ]
  %442 = phi float [ 0.000000e+00, %15 ], [ %819, %424 ]
  %443 = phi float [ 0.000000e+00, %15 ], [ %820, %424 ]
  %444 = phi float [ 0.000000e+00, %15 ], [ %839, %424 ]
  %445 = phi float [ 0.000000e+00, %15 ], [ %840, %424 ]
  %446 = phi float [ 0.000000e+00, %15 ], [ %841, %424 ]
  %447 = phi float [ 0.000000e+00, %15 ], [ %842, %424 ]
  %448 = phi float [ 0.000000e+00, %15 ], [ %843, %424 ]
  %449 = phi float [ 0.000000e+00, %15 ], [ %844, %424 ]
  %450 = phi float [ 0.000000e+00, %15 ], [ %845, %424 ]
  %451 = phi float [ 0.000000e+00, %15 ], [ %846, %424 ]
  %452 = phi float [ 0.000000e+00, %15 ], [ %847, %424 ]
  %453 = phi float [ 0.000000e+00, %15 ], [ %848, %424 ]
  %454 = phi float [ 0.000000e+00, %15 ], [ %849, %424 ]
  %455 = phi float [ 0.000000e+00, %15 ], [ %850, %424 ]
  %456 = phi float [ 0.000000e+00, %15 ], [ %851, %424 ]
  %457 = phi float [ 0.000000e+00, %15 ], [ %852, %424 ]
  %458 = phi float [ 0.000000e+00, %15 ], [ %853, %424 ]
  %459 = phi float [ 0.000000e+00, %15 ], [ %854, %424 ]
  %460 = phi float [ 0.000000e+00, %15 ], [ %685, %424 ]
  %461 = phi float [ 0.000000e+00, %15 ], [ %686, %424 ]
  %462 = phi float [ 0.000000e+00, %15 ], [ %687, %424 ]
  %463 = phi float [ 0.000000e+00, %15 ], [ %688, %424 ]
  %464 = phi float [ 0.000000e+00, %15 ], [ %689, %424 ]
  %465 = phi float [ 0.000000e+00, %15 ], [ %690, %424 ]
  %466 = phi float [ 0.000000e+00, %15 ], [ %691, %424 ]
  %467 = phi float [ 0.000000e+00, %15 ], [ %692, %424 ]
  %468 = phi float [ 0.000000e+00, %15 ], [ %693, %424 ]
  %469 = phi float [ 0.000000e+00, %15 ], [ %694, %424 ]
  %470 = phi float [ 0.000000e+00, %15 ], [ %695, %424 ]
  %471 = phi float [ 0.000000e+00, %15 ], [ %696, %424 ]
  %472 = phi float [ 0.000000e+00, %15 ], [ %697, %424 ]
  %473 = phi float [ 0.000000e+00, %15 ], [ %698, %424 ]
  %474 = phi float [ 0.000000e+00, %15 ], [ %699, %424 ]
  %475 = phi float [ 0.000000e+00, %15 ], [ %700, %424 ]
  %476 = phi float [ 0.000000e+00, %15 ], [ %703, %424 ]
  %477 = phi float [ 0.000000e+00, %15 ], [ %704, %424 ]
  %478 = phi float [ 0.000000e+00, %15 ], [ %705, %424 ]
  %479 = phi float [ 0.000000e+00, %15 ], [ %706, %424 ]
  %480 = phi float [ 0.000000e+00, %15 ], [ %707, %424 ]
  %481 = phi float [ 0.000000e+00, %15 ], [ %708, %424 ]
  %482 = phi float [ 0.000000e+00, %15 ], [ %709, %424 ]
  %483 = phi float [ 0.000000e+00, %15 ], [ %710, %424 ]
  %484 = phi float [ 0.000000e+00, %15 ], [ %711, %424 ]
  %485 = phi float [ 0.000000e+00, %15 ], [ %712, %424 ]
  %486 = phi float [ 0.000000e+00, %15 ], [ %713, %424 ]
  %487 = phi float [ 0.000000e+00, %15 ], [ %714, %424 ]
  %488 = phi float [ 0.000000e+00, %15 ], [ %715, %424 ]
  %489 = phi float [ 0.000000e+00, %15 ], [ %716, %424 ]
  %490 = phi float [ 0.000000e+00, %15 ], [ %717, %424 ]
  %491 = phi float [ 0.000000e+00, %15 ], [ %718, %424 ]
  %492 = phi i32 [ 0, %15 ], [ %855, %424 ]
  %493 = phi <2 x half> [ %396, %15 ], [ %494, %424 ]
  %494 = phi <2 x half> [ %397, %15 ], [ %495, %424 ]
  %495 = phi <2 x half> [ %398, %15 ], [ %860, %424 ]
  %496 = phi <2 x half> [ %399, %15 ], [ %497, %424 ]
  %497 = phi <2 x half> [ %400, %15 ], [ %498, %424 ]
  %498 = phi <2 x half> [ %401, %15 ], [ %861, %424 ]
  %499 = phi <2 x half> [ %402, %15 ], [ %500, %424 ]
  %500 = phi <2 x half> [ %403, %15 ], [ %501, %424 ]
  %501 = phi <2 x half> [ %404, %15 ], [ %862, %424 ]
  %502 = phi <2 x half> [ %405, %15 ], [ %503, %424 ]
  %503 = phi <2 x half> [ %406, %15 ], [ %504, %424 ]
  %504 = phi <2 x half> [ %407, %15 ], [ %863, %424 ]
  %505 = phi <2 x i32> [ %95, %15 ], [ %507, %424 ]
  %506 = phi <2 x float> [ %408, %15 ], [ %509, %424 ]
  %507 = phi <2 x i32> [ %109, %15 ], [ %508, %424 ]
  %508 = phi <2 x i32> [ %395, %15 ], [ %859, %424 ]
  %509 = phi <2 x float> [ %409, %15 ], [ %510, %424 ]
  %510 = phi <2 x float> [ %410, %15 ], [ %864, %424 ]
  %511 = phi <2 x i32> [ %96, %15 ], [ %513, %424 ]
  %512 = phi <2 x float> [ %411, %15 ], [ %515, %424 ]
  %513 = phi <2 x i32> [ %110, %15 ], [ %514, %424 ]
  %514 = phi <2 x i32> [ %394, %15 ], [ %858, %424 ]
  %515 = phi <2 x float> [ %412, %15 ], [ %516, %424 ]
  %516 = phi <2 x float> [ %413, %15 ], [ %865, %424 ]
  %517 = phi <2 x half> [ %414, %15 ], [ %502, %424 ]
  %518 = phi <2 x half> [ %415, %15 ], [ %499, %424 ]
  %519 = phi <2 x half> [ %416, %15 ], [ %496, %424 ]
  %520 = phi <2 x half> [ %417, %15 ], [ %493, %424 ]
  %521 = phi <2 x i32> [ %79, %15 ], [ %505, %424 ]
  %522 = phi <2 x float> [ %418, %15 ], [ %506, %424 ]
  %523 = phi <2 x i32> [ %80, %15 ], [ %511, %424 ]
  %524 = phi <2 x float> [ %419, %15 ], [ %512, %424 ]
  %525 = getelementptr half, ptr addrspace(1) %426, i64 %131, !dbg !47
  %526 = getelementptr half, ptr addrspace(1) %525, i64 %129, !dbg !48
  %unmaskedload1327 = load <4 x half>, ptr addrspace(1) %526, align 16, !dbg !48
  %527 = add nuw nsw i32 %427, 16, !dbg !39
  %528 = sext i32 %527 to i64, !dbg !34
  %gep = getelementptr float, ptr addrspace(1) %invariant.gep, i64 %528, !dbg !35
  %unmaskedload1328 = load <4 x float>, ptr addrspace(1) %gep, align 16, !dbg !35
  %529 = extractelement <4 x float> %unmaskedload1328, i64 0, !dbg !35
  %530 = extractelement <4 x float> %unmaskedload1328, i64 1, !dbg !35
  %531 = extractelement <4 x float> %unmaskedload1328, i64 2, !dbg !35
  %532 = extractelement <4 x float> %unmaskedload1328, i64 3, !dbg !35
  %533 = getelementptr half, ptr addrspace(1) %425, i64 %131, !dbg !51
  %534 = getelementptr half, ptr addrspace(1) %533, i64 %129, !dbg !52
  %unmaskedload1329 = load <4 x half>, ptr addrspace(1) %534, align 16, !dbg !52
  %gep1348 = getelementptr float, ptr addrspace(1) %invariant.gep1347, i64 %528, !dbg !38
  %unmaskedload1330 = load <4 x float>, ptr addrspace(1) %gep1348, align 16, !dbg !38
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %535 = shufflevector <2 x half> %520, <2 x half> %519, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !48
  store <4 x half> %535, ptr addrspace(3) %330, align 8, !dbg !48
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %536 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !48
  %537 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !48
  %538 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !48
  %539 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !48
  %540 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %536, <4 x half> %286, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %541 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %537, <4 x half> %288, <4 x float> %540, i32 0, i32 0, i32 0), !dbg !58
  %542 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %538, <4 x half> %290, <4 x float> %541, i32 0, i32 0, i32 0), !dbg !58
  %543 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %539, <4 x half> %292, <4 x float> %542, i32 0, i32 0, i32 0), !dbg !58
  %544 = extractelement <4 x float> %543, i64 0, !dbg !58
  %545 = extractelement <4 x float> %543, i64 1, !dbg !58
  %546 = extractelement <4 x float> %543, i64 2, !dbg !58
  %547 = extractelement <4 x float> %543, i64 3, !dbg !58
  %548 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %536, <4 x half> %294, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %549 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %537, <4 x half> %296, <4 x float> %548, i32 0, i32 0, i32 0), !dbg !58
  %550 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %538, <4 x half> %298, <4 x float> %549, i32 0, i32 0, i32 0), !dbg !58
  %551 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %539, <4 x half> %300, <4 x float> %550, i32 0, i32 0, i32 0), !dbg !58
  %552 = extractelement <4 x float> %551, i64 0, !dbg !58
  %553 = extractelement <4 x float> %551, i64 1, !dbg !58
  %554 = extractelement <4 x float> %551, i64 2, !dbg !58
  %555 = extractelement <4 x float> %551, i64 3, !dbg !58
  %556 = fsub float %544, %.pn44.pn.pn.pn1369, !dbg !59
  %557 = fsub float %545, %.pn42.pn.pn.pn1370, !dbg !59
  %558 = fsub float %546, %.pn40.pn.pn.pn1371, !dbg !59
  %559 = fsub float %547, %.pn38.pn.pn.pn1372, !dbg !59
  %560 = fsub float %552, %.pn44.pn.pn.pn1369, !dbg !59
  %561 = fsub float %553, %.pn42.pn.pn.pn1370, !dbg !59
  %562 = fsub float %554, %.pn40.pn.pn.pn1371, !dbg !59
  %563 = fsub float %555, %.pn38.pn.pn.pn1372, !dbg !59
  %564 = tail call float @llvm.amdgcn.exp2.f32(float %556), !dbg !60
  %565 = tail call float @llvm.amdgcn.exp2.f32(float %557), !dbg !60
  %566 = tail call float @llvm.amdgcn.exp2.f32(float %558), !dbg !60
  %567 = tail call float @llvm.amdgcn.exp2.f32(float %559), !dbg !60
  %568 = tail call float @llvm.amdgcn.exp2.f32(float %560), !dbg !60
  %569 = tail call float @llvm.amdgcn.exp2.f32(float %561), !dbg !60
  %570 = tail call float @llvm.amdgcn.exp2.f32(float %562), !dbg !60
  %571 = tail call float @llvm.amdgcn.exp2.f32(float %563), !dbg !60
  %572 = icmp slt <2 x i32> %521, %421, !dbg !57
  %573 = icmp slt <2 x i32> %523, %421, !dbg !57
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %574 = shufflevector <2 x half> %518, <2 x half> %517, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %575 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %460, i64 0, !dbg !62
  %576 = insertelement <16 x float> %575, float %461, i64 1, !dbg !62
  %577 = insertelement <16 x float> %576, float %462, i64 2, !dbg !62
  %578 = insertelement <16 x float> %577, float %463, i64 3, !dbg !62
  %579 = insertelement <16 x float> %578, float %464, i64 4, !dbg !62
  %580 = insertelement <16 x float> %579, float %465, i64 5, !dbg !62
  %581 = insertelement <16 x float> %580, float %466, i64 6, !dbg !62
  %582 = insertelement <16 x float> %581, float %467, i64 7, !dbg !62
  %583 = insertelement <16 x float> %582, float %468, i64 8, !dbg !62
  %584 = insertelement <16 x float> %583, float %469, i64 9, !dbg !62
  %585 = insertelement <16 x float> %584, float %470, i64 10, !dbg !62
  %586 = insertelement <16 x float> %585, float %471, i64 11, !dbg !62
  %587 = insertelement <16 x float> %586, float %472, i64 12, !dbg !62
  %588 = insertelement <16 x float> %587, float %473, i64 13, !dbg !62
  %589 = insertelement <16 x float> %588, float %474, i64 14, !dbg !62
  %590 = insertelement <16 x float> %589, float %475, i64 15, !dbg !62
  %591 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %476, i64 0, !dbg !62
  %592 = insertelement <16 x float> %591, float %477, i64 1, !dbg !62
  %593 = insertelement <16 x float> %592, float %478, i64 2, !dbg !62
  %594 = insertelement <16 x float> %593, float %479, i64 3, !dbg !62
  %595 = insertelement <16 x float> %594, float %480, i64 4, !dbg !62
  %596 = insertelement <16 x float> %595, float %481, i64 5, !dbg !62
  %597 = insertelement <16 x float> %596, float %482, i64 6, !dbg !62
  %598 = insertelement <16 x float> %597, float %483, i64 7, !dbg !62
  %599 = insertelement <16 x float> %598, float %484, i64 8, !dbg !62
  %600 = insertelement <16 x float> %599, float %485, i64 9, !dbg !62
  %601 = insertelement <16 x float> %600, float %486, i64 10, !dbg !62
  %602 = insertelement <16 x float> %601, float %487, i64 11, !dbg !62
  %603 = insertelement <16 x float> %602, float %488, i64 12, !dbg !62
  %604 = insertelement <16 x float> %603, float %489, i64 13, !dbg !62
  %605 = insertelement <16 x float> %604, float %490, i64 14, !dbg !62
  %606 = insertelement <16 x float> %605, float %491, i64 15, !dbg !62
  %607 = insertelement <2 x float> poison, float %564, i64 0, !dbg !63
  %608 = insertelement <2 x float> %607, float %565, i64 1, !dbg !63
  %609 = select <2 x i1> %572, <2 x float> zeroinitializer, <2 x float> %608, !dbg !63
  %610 = extractelement <2 x float> %609, i64 0, !dbg !61
  %611 = fptrunc float %610 to half, !dbg !61
  %612 = extractelement <2 x float> %609, i64 1, !dbg !61
  %613 = fptrunc float %612 to half, !dbg !61
  %614 = insertelement <4 x half> poison, half %611, i64 0, !dbg !61
  %615 = insertelement <4 x half> %614, half %613, i64 1, !dbg !61
  %616 = insertelement <2 x float> poison, float %566, i64 0, !dbg !63
  %617 = insertelement <2 x float> %616, float %567, i64 1, !dbg !63
  %618 = select <2 x i1> %573, <2 x float> zeroinitializer, <2 x float> %617, !dbg !63
  %619 = extractelement <2 x float> %618, i64 0, !dbg !61
  %620 = fptrunc float %619 to half, !dbg !61
  %621 = extractelement <2 x float> %618, i64 1, !dbg !61
  %622 = fptrunc float %621 to half, !dbg !61
  %623 = insertelement <4 x half> %615, half %620, i64 2, !dbg !61
  %624 = insertelement <4 x half> %623, half %622, i64 3, !dbg !61
  store <4 x half> %624, ptr addrspace(3) %343, align 8, !dbg !61
  %625 = icmp slt <2 x i32> %521, %423, !dbg !57
  %626 = insertelement <2 x float> poison, float %568, i64 0, !dbg !63
  %627 = insertelement <2 x float> %626, float %569, i64 1, !dbg !63
  %628 = select <2 x i1> %625, <2 x float> zeroinitializer, <2 x float> %627, !dbg !63
  %629 = extractelement <2 x float> %628, i64 0, !dbg !61
  %630 = fptrunc float %629 to half, !dbg !61
  %631 = extractelement <2 x float> %628, i64 1, !dbg !61
  %632 = fptrunc float %631 to half, !dbg !61
  %633 = insertelement <4 x half> poison, half %630, i64 0, !dbg !61
  %634 = insertelement <4 x half> %633, half %632, i64 1, !dbg !61
  %635 = icmp slt <2 x i32> %523, %423, !dbg !57
  %636 = insertelement <2 x float> poison, float %570, i64 0, !dbg !63
  %637 = insertelement <2 x float> %636, float %571, i64 1, !dbg !63
  %638 = select <2 x i1> %635, <2 x float> zeroinitializer, <2 x float> %637, !dbg !63
  %639 = extractelement <2 x float> %638, i64 0, !dbg !61
  %640 = fptrunc float %639 to half, !dbg !61
  %641 = extractelement <2 x float> %638, i64 1, !dbg !61
  %642 = fptrunc float %641 to half, !dbg !61
  %643 = insertelement <4 x half> %634, half %640, i64 2, !dbg !61
  %644 = insertelement <4 x half> %643, half %642, i64 3, !dbg !61
  store <4 x half> %644, ptr addrspace(3) %345, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %645 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !61
  %646 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  store <4 x half> %574, ptr addrspace(3) %357, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %647 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !52
  %648 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !52
  %649 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !52
  %650 = shufflevector <1 x half> %649, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %651 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !52
  %652 = shufflevector <1 x half> %651, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %653 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !52
  %654 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !52
  %655 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !52
  %656 = shufflevector <1 x half> %655, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %657 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !52
  %658 = shufflevector <1 x half> %657, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %659 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !52
  %660 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !52
  %661 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !52
  %662 = shufflevector <1 x half> %661, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %663 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !52
  %664 = shufflevector <1 x half> %663, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %665 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !52
  %666 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !52
  %667 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !52
  %668 = shufflevector <1 x half> %667, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %669 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !52
  %670 = shufflevector <1 x half> %669, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %671 = shufflevector <1 x half> %647, <1 x half> %648, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %672 = shufflevector <4 x half> %671, <4 x half> %650, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %673 = shufflevector <4 x half> %672, <4 x half> %652, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %674 = shufflevector <1 x half> %653, <1 x half> %654, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %675 = shufflevector <4 x half> %674, <4 x half> %656, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %676 = shufflevector <4 x half> %675, <4 x half> %658, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %677 = shufflevector <1 x half> %659, <1 x half> %660, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %678 = shufflevector <4 x half> %677, <4 x half> %662, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %679 = shufflevector <4 x half> %678, <4 x half> %664, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %680 = shufflevector <1 x half> %665, <1 x half> %666, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %681 = shufflevector <4 x half> %680, <4 x half> %668, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %682 = shufflevector <4 x half> %681, <4 x half> %670, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %683 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %673, <4 x half> %645, <16 x float> %590, i32 0, i32 0, i32 0), !dbg !62
  %684 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %676, <4 x half> %646, <16 x float> %683, i32 0, i32 0, i32 0), !dbg !62
  %685 = extractelement <16 x float> %684, i64 0, !dbg !62
  %686 = extractelement <16 x float> %684, i64 1, !dbg !62
  %687 = extractelement <16 x float> %684, i64 2, !dbg !62
  %688 = extractelement <16 x float> %684, i64 3, !dbg !62
  %689 = extractelement <16 x float> %684, i64 4, !dbg !62
  %690 = extractelement <16 x float> %684, i64 5, !dbg !62
  %691 = extractelement <16 x float> %684, i64 6, !dbg !62
  %692 = extractelement <16 x float> %684, i64 7, !dbg !62
  %693 = extractelement <16 x float> %684, i64 8, !dbg !62
  %694 = extractelement <16 x float> %684, i64 9, !dbg !62
  %695 = extractelement <16 x float> %684, i64 10, !dbg !62
  %696 = extractelement <16 x float> %684, i64 11, !dbg !62
  %697 = extractelement <16 x float> %684, i64 12, !dbg !62
  %698 = extractelement <16 x float> %684, i64 13, !dbg !62
  %699 = extractelement <16 x float> %684, i64 14, !dbg !62
  %700 = extractelement <16 x float> %684, i64 15, !dbg !62
  %701 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %679, <4 x half> %645, <16 x float> %606, i32 0, i32 0, i32 0), !dbg !62
  %702 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %682, <4 x half> %646, <16 x float> %701, i32 0, i32 0, i32 0), !dbg !62
  %703 = extractelement <16 x float> %702, i64 0, !dbg !62
  %704 = extractelement <16 x float> %702, i64 1, !dbg !62
  %705 = extractelement <16 x float> %702, i64 2, !dbg !62
  %706 = extractelement <16 x float> %702, i64 3, !dbg !62
  %707 = extractelement <16 x float> %702, i64 4, !dbg !62
  %708 = extractelement <16 x float> %702, i64 5, !dbg !62
  %709 = extractelement <16 x float> %702, i64 6, !dbg !62
  %710 = extractelement <16 x float> %702, i64 7, !dbg !62
  %711 = extractelement <16 x float> %702, i64 8, !dbg !62
  %712 = extractelement <16 x float> %702, i64 9, !dbg !62
  %713 = extractelement <16 x float> %702, i64 10, !dbg !62
  %714 = extractelement <16 x float> %702, i64 11, !dbg !62
  %715 = extractelement <16 x float> %702, i64 12, !dbg !62
  %716 = extractelement <16 x float> %702, i64 13, !dbg !62
  %717 = extractelement <16 x float> %702, i64 14, !dbg !62
  %718 = extractelement <16 x float> %702, i64 15, !dbg !62
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  store <4 x half> %574, ptr addrspace(3) %330, align 8, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %719 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !64
  %720 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !64
  %721 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !64
  %722 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !64
  %723 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %719, <4 x half> %317, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %724 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %720, <4 x half> %318, <4 x float> %723, i32 0, i32 0, i32 0), !dbg !65
  %725 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %721, <4 x half> %319, <4 x float> %724, i32 0, i32 0, i32 0), !dbg !65
  %726 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %722, <4 x half> %320, <4 x float> %725, i32 0, i32 0, i32 0), !dbg !65
  %727 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %719, <4 x half> %321, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %728 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %720, <4 x half> %322, <4 x float> %727, i32 0, i32 0, i32 0), !dbg !65
  %729 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %721, <4 x half> %323, <4 x float> %728, i32 0, i32 0, i32 0), !dbg !65
  %730 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %722, <4 x half> %324, <4 x float> %729, i32 0, i32 0, i32 0), !dbg !65
  %731 = shufflevector <4 x float> %726, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %732 = fsub <2 x float> %731, %522, !dbg !66
  %733 = shufflevector <4 x float> %726, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %734 = fsub <2 x float> %733, %524, !dbg !66
  %735 = shufflevector <4 x float> %730, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %736 = fsub <2 x float> %735, %522, !dbg !66
  %737 = shufflevector <4 x float> %730, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %738 = fsub <2 x float> %737, %524, !dbg !66
  %739 = fmul <2 x float> %609, %732, !dbg !67
  %740 = fmul <2 x float> %618, %734, !dbg !67
  %741 = fmul <2 x float> %628, %736, !dbg !67
  %742 = fmul <2 x float> %638, %738, !dbg !67
  %743 = fptrunc <2 x float> %739 to <2 x half>, !dbg !68
  %744 = fptrunc <2 x float> %740 to <2 x half>, !dbg !68
  %745 = fptrunc <2 x float> %741 to <2 x half>, !dbg !68
  %746 = fptrunc <2 x float> %742 to <2 x half>, !dbg !68
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <4 x half> %535, ptr addrspace(3) %357, align 8, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %747 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %748 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !69
  %749 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %750 = shufflevector <1 x half> %749, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %751 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !69
  %752 = shufflevector <1 x half> %751, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %753 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %754 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !69
  %755 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %756 = shufflevector <1 x half> %755, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %757 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !69
  %758 = shufflevector <1 x half> %757, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %759 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %760 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !69
  %761 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %762 = shufflevector <1 x half> %761, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %763 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !69
  %764 = shufflevector <1 x half> %763, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %765 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %766 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !69
  %767 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %768 = shufflevector <1 x half> %767, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %769 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !69
  %770 = shufflevector <1 x half> %769, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %771 = shufflevector <2 x half> %743, <2 x half> %744, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %771, ptr addrspace(3) %343, align 8, !dbg !68
  %772 = shufflevector <2 x half> %745, <2 x half> %746, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %772, ptr addrspace(3) %345, align 8, !dbg !68
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %773 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !68
  %774 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !68
  %775 = shufflevector <1 x half> %747, <1 x half> %748, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %776 = shufflevector <4 x half> %775, <4 x half> %750, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %777 = shufflevector <4 x half> %776, <4 x half> %752, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %778 = shufflevector <1 x half> %753, <1 x half> %754, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %779 = shufflevector <4 x half> %778, <4 x half> %756, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %780 = shufflevector <4 x half> %779, <4 x half> %758, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %781 = shufflevector <1 x half> %759, <1 x half> %760, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %782 = shufflevector <4 x half> %781, <4 x half> %762, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %783 = shufflevector <4 x half> %782, <4 x half> %764, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %784 = shufflevector <1 x half> %765, <1 x half> %766, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %785 = shufflevector <4 x half> %784, <4 x half> %768, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %786 = shufflevector <4 x half> %785, <4 x half> %770, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %787 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %428, i64 0, !dbg !70
  %788 = insertelement <16 x float> %787, float %429, i64 1, !dbg !70
  %789 = insertelement <16 x float> %788, float %430, i64 2, !dbg !70
  %790 = insertelement <16 x float> %789, float %431, i64 3, !dbg !70
  %791 = insertelement <16 x float> %790, float %432, i64 4, !dbg !70
  %792 = insertelement <16 x float> %791, float %433, i64 5, !dbg !70
  %793 = insertelement <16 x float> %792, float %434, i64 6, !dbg !70
  %794 = insertelement <16 x float> %793, float %435, i64 7, !dbg !70
  %795 = insertelement <16 x float> %794, float %436, i64 8, !dbg !70
  %796 = insertelement <16 x float> %795, float %437, i64 9, !dbg !70
  %797 = insertelement <16 x float> %796, float %438, i64 10, !dbg !70
  %798 = insertelement <16 x float> %797, float %439, i64 11, !dbg !70
  %799 = insertelement <16 x float> %798, float %440, i64 12, !dbg !70
  %800 = insertelement <16 x float> %799, float %441, i64 13, !dbg !70
  %801 = insertelement <16 x float> %800, float %442, i64 14, !dbg !70
  %802 = insertelement <16 x float> %801, float %443, i64 15, !dbg !70
  %803 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %777, <4 x half> %773, <16 x float> %802, i32 0, i32 0, i32 0), !dbg !70
  %804 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %780, <4 x half> %774, <16 x float> %803, i32 0, i32 0, i32 0), !dbg !70
  %805 = extractelement <16 x float> %804, i64 0, !dbg !70
  %806 = extractelement <16 x float> %804, i64 1, !dbg !70
  %807 = extractelement <16 x float> %804, i64 2, !dbg !70
  %808 = extractelement <16 x float> %804, i64 3, !dbg !70
  %809 = extractelement <16 x float> %804, i64 4, !dbg !70
  %810 = extractelement <16 x float> %804, i64 5, !dbg !70
  %811 = extractelement <16 x float> %804, i64 6, !dbg !70
  %812 = extractelement <16 x float> %804, i64 7, !dbg !70
  %813 = extractelement <16 x float> %804, i64 8, !dbg !70
  %814 = extractelement <16 x float> %804, i64 9, !dbg !70
  %815 = extractelement <16 x float> %804, i64 10, !dbg !70
  %816 = extractelement <16 x float> %804, i64 11, !dbg !70
  %817 = extractelement <16 x float> %804, i64 12, !dbg !70
  %818 = extractelement <16 x float> %804, i64 13, !dbg !70
  %819 = extractelement <16 x float> %804, i64 14, !dbg !70
  %820 = extractelement <16 x float> %804, i64 15, !dbg !70
  %821 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %444, i64 0, !dbg !70
  %822 = insertelement <16 x float> %821, float %445, i64 1, !dbg !70
  %823 = insertelement <16 x float> %822, float %446, i64 2, !dbg !70
  %824 = insertelement <16 x float> %823, float %447, i64 3, !dbg !70
  %825 = insertelement <16 x float> %824, float %448, i64 4, !dbg !70
  %826 = insertelement <16 x float> %825, float %449, i64 5, !dbg !70
  %827 = insertelement <16 x float> %826, float %450, i64 6, !dbg !70
  %828 = insertelement <16 x float> %827, float %451, i64 7, !dbg !70
  %829 = insertelement <16 x float> %828, float %452, i64 8, !dbg !70
  %830 = insertelement <16 x float> %829, float %453, i64 9, !dbg !70
  %831 = insertelement <16 x float> %830, float %454, i64 10, !dbg !70
  %832 = insertelement <16 x float> %831, float %455, i64 11, !dbg !70
  %833 = insertelement <16 x float> %832, float %456, i64 12, !dbg !70
  %834 = insertelement <16 x float> %833, float %457, i64 13, !dbg !70
  %835 = insertelement <16 x float> %834, float %458, i64 14, !dbg !70
  %836 = insertelement <16 x float> %835, float %459, i64 15, !dbg !70
  %837 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %783, <4 x half> %773, <16 x float> %836, i32 0, i32 0, i32 0), !dbg !70
  %838 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %786, <4 x half> %774, <16 x float> %837, i32 0, i32 0, i32 0), !dbg !70
  %839 = extractelement <16 x float> %838, i64 0, !dbg !70
  %840 = extractelement <16 x float> %838, i64 1, !dbg !70
  %841 = extractelement <16 x float> %838, i64 2, !dbg !70
  %842 = extractelement <16 x float> %838, i64 3, !dbg !70
  %843 = extractelement <16 x float> %838, i64 4, !dbg !70
  %844 = extractelement <16 x float> %838, i64 5, !dbg !70
  %845 = extractelement <16 x float> %838, i64 6, !dbg !70
  %846 = extractelement <16 x float> %838, i64 7, !dbg !70
  %847 = extractelement <16 x float> %838, i64 8, !dbg !70
  %848 = extractelement <16 x float> %838, i64 9, !dbg !70
  %849 = extractelement <16 x float> %838, i64 10, !dbg !70
  %850 = extractelement <16 x float> %838, i64 11, !dbg !70
  %851 = extractelement <16 x float> %838, i64 12, !dbg !70
  %852 = extractelement <16 x float> %838, i64 13, !dbg !70
  %853 = extractelement <16 x float> %838, i64 14, !dbg !70
  %854 = extractelement <16 x float> %838, i64 15, !dbg !70
  %855 = add nuw nsw i32 %492, 1, !dbg !56
  %856 = insertelement <2 x i32> poison, i32 %527, i64 0, !dbg !33
  %857 = shufflevector <2 x i32> %856, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !33
  %858 = or disjoint <2 x i32> %857, %75, !dbg !33
  %859 = or disjoint <2 x i32> %857, %76, !dbg !33
  %exitcond.not = icmp eq i32 %855, 4, !dbg !56
  %860 = shufflevector <4 x half> %unmaskedload1327, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %861 = shufflevector <4 x half> %unmaskedload1327, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %862 = shufflevector <4 x half> %unmaskedload1329, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %863 = shufflevector <4 x half> %unmaskedload1329, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %864 = shufflevector <4 x float> %unmaskedload1330, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %865 = shufflevector <4 x float> %unmaskedload1330, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  br i1 %exitcond.not, label %866, label %424, !dbg !56

866:                                              ; preds = %424
  %867 = getelementptr half, ptr addrspace(1) %7, i64 %22, !dbg !71
  %868 = or disjoint i32 %30, 8, !dbg !21
  %869 = or disjoint i32 %30, 24, !dbg !21
  %870 = or disjoint i32 %30, 40, !dbg !21
  %871 = or disjoint i32 %30, 56, !dbg !21
  %872 = add i32 %25, 128, !dbg !72
  %873 = sext i32 %872 to i64, !dbg !73
  %874 = getelementptr float, ptr addrspace(1) %69, i64 %873, !dbg !73
  %875 = sub i32 %14, %872, !dbg !75
  %876 = icmp sgt i32 %875, 31, !dbg !76
  %877 = zext nneg i32 %30 to i64, !dbg !77
  %878 = getelementptr float, ptr addrspace(1) %874, i64 %877, !dbg !77
  %879 = zext nneg i32 %868 to i64, !dbg !77
  %880 = getelementptr float, ptr addrspace(1) %874, i64 %879, !dbg !77
  %881 = zext nneg i32 %173 to i64, !dbg !77
  %882 = getelementptr float, ptr addrspace(1) %874, i64 %881, !dbg !77
  %883 = zext nneg i32 %869 to i64, !dbg !77
  %884 = getelementptr float, ptr addrspace(1) %874, i64 %883, !dbg !77
  %885 = insertelement <4 x i1> poison, i1 %876, i64 0, !dbg !77
  %886 = shufflevector <4 x i1> %885, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !77
  %887 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %878, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !77
  %888 = extractelement <4 x float> %887, i64 0, !dbg !77
  %889 = extractelement <4 x float> %887, i64 1, !dbg !77
  %890 = extractelement <4 x float> %887, i64 2, !dbg !77
  %891 = extractelement <4 x float> %887, i64 3, !dbg !77
  %892 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %880, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !77
  %893 = extractelement <4 x float> %892, i64 0, !dbg !77
  %894 = extractelement <4 x float> %892, i64 1, !dbg !77
  %895 = extractelement <4 x float> %892, i64 2, !dbg !77
  %896 = extractelement <4 x float> %892, i64 3, !dbg !77
  %897 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %882, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !77
  %898 = extractelement <4 x float> %897, i64 0, !dbg !77
  %899 = extractelement <4 x float> %897, i64 1, !dbg !77
  %900 = extractelement <4 x float> %897, i64 2, !dbg !77
  %901 = extractelement <4 x float> %897, i64 3, !dbg !77
  %902 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %884, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !77
  %903 = extractelement <4 x float> %902, i64 0, !dbg !77
  %904 = extractelement <4 x float> %902, i64 1, !dbg !77
  %905 = extractelement <4 x float> %902, i64 2, !dbg !77
  %906 = extractelement <4 x float> %902, i64 3, !dbg !77
  %907 = getelementptr float, ptr addrspace(1) %89, i64 %873, !dbg !78
  %908 = getelementptr float, ptr addrspace(1) %907, i64 %877, !dbg !79
  %909 = getelementptr float, ptr addrspace(1) %907, i64 %879, !dbg !79
  %910 = getelementptr float, ptr addrspace(1) %907, i64 %881, !dbg !79
  %911 = getelementptr float, ptr addrspace(1) %907, i64 %883, !dbg !79
  %912 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %908, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !79
  %913 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %909, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !79
  %914 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %910, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !79
  %915 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %911, i32 16, <4 x i1> %886, <4 x float> zeroinitializer), !dbg !79
  %916 = add i32 %25, 160, !dbg !80
  %917 = sext i32 %916 to i64, !dbg !73
  %918 = getelementptr float, ptr addrspace(1) %69, i64 %917, !dbg !73
  %919 = icmp sgt i32 %875, 63, !dbg !76
  %920 = getelementptr float, ptr addrspace(1) %918, i64 %877, !dbg !77
  %921 = getelementptr float, ptr addrspace(1) %918, i64 %879, !dbg !77
  %922 = getelementptr float, ptr addrspace(1) %918, i64 %881, !dbg !77
  %923 = getelementptr float, ptr addrspace(1) %918, i64 %883, !dbg !77
  %924 = insertelement <4 x i1> poison, i1 %919, i64 0, !dbg !77
  %925 = shufflevector <4 x i1> %924, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !77
  %926 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %920, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !77
  %927 = extractelement <4 x float> %926, i64 0, !dbg !77
  %928 = extractelement <4 x float> %926, i64 1, !dbg !77
  %929 = extractelement <4 x float> %926, i64 2, !dbg !77
  %930 = extractelement <4 x float> %926, i64 3, !dbg !77
  %931 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %921, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !77
  %932 = extractelement <4 x float> %931, i64 0, !dbg !77
  %933 = extractelement <4 x float> %931, i64 1, !dbg !77
  %934 = extractelement <4 x float> %931, i64 2, !dbg !77
  %935 = extractelement <4 x float> %931, i64 3, !dbg !77
  %936 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %922, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !77
  %937 = extractelement <4 x float> %936, i64 0, !dbg !77
  %938 = extractelement <4 x float> %936, i64 1, !dbg !77
  %939 = extractelement <4 x float> %936, i64 2, !dbg !77
  %940 = extractelement <4 x float> %936, i64 3, !dbg !77
  %941 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %923, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !77
  %942 = extractelement <4 x float> %941, i64 0, !dbg !77
  %943 = extractelement <4 x float> %941, i64 1, !dbg !77
  %944 = extractelement <4 x float> %941, i64 2, !dbg !77
  %945 = extractelement <4 x float> %941, i64 3, !dbg !77
  %946 = getelementptr float, ptr addrspace(1) %89, i64 %917, !dbg !78
  %947 = getelementptr float, ptr addrspace(1) %946, i64 %877, !dbg !79
  %948 = getelementptr float, ptr addrspace(1) %946, i64 %879, !dbg !79
  %949 = getelementptr float, ptr addrspace(1) %946, i64 %881, !dbg !79
  %950 = getelementptr float, ptr addrspace(1) %946, i64 %883, !dbg !79
  %951 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %947, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !79
  %952 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %948, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !79
  %953 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %949, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !79
  %954 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %950, i32 16, <4 x i1> %925, <4 x float> zeroinitializer), !dbg !79
  %955 = add i32 %25, 192, !dbg !80
  %956 = sext i32 %955 to i64, !dbg !73
  %957 = getelementptr float, ptr addrspace(1) %69, i64 %956, !dbg !73
  %958 = icmp sgt i32 %875, 95, !dbg !76
  %959 = getelementptr float, ptr addrspace(1) %957, i64 %877, !dbg !77
  %960 = getelementptr float, ptr addrspace(1) %957, i64 %879, !dbg !77
  %961 = getelementptr float, ptr addrspace(1) %957, i64 %881, !dbg !77
  %962 = getelementptr float, ptr addrspace(1) %957, i64 %883, !dbg !77
  %963 = insertelement <4 x i1> poison, i1 %958, i64 0, !dbg !77
  %964 = shufflevector <4 x i1> %963, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !77
  %965 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %959, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !77
  %966 = extractelement <4 x float> %965, i64 0, !dbg !77
  %967 = extractelement <4 x float> %965, i64 1, !dbg !77
  %968 = extractelement <4 x float> %965, i64 2, !dbg !77
  %969 = extractelement <4 x float> %965, i64 3, !dbg !77
  %970 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %960, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !77
  %971 = extractelement <4 x float> %970, i64 0, !dbg !77
  %972 = extractelement <4 x float> %970, i64 1, !dbg !77
  %973 = extractelement <4 x float> %970, i64 2, !dbg !77
  %974 = extractelement <4 x float> %970, i64 3, !dbg !77
  %975 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %961, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !77
  %976 = extractelement <4 x float> %975, i64 0, !dbg !77
  %977 = extractelement <4 x float> %975, i64 1, !dbg !77
  %978 = extractelement <4 x float> %975, i64 2, !dbg !77
  %979 = extractelement <4 x float> %975, i64 3, !dbg !77
  %980 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %962, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !77
  %981 = extractelement <4 x float> %980, i64 0, !dbg !77
  %982 = extractelement <4 x float> %980, i64 1, !dbg !77
  %983 = extractelement <4 x float> %980, i64 2, !dbg !77
  %984 = extractelement <4 x float> %980, i64 3, !dbg !77
  %985 = getelementptr float, ptr addrspace(1) %89, i64 %956, !dbg !78
  %986 = getelementptr float, ptr addrspace(1) %985, i64 %877, !dbg !79
  %987 = getelementptr float, ptr addrspace(1) %985, i64 %879, !dbg !79
  %988 = getelementptr float, ptr addrspace(1) %985, i64 %881, !dbg !79
  %989 = getelementptr float, ptr addrspace(1) %985, i64 %883, !dbg !79
  %990 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %986, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !79
  %991 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %987, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !79
  %992 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %988, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !79
  %993 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %989, i32 16, <4 x i1> %964, <4 x float> zeroinitializer), !dbg !79
  %994 = mul i32 %12, %872, !dbg !81
  %995 = sext i32 %994 to i64, !dbg !81
  %996 = getelementptr half, ptr addrspace(1) %120, i64 %995, !dbg !81
  %997 = shl i32 %12, 5, !dbg !82
  %998 = sext i32 %997 to i64, !dbg !83
  %999 = getelementptr half, ptr addrspace(1) %996, i64 %998, !dbg !83
  %1000 = getelementptr half, ptr addrspace(1) %996, i64 %53, !dbg !84
  %1001 = insertelement <8 x i1> poison, i1 %876, i64 0, !dbg !84
  %1002 = shufflevector <8 x i1> %1001, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !84
  %1003 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1000, i32 16, <8 x i1> %1002, <8 x half> zeroinitializer), !dbg !84
  %1004 = getelementptr half, ptr addrspace(1) %999, i64 %998, !dbg !83
  %1005 = getelementptr half, ptr addrspace(1) %999, i64 %53, !dbg !84
  %1006 = insertelement <8 x i1> poison, i1 %919, i64 0, !dbg !84
  %1007 = shufflevector <8 x i1> %1006, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !84
  %1008 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1005, i32 16, <8 x i1> %1007, <8 x half> zeroinitializer), !dbg !84
  %1009 = getelementptr half, ptr addrspace(1) %1004, i64 %998, !dbg !83
  %1010 = getelementptr half, ptr addrspace(1) %1004, i64 %53, !dbg !84
  %1011 = insertelement <8 x i1> poison, i1 %958, i64 0, !dbg !84
  %1012 = shufflevector <8 x i1> %1011, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !84
  %1013 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1010, i32 16, <8 x i1> %1012, <8 x half> zeroinitializer), !dbg !84
  %1014 = icmp sgt i32 %875, 127, !dbg !76
  %1015 = getelementptr half, ptr addrspace(1) %1009, i64 %53, !dbg !84
  %1016 = insertelement <8 x i1> poison, i1 %1014, i64 0, !dbg !84
  %1017 = shufflevector <8 x i1> %1016, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !84
  %1018 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1015, i32 16, <8 x i1> %1017, <8 x half> zeroinitializer), !dbg !84
  %1019 = add i32 %25, 224, !dbg !80
  %1020 = sext i32 %1019 to i64, !dbg !73
  %1021 = getelementptr float, ptr addrspace(1) %69, i64 %1020, !dbg !73
  %1022 = getelementptr float, ptr addrspace(1) %1021, i64 %877, !dbg !77
  %1023 = getelementptr float, ptr addrspace(1) %1021, i64 %879, !dbg !77
  %1024 = getelementptr float, ptr addrspace(1) %1021, i64 %881, !dbg !77
  %1025 = getelementptr float, ptr addrspace(1) %1021, i64 %883, !dbg !77
  %1026 = insertelement <4 x i1> poison, i1 %1014, i64 0, !dbg !77
  %1027 = shufflevector <4 x i1> %1026, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !77
  %1028 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1022, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !77
  %1029 = extractelement <4 x float> %1028, i64 0, !dbg !77
  %1030 = extractelement <4 x float> %1028, i64 1, !dbg !77
  %1031 = extractelement <4 x float> %1028, i64 2, !dbg !77
  %1032 = extractelement <4 x float> %1028, i64 3, !dbg !77
  %1033 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1023, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !77
  %1034 = extractelement <4 x float> %1033, i64 0, !dbg !77
  %1035 = extractelement <4 x float> %1033, i64 1, !dbg !77
  %1036 = extractelement <4 x float> %1033, i64 2, !dbg !77
  %1037 = extractelement <4 x float> %1033, i64 3, !dbg !77
  %1038 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1024, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !77
  %1039 = extractelement <4 x float> %1038, i64 0, !dbg !77
  %1040 = extractelement <4 x float> %1038, i64 1, !dbg !77
  %1041 = extractelement <4 x float> %1038, i64 2, !dbg !77
  %1042 = extractelement <4 x float> %1038, i64 3, !dbg !77
  %1043 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1025, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !77
  %1044 = extractelement <4 x float> %1043, i64 0, !dbg !77
  %1045 = extractelement <4 x float> %1043, i64 1, !dbg !77
  %1046 = extractelement <4 x float> %1043, i64 2, !dbg !77
  %1047 = extractelement <4 x float> %1043, i64 3, !dbg !77
  %1048 = getelementptr half, ptr addrspace(1) %147, i64 %995, !dbg !85
  %1049 = getelementptr half, ptr addrspace(1) %1048, i64 %998, !dbg !86
  %1050 = getelementptr half, ptr addrspace(1) %1048, i64 %53, !dbg !87
  %1051 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1050, i32 16, <8 x i1> %1002, <8 x half> zeroinitializer), !dbg !87
  %1052 = getelementptr half, ptr addrspace(1) %1049, i64 %998, !dbg !86
  %1053 = getelementptr half, ptr addrspace(1) %1049, i64 %53, !dbg !87
  %1054 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1053, i32 16, <8 x i1> %1007, <8 x half> zeroinitializer), !dbg !87
  %1055 = getelementptr half, ptr addrspace(1) %1052, i64 %998, !dbg !86
  %1056 = getelementptr half, ptr addrspace(1) %1052, i64 %53, !dbg !87
  %1057 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1056, i32 16, <8 x i1> %1012, <8 x half> zeroinitializer), !dbg !87
  %1058 = getelementptr half, ptr addrspace(1) %1055, i64 %53, !dbg !87
  %1059 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %1058, i32 16, <8 x i1> %1017, <8 x half> zeroinitializer), !dbg !87
  %1060 = getelementptr float, ptr addrspace(1) %89, i64 %1020, !dbg !78
  %1061 = getelementptr float, ptr addrspace(1) %1060, i64 %877, !dbg !79
  %1062 = getelementptr float, ptr addrspace(1) %1060, i64 %879, !dbg !79
  %1063 = getelementptr float, ptr addrspace(1) %1060, i64 %881, !dbg !79
  %1064 = getelementptr float, ptr addrspace(1) %1060, i64 %883, !dbg !79
  %1065 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1061, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !79
  %1066 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1062, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !79
  %1067 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1063, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !79
  %1068 = tail call <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) %1064, i32 16, <4 x i1> %1027, <4 x float> zeroinitializer), !dbg !79
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1069 = shufflevector <2 x half> %493, <2 x half> %496, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !48
  store <4 x half> %1069, ptr addrspace(3) %330, align 8, !dbg !48
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1070 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !48
  %1071 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !48
  %1072 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !48
  %1073 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !48
  %1074 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1070, <4 x half> %286, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1075 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1071, <4 x half> %288, <4 x float> %1074, i32 0, i32 0, i32 0), !dbg !58
  %1076 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1072, <4 x half> %290, <4 x float> %1075, i32 0, i32 0, i32 0), !dbg !58
  %1077 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1073, <4 x half> %292, <4 x float> %1076, i32 0, i32 0, i32 0), !dbg !58
  %1078 = extractelement <4 x float> %1077, i64 0, !dbg !58
  %1079 = extractelement <4 x float> %1077, i64 1, !dbg !58
  %1080 = extractelement <4 x float> %1077, i64 2, !dbg !58
  %1081 = extractelement <4 x float> %1077, i64 3, !dbg !58
  %1082 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1070, <4 x half> %294, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1083 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1071, <4 x half> %296, <4 x float> %1082, i32 0, i32 0, i32 0), !dbg !58
  %1084 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1072, <4 x half> %298, <4 x float> %1083, i32 0, i32 0, i32 0), !dbg !58
  %1085 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1073, <4 x half> %300, <4 x float> %1084, i32 0, i32 0, i32 0), !dbg !58
  %1086 = extractelement <4 x float> %1085, i64 0, !dbg !58
  %1087 = extractelement <4 x float> %1085, i64 1, !dbg !58
  %1088 = extractelement <4 x float> %1085, i64 2, !dbg !58
  %1089 = extractelement <4 x float> %1085, i64 3, !dbg !58
  %1090 = fsub float %1078, %.pn44.pn.pn1373, !dbg !59
  %1091 = fsub float %1079, %.pn42.pn.pn1374, !dbg !59
  %1092 = fsub float %1080, %.pn40.pn.pn1375, !dbg !59
  %1093 = fsub float %1081, %.pn38.pn.pn1376, !dbg !59
  %1094 = fsub float %1086, %.pn44.pn.pn1373, !dbg !59
  %1095 = fsub float %1087, %.pn42.pn.pn1374, !dbg !59
  %1096 = fsub float %1088, %.pn40.pn.pn1375, !dbg !59
  %1097 = fsub float %1089, %.pn38.pn.pn1376, !dbg !59
  %1098 = tail call float @llvm.amdgcn.exp2.f32(float %1090), !dbg !60
  %1099 = tail call float @llvm.amdgcn.exp2.f32(float %1091), !dbg !60
  %1100 = tail call float @llvm.amdgcn.exp2.f32(float %1092), !dbg !60
  %1101 = tail call float @llvm.amdgcn.exp2.f32(float %1093), !dbg !60
  %1102 = tail call float @llvm.amdgcn.exp2.f32(float %1094), !dbg !60
  %1103 = tail call float @llvm.amdgcn.exp2.f32(float %1095), !dbg !60
  %1104 = tail call float @llvm.amdgcn.exp2.f32(float %1096), !dbg !60
  %1105 = tail call float @llvm.amdgcn.exp2.f32(float %1097), !dbg !60
  %1106 = icmp slt <2 x i32> %505, %421, !dbg !57
  %1107 = icmp slt <2 x i32> %511, %421, !dbg !57
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1108 = shufflevector <2 x half> %499, <2 x half> %502, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %1109 = insertelement <2 x float> poison, float %1098, i64 0, !dbg !63
  %1110 = insertelement <2 x float> %1109, float %1099, i64 1, !dbg !63
  %1111 = select <2 x i1> %1106, <2 x float> zeroinitializer, <2 x float> %1110, !dbg !63
  %1112 = extractelement <2 x float> %1111, i64 0, !dbg !61
  %1113 = fptrunc float %1112 to half, !dbg !61
  %1114 = extractelement <2 x float> %1111, i64 1, !dbg !61
  %1115 = fptrunc float %1114 to half, !dbg !61
  %1116 = insertelement <4 x half> poison, half %1113, i64 0, !dbg !61
  %1117 = insertelement <4 x half> %1116, half %1115, i64 1, !dbg !61
  %1118 = insertelement <2 x float> poison, float %1100, i64 0, !dbg !63
  %1119 = insertelement <2 x float> %1118, float %1101, i64 1, !dbg !63
  %1120 = select <2 x i1> %1107, <2 x float> zeroinitializer, <2 x float> %1119, !dbg !63
  %1121 = extractelement <2 x float> %1120, i64 0, !dbg !61
  %1122 = fptrunc float %1121 to half, !dbg !61
  %1123 = extractelement <2 x float> %1120, i64 1, !dbg !61
  %1124 = fptrunc float %1123 to half, !dbg !61
  %1125 = insertelement <4 x half> %1117, half %1122, i64 2, !dbg !61
  %1126 = insertelement <4 x half> %1125, half %1124, i64 3, !dbg !61
  store <4 x half> %1126, ptr addrspace(3) %343, align 8, !dbg !61
  %1127 = icmp slt <2 x i32> %505, %423, !dbg !57
  %1128 = insertelement <2 x float> poison, float %1102, i64 0, !dbg !63
  %1129 = insertelement <2 x float> %1128, float %1103, i64 1, !dbg !63
  %1130 = select <2 x i1> %1127, <2 x float> zeroinitializer, <2 x float> %1129, !dbg !63
  %1131 = extractelement <2 x float> %1130, i64 0, !dbg !61
  %1132 = fptrunc float %1131 to half, !dbg !61
  %1133 = extractelement <2 x float> %1130, i64 1, !dbg !61
  %1134 = fptrunc float %1133 to half, !dbg !61
  %1135 = insertelement <4 x half> poison, half %1132, i64 0, !dbg !61
  %1136 = insertelement <4 x half> %1135, half %1134, i64 1, !dbg !61
  %1137 = icmp slt <2 x i32> %511, %423, !dbg !57
  %1138 = insertelement <2 x float> poison, float %1104, i64 0, !dbg !63
  %1139 = insertelement <2 x float> %1138, float %1105, i64 1, !dbg !63
  %1140 = select <2 x i1> %1137, <2 x float> zeroinitializer, <2 x float> %1139, !dbg !63
  %1141 = extractelement <2 x float> %1140, i64 0, !dbg !61
  %1142 = fptrunc float %1141 to half, !dbg !61
  %1143 = extractelement <2 x float> %1140, i64 1, !dbg !61
  %1144 = fptrunc float %1143 to half, !dbg !61
  %1145 = insertelement <4 x half> %1136, half %1142, i64 2, !dbg !61
  %1146 = insertelement <4 x half> %1145, half %1144, i64 3, !dbg !61
  store <4 x half> %1146, ptr addrspace(3) %345, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1147 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !61
  %1148 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  store <4 x half> %1108, ptr addrspace(3) %357, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %1149 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !52
  %1150 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !52
  %1151 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !52
  %1152 = shufflevector <1 x half> %1151, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1153 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !52
  %1154 = shufflevector <1 x half> %1153, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1155 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !52
  %1156 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !52
  %1157 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !52
  %1158 = shufflevector <1 x half> %1157, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1159 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !52
  %1160 = shufflevector <1 x half> %1159, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1161 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !52
  %1162 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !52
  %1163 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !52
  %1164 = shufflevector <1 x half> %1163, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1165 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !52
  %1166 = shufflevector <1 x half> %1165, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1167 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !52
  %1168 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !52
  %1169 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !52
  %1170 = shufflevector <1 x half> %1169, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1171 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !52
  %1172 = shufflevector <1 x half> %1171, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1173 = shufflevector <1 x half> %1149, <1 x half> %1150, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1174 = shufflevector <4 x half> %1173, <4 x half> %1152, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1175 = shufflevector <4 x half> %1174, <4 x half> %1154, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1176 = shufflevector <1 x half> %1155, <1 x half> %1156, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1177 = shufflevector <4 x half> %1176, <4 x half> %1158, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1178 = shufflevector <4 x half> %1177, <4 x half> %1160, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1179 = shufflevector <1 x half> %1161, <1 x half> %1162, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1180 = shufflevector <4 x half> %1179, <4 x half> %1164, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1181 = shufflevector <4 x half> %1180, <4 x half> %1166, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1182 = shufflevector <1 x half> %1167, <1 x half> %1168, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1183 = shufflevector <4 x half> %1182, <4 x half> %1170, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1184 = shufflevector <4 x half> %1183, <4 x half> %1172, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1185 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1175, <4 x half> %1147, <16 x float> %684, i32 0, i32 0, i32 0), !dbg !62
  %1186 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1178, <4 x half> %1148, <16 x float> %1185, i32 0, i32 0, i32 0), !dbg !62
  %1187 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1181, <4 x half> %1147, <16 x float> %702, i32 0, i32 0, i32 0), !dbg !62
  %1188 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1184, <4 x half> %1148, <16 x float> %1187, i32 0, i32 0, i32 0), !dbg !62
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  store <4 x half> %1108, ptr addrspace(3) %330, align 8, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %1189 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !64
  %1190 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !64
  %1191 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !64
  %1192 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !64
  %1193 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1189, <4 x half> %317, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1194 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1190, <4 x half> %318, <4 x float> %1193, i32 0, i32 0, i32 0), !dbg !65
  %1195 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1191, <4 x half> %319, <4 x float> %1194, i32 0, i32 0, i32 0), !dbg !65
  %1196 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1192, <4 x half> %320, <4 x float> %1195, i32 0, i32 0, i32 0), !dbg !65
  %1197 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1189, <4 x half> %321, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1198 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1190, <4 x half> %322, <4 x float> %1197, i32 0, i32 0, i32 0), !dbg !65
  %1199 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1191, <4 x half> %323, <4 x float> %1198, i32 0, i32 0, i32 0), !dbg !65
  %1200 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1192, <4 x half> %324, <4 x float> %1199, i32 0, i32 0, i32 0), !dbg !65
  %1201 = shufflevector <4 x float> %1196, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1202 = fsub <2 x float> %1201, %506, !dbg !66
  %1203 = shufflevector <4 x float> %1196, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1204 = fsub <2 x float> %1203, %512, !dbg !66
  %1205 = shufflevector <4 x float> %1200, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1206 = fsub <2 x float> %1205, %506, !dbg !66
  %1207 = shufflevector <4 x float> %1200, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1208 = fsub <2 x float> %1207, %512, !dbg !66
  %1209 = fmul <2 x float> %1111, %1202, !dbg !67
  %1210 = fmul <2 x float> %1120, %1204, !dbg !67
  %1211 = fmul <2 x float> %1130, %1206, !dbg !67
  %1212 = fmul <2 x float> %1140, %1208, !dbg !67
  %1213 = fptrunc <2 x float> %1209 to <2 x half>, !dbg !68
  %1214 = fptrunc <2 x float> %1210 to <2 x half>, !dbg !68
  %1215 = fptrunc <2 x float> %1211 to <2 x half>, !dbg !68
  %1216 = fptrunc <2 x float> %1212 to <2 x half>, !dbg !68
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <4 x half> %1069, ptr addrspace(3) %357, align 8, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1217 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %1218 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !69
  %1219 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %1220 = shufflevector <1 x half> %1219, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1221 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !69
  %1222 = shufflevector <1 x half> %1221, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1223 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %1224 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !69
  %1225 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %1226 = shufflevector <1 x half> %1225, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1227 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !69
  %1228 = shufflevector <1 x half> %1227, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1229 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %1230 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !69
  %1231 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %1232 = shufflevector <1 x half> %1231, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1233 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !69
  %1234 = shufflevector <1 x half> %1233, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1235 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %1236 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !69
  %1237 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %1238 = shufflevector <1 x half> %1237, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1239 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !69
  %1240 = shufflevector <1 x half> %1239, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1241 = shufflevector <2 x half> %1213, <2 x half> %1214, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1241, ptr addrspace(3) %343, align 8, !dbg !68
  %1242 = shufflevector <2 x half> %1215, <2 x half> %1216, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1242, ptr addrspace(3) %345, align 8, !dbg !68
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1243 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !68
  %1244 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !68
  %1245 = shufflevector <1 x half> %1217, <1 x half> %1218, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1246 = shufflevector <4 x half> %1245, <4 x half> %1220, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1247 = shufflevector <4 x half> %1246, <4 x half> %1222, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1248 = shufflevector <1 x half> %1223, <1 x half> %1224, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1249 = shufflevector <4 x half> %1248, <4 x half> %1226, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1250 = shufflevector <4 x half> %1249, <4 x half> %1228, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1251 = shufflevector <1 x half> %1229, <1 x half> %1230, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1252 = shufflevector <4 x half> %1251, <4 x half> %1232, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1253 = shufflevector <4 x half> %1252, <4 x half> %1234, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1254 = shufflevector <1 x half> %1235, <1 x half> %1236, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1255 = shufflevector <4 x half> %1254, <4 x half> %1238, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1256 = shufflevector <4 x half> %1255, <4 x half> %1240, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1257 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1247, <4 x half> %1243, <16 x float> %804, i32 0, i32 0, i32 0), !dbg !70
  %1258 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1250, <4 x half> %1244, <16 x float> %1257, i32 0, i32 0, i32 0), !dbg !70
  %1259 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1253, <4 x half> %1243, <16 x float> %838, i32 0, i32 0, i32 0), !dbg !70
  %1260 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1256, <4 x half> %1244, <16 x float> %1259, i32 0, i32 0, i32 0), !dbg !70
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1261 = shufflevector <2 x half> %494, <2 x half> %497, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !48
  store <4 x half> %1261, ptr addrspace(3) %330, align 8, !dbg !48
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1262 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !48
  %1263 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !48
  %1264 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !48
  %1265 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !48
  %1266 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1262, <4 x half> %286, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1267 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1263, <4 x half> %288, <4 x float> %1266, i32 0, i32 0, i32 0), !dbg !58
  %1268 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1264, <4 x half> %290, <4 x float> %1267, i32 0, i32 0, i32 0), !dbg !58
  %1269 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1265, <4 x half> %292, <4 x float> %1268, i32 0, i32 0, i32 0), !dbg !58
  %1270 = extractelement <4 x float> %1269, i64 0, !dbg !58
  %1271 = extractelement <4 x float> %1269, i64 1, !dbg !58
  %1272 = extractelement <4 x float> %1269, i64 2, !dbg !58
  %1273 = extractelement <4 x float> %1269, i64 3, !dbg !58
  %1274 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1262, <4 x half> %294, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1275 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1263, <4 x half> %296, <4 x float> %1274, i32 0, i32 0, i32 0), !dbg !58
  %1276 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1264, <4 x half> %298, <4 x float> %1275, i32 0, i32 0, i32 0), !dbg !58
  %1277 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1265, <4 x half> %300, <4 x float> %1276, i32 0, i32 0, i32 0), !dbg !58
  %1278 = extractelement <4 x float> %1277, i64 0, !dbg !58
  %1279 = extractelement <4 x float> %1277, i64 1, !dbg !58
  %1280 = extractelement <4 x float> %1277, i64 2, !dbg !58
  %1281 = extractelement <4 x float> %1277, i64 3, !dbg !58
  %1282 = fsub float %1270, %.pn44.pn1377, !dbg !59
  %1283 = fsub float %1271, %.pn42.pn1378, !dbg !59
  %1284 = fsub float %1272, %.pn40.pn1379, !dbg !59
  %1285 = fsub float %1273, %.pn38.pn1380, !dbg !59
  %1286 = fsub float %1278, %.pn44.pn1377, !dbg !59
  %1287 = fsub float %1279, %.pn42.pn1378, !dbg !59
  %1288 = fsub float %1280, %.pn40.pn1379, !dbg !59
  %1289 = fsub float %1281, %.pn38.pn1380, !dbg !59
  %1290 = tail call float @llvm.amdgcn.exp2.f32(float %1282), !dbg !60
  %1291 = tail call float @llvm.amdgcn.exp2.f32(float %1283), !dbg !60
  %1292 = tail call float @llvm.amdgcn.exp2.f32(float %1284), !dbg !60
  %1293 = tail call float @llvm.amdgcn.exp2.f32(float %1285), !dbg !60
  %1294 = tail call float @llvm.amdgcn.exp2.f32(float %1286), !dbg !60
  %1295 = tail call float @llvm.amdgcn.exp2.f32(float %1287), !dbg !60
  %1296 = tail call float @llvm.amdgcn.exp2.f32(float %1288), !dbg !60
  %1297 = tail call float @llvm.amdgcn.exp2.f32(float %1289), !dbg !60
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1298 = shufflevector <2 x half> %500, <2 x half> %503, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %1299 = icmp slt <2 x i32> %507, %421, !dbg !57
  %1300 = insertelement <2 x float> poison, float %1290, i64 0, !dbg !63
  %1301 = insertelement <2 x float> %1300, float %1291, i64 1, !dbg !63
  %1302 = select <2 x i1> %1299, <2 x float> zeroinitializer, <2 x float> %1301, !dbg !63
  %1303 = extractelement <2 x float> %1302, i64 0, !dbg !61
  %1304 = fptrunc float %1303 to half, !dbg !61
  %1305 = extractelement <2 x float> %1302, i64 1, !dbg !61
  %1306 = fptrunc float %1305 to half, !dbg !61
  %1307 = insertelement <4 x half> poison, half %1304, i64 0, !dbg !61
  %1308 = insertelement <4 x half> %1307, half %1306, i64 1, !dbg !61
  %1309 = icmp slt <2 x i32> %513, %421, !dbg !57
  %1310 = insertelement <2 x float> poison, float %1292, i64 0, !dbg !63
  %1311 = insertelement <2 x float> %1310, float %1293, i64 1, !dbg !63
  %1312 = select <2 x i1> %1309, <2 x float> zeroinitializer, <2 x float> %1311, !dbg !63
  %1313 = extractelement <2 x float> %1312, i64 0, !dbg !61
  %1314 = fptrunc float %1313 to half, !dbg !61
  %1315 = extractelement <2 x float> %1312, i64 1, !dbg !61
  %1316 = fptrunc float %1315 to half, !dbg !61
  %1317 = insertelement <4 x half> %1308, half %1314, i64 2, !dbg !61
  %1318 = insertelement <4 x half> %1317, half %1316, i64 3, !dbg !61
  store <4 x half> %1318, ptr addrspace(3) %343, align 8, !dbg !61
  %1319 = icmp slt <2 x i32> %507, %423, !dbg !57
  %1320 = insertelement <2 x float> poison, float %1294, i64 0, !dbg !63
  %1321 = insertelement <2 x float> %1320, float %1295, i64 1, !dbg !63
  %1322 = select <2 x i1> %1319, <2 x float> zeroinitializer, <2 x float> %1321, !dbg !63
  %1323 = extractelement <2 x float> %1322, i64 0, !dbg !61
  %1324 = fptrunc float %1323 to half, !dbg !61
  %1325 = extractelement <2 x float> %1322, i64 1, !dbg !61
  %1326 = fptrunc float %1325 to half, !dbg !61
  %1327 = insertelement <4 x half> poison, half %1324, i64 0, !dbg !61
  %1328 = insertelement <4 x half> %1327, half %1326, i64 1, !dbg !61
  %1329 = icmp slt <2 x i32> %513, %423, !dbg !57
  %1330 = insertelement <2 x float> poison, float %1296, i64 0, !dbg !63
  %1331 = insertelement <2 x float> %1330, float %1297, i64 1, !dbg !63
  %1332 = select <2 x i1> %1329, <2 x float> zeroinitializer, <2 x float> %1331, !dbg !63
  %1333 = extractelement <2 x float> %1332, i64 0, !dbg !61
  %1334 = fptrunc float %1333 to half, !dbg !61
  %1335 = extractelement <2 x float> %1332, i64 1, !dbg !61
  %1336 = fptrunc float %1335 to half, !dbg !61
  %1337 = insertelement <4 x half> %1328, half %1334, i64 2, !dbg !61
  %1338 = insertelement <4 x half> %1337, half %1336, i64 3, !dbg !61
  store <4 x half> %1338, ptr addrspace(3) %345, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1339 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !61
  %1340 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  store <4 x half> %1298, ptr addrspace(3) %357, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %1341 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !52
  %1342 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !52
  %1343 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !52
  %1344 = shufflevector <1 x half> %1343, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1345 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !52
  %1346 = shufflevector <1 x half> %1345, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1347 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !52
  %1348 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !52
  %1349 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !52
  %1350 = shufflevector <1 x half> %1349, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1351 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !52
  %1352 = shufflevector <1 x half> %1351, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1353 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !52
  %1354 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !52
  %1355 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !52
  %1356 = shufflevector <1 x half> %1355, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1357 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !52
  %1358 = shufflevector <1 x half> %1357, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1359 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !52
  %1360 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !52
  %1361 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !52
  %1362 = shufflevector <1 x half> %1361, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1363 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !52
  %1364 = shufflevector <1 x half> %1363, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1365 = shufflevector <1 x half> %1341, <1 x half> %1342, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1366 = shufflevector <4 x half> %1365, <4 x half> %1344, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1367 = shufflevector <4 x half> %1366, <4 x half> %1346, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1368 = shufflevector <1 x half> %1347, <1 x half> %1348, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1369 = shufflevector <4 x half> %1368, <4 x half> %1350, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1370 = shufflevector <4 x half> %1369, <4 x half> %1352, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1371 = shufflevector <1 x half> %1353, <1 x half> %1354, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1372 = shufflevector <4 x half> %1371, <4 x half> %1356, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1373 = shufflevector <4 x half> %1372, <4 x half> %1358, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1374 = shufflevector <1 x half> %1359, <1 x half> %1360, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1375 = shufflevector <4 x half> %1374, <4 x half> %1362, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1376 = shufflevector <4 x half> %1375, <4 x half> %1364, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1377 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1367, <4 x half> %1339, <16 x float> %1186, i32 0, i32 0, i32 0), !dbg !62
  %1378 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1370, <4 x half> %1340, <16 x float> %1377, i32 0, i32 0, i32 0), !dbg !62
  %1379 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1373, <4 x half> %1339, <16 x float> %1188, i32 0, i32 0, i32 0), !dbg !62
  %1380 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1376, <4 x half> %1340, <16 x float> %1379, i32 0, i32 0, i32 0), !dbg !62
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  store <4 x half> %1298, ptr addrspace(3) %330, align 8, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %1381 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !64
  %1382 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !64
  %1383 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !64
  %1384 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !64
  %1385 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1381, <4 x half> %317, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1386 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1382, <4 x half> %318, <4 x float> %1385, i32 0, i32 0, i32 0), !dbg !65
  %1387 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1383, <4 x half> %319, <4 x float> %1386, i32 0, i32 0, i32 0), !dbg !65
  %1388 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1384, <4 x half> %320, <4 x float> %1387, i32 0, i32 0, i32 0), !dbg !65
  %1389 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1381, <4 x half> %321, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1390 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1382, <4 x half> %322, <4 x float> %1389, i32 0, i32 0, i32 0), !dbg !65
  %1391 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1383, <4 x half> %323, <4 x float> %1390, i32 0, i32 0, i32 0), !dbg !65
  %1392 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1384, <4 x half> %324, <4 x float> %1391, i32 0, i32 0, i32 0), !dbg !65
  %1393 = shufflevector <4 x float> %1388, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1394 = fsub <2 x float> %1393, %509, !dbg !66
  %1395 = shufflevector <4 x float> %1388, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1396 = fsub <2 x float> %1395, %515, !dbg !66
  %1397 = shufflevector <4 x float> %1392, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1398 = fsub <2 x float> %1397, %509, !dbg !66
  %1399 = shufflevector <4 x float> %1392, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1400 = fsub <2 x float> %1399, %515, !dbg !66
  %1401 = fmul <2 x float> %1302, %1394, !dbg !67
  %1402 = fmul <2 x float> %1312, %1396, !dbg !67
  %1403 = fmul <2 x float> %1322, %1398, !dbg !67
  %1404 = fmul <2 x float> %1332, %1400, !dbg !67
  %1405 = fptrunc <2 x float> %1401 to <2 x half>, !dbg !68
  %1406 = fptrunc <2 x float> %1402 to <2 x half>, !dbg !68
  %1407 = fptrunc <2 x float> %1403 to <2 x half>, !dbg !68
  %1408 = fptrunc <2 x float> %1404 to <2 x half>, !dbg !68
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <4 x half> %1261, ptr addrspace(3) %357, align 8, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1409 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %1410 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !69
  %1411 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %1412 = shufflevector <1 x half> %1411, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1413 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !69
  %1414 = shufflevector <1 x half> %1413, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1415 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %1416 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !69
  %1417 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %1418 = shufflevector <1 x half> %1417, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1419 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !69
  %1420 = shufflevector <1 x half> %1419, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1421 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %1422 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !69
  %1423 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %1424 = shufflevector <1 x half> %1423, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1425 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !69
  %1426 = shufflevector <1 x half> %1425, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1427 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %1428 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !69
  %1429 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %1430 = shufflevector <1 x half> %1429, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1431 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !69
  %1432 = shufflevector <1 x half> %1431, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1433 = shufflevector <2 x half> %1405, <2 x half> %1406, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1433, ptr addrspace(3) %343, align 8, !dbg !68
  %1434 = shufflevector <2 x half> %1407, <2 x half> %1408, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1434, ptr addrspace(3) %345, align 8, !dbg !68
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1435 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !68
  %1436 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !68
  %1437 = shufflevector <1 x half> %1409, <1 x half> %1410, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1438 = shufflevector <4 x half> %1437, <4 x half> %1412, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1439 = shufflevector <4 x half> %1438, <4 x half> %1414, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1440 = shufflevector <1 x half> %1415, <1 x half> %1416, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1441 = shufflevector <4 x half> %1440, <4 x half> %1418, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1442 = shufflevector <4 x half> %1441, <4 x half> %1420, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1443 = shufflevector <1 x half> %1421, <1 x half> %1422, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1444 = shufflevector <4 x half> %1443, <4 x half> %1424, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1445 = shufflevector <4 x half> %1444, <4 x half> %1426, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1446 = shufflevector <1 x half> %1427, <1 x half> %1428, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1447 = shufflevector <4 x half> %1446, <4 x half> %1430, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1448 = shufflevector <4 x half> %1447, <4 x half> %1432, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1449 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1439, <4 x half> %1435, <16 x float> %1258, i32 0, i32 0, i32 0), !dbg !70
  %1450 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1442, <4 x half> %1436, <16 x float> %1449, i32 0, i32 0, i32 0), !dbg !70
  %1451 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1445, <4 x half> %1435, <16 x float> %1260, i32 0, i32 0, i32 0), !dbg !70
  %1452 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1448, <4 x half> %1436, <16 x float> %1451, i32 0, i32 0, i32 0), !dbg !70
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1453 = shufflevector <2 x half> %495, <2 x half> %498, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !48
  store <4 x half> %1453, ptr addrspace(3) %330, align 8, !dbg !48
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1454 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !48
  %1455 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !48
  %1456 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !48
  %1457 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !48
  %1458 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1454, <4 x half> %286, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1459 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1455, <4 x half> %288, <4 x float> %1458, i32 0, i32 0, i32 0), !dbg !58
  %1460 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1456, <4 x half> %290, <4 x float> %1459, i32 0, i32 0, i32 0), !dbg !58
  %1461 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1457, <4 x half> %292, <4 x float> %1460, i32 0, i32 0, i32 0), !dbg !58
  %1462 = extractelement <4 x float> %1461, i64 0, !dbg !58
  %1463 = extractelement <4 x float> %1461, i64 1, !dbg !58
  %1464 = extractelement <4 x float> %1461, i64 2, !dbg !58
  %1465 = extractelement <4 x float> %1461, i64 3, !dbg !58
  %1466 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1454, <4 x half> %294, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1467 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1455, <4 x half> %296, <4 x float> %1466, i32 0, i32 0, i32 0), !dbg !58
  %1468 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1456, <4 x half> %298, <4 x float> %1467, i32 0, i32 0, i32 0), !dbg !58
  %1469 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1457, <4 x half> %300, <4 x float> %1468, i32 0, i32 0, i32 0), !dbg !58
  %1470 = extractelement <4 x float> %1469, i64 0, !dbg !58
  %1471 = extractelement <4 x float> %1469, i64 1, !dbg !58
  %1472 = extractelement <4 x float> %1469, i64 2, !dbg !58
  %1473 = extractelement <4 x float> %1469, i64 3, !dbg !58
  %1474 = fsub float %1462, %.pn441381, !dbg !59
  %1475 = fsub float %1463, %.pn421382, !dbg !59
  %1476 = fsub float %1464, %.pn401383, !dbg !59
  %1477 = fsub float %1465, %.pn381384, !dbg !59
  %1478 = fsub float %1470, %.pn441381, !dbg !59
  %1479 = fsub float %1471, %.pn421382, !dbg !59
  %1480 = fsub float %1472, %.pn401383, !dbg !59
  %1481 = fsub float %1473, %.pn381384, !dbg !59
  %1482 = tail call float @llvm.amdgcn.exp2.f32(float %1474), !dbg !60
  %1483 = tail call float @llvm.amdgcn.exp2.f32(float %1475), !dbg !60
  %1484 = tail call float @llvm.amdgcn.exp2.f32(float %1476), !dbg !60
  %1485 = tail call float @llvm.amdgcn.exp2.f32(float %1477), !dbg !60
  %1486 = tail call float @llvm.amdgcn.exp2.f32(float %1478), !dbg !60
  %1487 = tail call float @llvm.amdgcn.exp2.f32(float %1479), !dbg !60
  %1488 = tail call float @llvm.amdgcn.exp2.f32(float %1480), !dbg !60
  %1489 = tail call float @llvm.amdgcn.exp2.f32(float %1481), !dbg !60
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1490 = shufflevector <2 x half> %501, <2 x half> %504, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %1491 = icmp slt <2 x i32> %508, %421, !dbg !57
  %1492 = insertelement <2 x float> poison, float %1482, i64 0, !dbg !63
  %1493 = insertelement <2 x float> %1492, float %1483, i64 1, !dbg !63
  %1494 = select <2 x i1> %1491, <2 x float> zeroinitializer, <2 x float> %1493, !dbg !63
  %1495 = extractelement <2 x float> %1494, i64 0, !dbg !61
  %1496 = fptrunc float %1495 to half, !dbg !61
  %1497 = extractelement <2 x float> %1494, i64 1, !dbg !61
  %1498 = fptrunc float %1497 to half, !dbg !61
  %1499 = insertelement <4 x half> poison, half %1496, i64 0, !dbg !61
  %1500 = insertelement <4 x half> %1499, half %1498, i64 1, !dbg !61
  %1501 = icmp slt <2 x i32> %514, %421, !dbg !57
  %1502 = insertelement <2 x float> poison, float %1484, i64 0, !dbg !63
  %1503 = insertelement <2 x float> %1502, float %1485, i64 1, !dbg !63
  %1504 = select <2 x i1> %1501, <2 x float> zeroinitializer, <2 x float> %1503, !dbg !63
  %1505 = extractelement <2 x float> %1504, i64 0, !dbg !61
  %1506 = fptrunc float %1505 to half, !dbg !61
  %1507 = extractelement <2 x float> %1504, i64 1, !dbg !61
  %1508 = fptrunc float %1507 to half, !dbg !61
  %1509 = insertelement <4 x half> %1500, half %1506, i64 2, !dbg !61
  %1510 = insertelement <4 x half> %1509, half %1508, i64 3, !dbg !61
  store <4 x half> %1510, ptr addrspace(3) %343, align 8, !dbg !61
  %1511 = icmp slt <2 x i32> %508, %423, !dbg !57
  %1512 = insertelement <2 x float> poison, float %1486, i64 0, !dbg !63
  %1513 = insertelement <2 x float> %1512, float %1487, i64 1, !dbg !63
  %1514 = select <2 x i1> %1511, <2 x float> zeroinitializer, <2 x float> %1513, !dbg !63
  %1515 = extractelement <2 x float> %1514, i64 0, !dbg !61
  %1516 = fptrunc float %1515 to half, !dbg !61
  %1517 = extractelement <2 x float> %1514, i64 1, !dbg !61
  %1518 = fptrunc float %1517 to half, !dbg !61
  %1519 = insertelement <4 x half> poison, half %1516, i64 0, !dbg !61
  %1520 = insertelement <4 x half> %1519, half %1518, i64 1, !dbg !61
  %1521 = icmp slt <2 x i32> %514, %423, !dbg !57
  %1522 = insertelement <2 x float> poison, float %1488, i64 0, !dbg !63
  %1523 = insertelement <2 x float> %1522, float %1489, i64 1, !dbg !63
  %1524 = select <2 x i1> %1521, <2 x float> zeroinitializer, <2 x float> %1523, !dbg !63
  %1525 = extractelement <2 x float> %1524, i64 0, !dbg !61
  %1526 = fptrunc float %1525 to half, !dbg !61
  %1527 = extractelement <2 x float> %1524, i64 1, !dbg !61
  %1528 = fptrunc float %1527 to half, !dbg !61
  %1529 = insertelement <4 x half> %1520, half %1526, i64 2, !dbg !61
  %1530 = insertelement <4 x half> %1529, half %1528, i64 3, !dbg !61
  store <4 x half> %1530, ptr addrspace(3) %345, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1531 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !61
  %1532 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  store <4 x half> %1490, ptr addrspace(3) %357, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %1533 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !52
  %1534 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !52
  %1535 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !52
  %1536 = shufflevector <1 x half> %1535, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1537 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !52
  %1538 = shufflevector <1 x half> %1537, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1539 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !52
  %1540 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !52
  %1541 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !52
  %1542 = shufflevector <1 x half> %1541, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1543 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !52
  %1544 = shufflevector <1 x half> %1543, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1545 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !52
  %1546 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !52
  %1547 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !52
  %1548 = shufflevector <1 x half> %1547, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1549 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !52
  %1550 = shufflevector <1 x half> %1549, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1551 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !52
  %1552 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !52
  %1553 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !52
  %1554 = shufflevector <1 x half> %1553, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1555 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !52
  %1556 = shufflevector <1 x half> %1555, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1557 = shufflevector <1 x half> %1533, <1 x half> %1534, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1558 = shufflevector <4 x half> %1557, <4 x half> %1536, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1559 = shufflevector <4 x half> %1558, <4 x half> %1538, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1560 = shufflevector <1 x half> %1539, <1 x half> %1540, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1561 = shufflevector <4 x half> %1560, <4 x half> %1542, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1562 = shufflevector <4 x half> %1561, <4 x half> %1544, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1563 = shufflevector <1 x half> %1545, <1 x half> %1546, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1564 = shufflevector <4 x half> %1563, <4 x half> %1548, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1565 = shufflevector <4 x half> %1564, <4 x half> %1550, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1566 = shufflevector <1 x half> %1551, <1 x half> %1552, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1567 = shufflevector <4 x half> %1566, <4 x half> %1554, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1568 = shufflevector <4 x half> %1567, <4 x half> %1556, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1569 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1559, <4 x half> %1531, <16 x float> %1378, i32 0, i32 0, i32 0), !dbg !62
  %1570 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1562, <4 x half> %1532, <16 x float> %1569, i32 0, i32 0, i32 0), !dbg !62
  %1571 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1565, <4 x half> %1531, <16 x float> %1380, i32 0, i32 0, i32 0), !dbg !62
  %1572 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1568, <4 x half> %1532, <16 x float> %1571, i32 0, i32 0, i32 0), !dbg !62
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  store <4 x half> %1490, ptr addrspace(3) %330, align 8, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %1573 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !64
  %1574 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !64
  %1575 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !64
  %1576 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !64
  %1577 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1573, <4 x half> %317, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1578 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1574, <4 x half> %318, <4 x float> %1577, i32 0, i32 0, i32 0), !dbg !65
  %1579 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1575, <4 x half> %319, <4 x float> %1578, i32 0, i32 0, i32 0), !dbg !65
  %1580 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1576, <4 x half> %320, <4 x float> %1579, i32 0, i32 0, i32 0), !dbg !65
  %1581 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1573, <4 x half> %321, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1582 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1574, <4 x half> %322, <4 x float> %1581, i32 0, i32 0, i32 0), !dbg !65
  %1583 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1575, <4 x half> %323, <4 x float> %1582, i32 0, i32 0, i32 0), !dbg !65
  %1584 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1576, <4 x half> %324, <4 x float> %1583, i32 0, i32 0, i32 0), !dbg !65
  %1585 = shufflevector <4 x float> %1580, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1586 = fsub <2 x float> %1585, %510, !dbg !66
  %1587 = shufflevector <4 x float> %1580, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1588 = fsub <2 x float> %1587, %516, !dbg !66
  %1589 = shufflevector <4 x float> %1584, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1590 = fsub <2 x float> %1589, %510, !dbg !66
  %1591 = shufflevector <4 x float> %1584, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1592 = fsub <2 x float> %1591, %516, !dbg !66
  %1593 = fmul <2 x float> %1494, %1586, !dbg !67
  %1594 = fmul <2 x float> %1504, %1588, !dbg !67
  %1595 = fmul <2 x float> %1514, %1590, !dbg !67
  %1596 = fmul <2 x float> %1524, %1592, !dbg !67
  %1597 = fptrunc <2 x float> %1593 to <2 x half>, !dbg !68
  %1598 = fptrunc <2 x float> %1594 to <2 x half>, !dbg !68
  %1599 = fptrunc <2 x float> %1595 to <2 x half>, !dbg !68
  %1600 = fptrunc <2 x float> %1596 to <2 x half>, !dbg !68
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <4 x half> %1453, ptr addrspace(3) %357, align 8, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1601 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %1602 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !69
  %1603 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %1604 = shufflevector <1 x half> %1603, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1605 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !69
  %1606 = shufflevector <1 x half> %1605, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1607 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %1608 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !69
  %1609 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %1610 = shufflevector <1 x half> %1609, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1611 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !69
  %1612 = shufflevector <1 x half> %1611, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1613 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %1614 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !69
  %1615 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %1616 = shufflevector <1 x half> %1615, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1617 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !69
  %1618 = shufflevector <1 x half> %1617, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1619 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %1620 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !69
  %1621 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %1622 = shufflevector <1 x half> %1621, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1623 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !69
  %1624 = shufflevector <1 x half> %1623, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1625 = shufflevector <2 x half> %1597, <2 x half> %1598, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1625, ptr addrspace(3) %343, align 8, !dbg !68
  %1626 = shufflevector <2 x half> %1599, <2 x half> %1600, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1626, ptr addrspace(3) %345, align 8, !dbg !68
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1627 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !68
  %1628 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !68
  %1629 = shufflevector <1 x half> %1601, <1 x half> %1602, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1630 = shufflevector <4 x half> %1629, <4 x half> %1604, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1631 = shufflevector <4 x half> %1630, <4 x half> %1606, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1632 = shufflevector <1 x half> %1607, <1 x half> %1608, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1633 = shufflevector <4 x half> %1632, <4 x half> %1610, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1634 = shufflevector <4 x half> %1633, <4 x half> %1612, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1635 = shufflevector <1 x half> %1613, <1 x half> %1614, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1636 = shufflevector <4 x half> %1635, <4 x half> %1616, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1637 = shufflevector <4 x half> %1636, <4 x half> %1618, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1638 = shufflevector <1 x half> %1619, <1 x half> %1620, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1639 = shufflevector <4 x half> %1638, <4 x half> %1622, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1640 = shufflevector <4 x half> %1639, <4 x half> %1624, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1641 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1631, <4 x half> %1627, <16 x float> %1450, i32 0, i32 0, i32 0), !dbg !70
  %1642 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1634, <4 x half> %1628, <16 x float> %1641, i32 0, i32 0, i32 0), !dbg !70
  %1643 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1637, <4 x half> %1627, <16 x float> %1452, i32 0, i32 0, i32 0), !dbg !70
  %1644 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1640, <4 x half> %1628, <16 x float> %1643, i32 0, i32 0, i32 0), !dbg !70
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  store <4 x half> %unmaskedload1327, ptr addrspace(3) %330, align 8, !dbg !48
  fence syncscope("workgroup") release, !dbg !48
  tail call void @llvm.amdgcn.s.barrier(), !dbg !48
  fence syncscope("workgroup") acquire, !dbg !48
  %1645 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !48
  %1646 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !48
  %1647 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !48
  %1648 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !48
  %1649 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1645, <4 x half> %286, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1650 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1646, <4 x half> %288, <4 x float> %1649, i32 0, i32 0, i32 0), !dbg !58
  %1651 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1647, <4 x half> %290, <4 x float> %1650, i32 0, i32 0, i32 0), !dbg !58
  %1652 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1648, <4 x half> %292, <4 x float> %1651, i32 0, i32 0, i32 0), !dbg !58
  %1653 = extractelement <4 x float> %1652, i64 0, !dbg !58
  %1654 = extractelement <4 x float> %1652, i64 1, !dbg !58
  %1655 = extractelement <4 x float> %1652, i64 2, !dbg !58
  %1656 = extractelement <4 x float> %1652, i64 3, !dbg !58
  %1657 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1645, <4 x half> %294, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !58
  %1658 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1646, <4 x half> %296, <4 x float> %1657, i32 0, i32 0, i32 0), !dbg !58
  %1659 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1647, <4 x half> %298, <4 x float> %1658, i32 0, i32 0, i32 0), !dbg !58
  %1660 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1648, <4 x half> %300, <4 x float> %1659, i32 0, i32 0, i32 0), !dbg !58
  %1661 = extractelement <4 x float> %1660, i64 0, !dbg !58
  %1662 = extractelement <4 x float> %1660, i64 1, !dbg !58
  %1663 = extractelement <4 x float> %1660, i64 2, !dbg !58
  %1664 = extractelement <4 x float> %1660, i64 3, !dbg !58
  %1665 = fsub float %1653, %529, !dbg !59
  %1666 = fsub float %1654, %530, !dbg !59
  %1667 = fsub float %1655, %531, !dbg !59
  %1668 = fsub float %1656, %532, !dbg !59
  %1669 = fsub float %1661, %529, !dbg !59
  %1670 = fsub float %1662, %530, !dbg !59
  %1671 = fsub float %1663, %531, !dbg !59
  %1672 = fsub float %1664, %532, !dbg !59
  %1673 = tail call float @llvm.amdgcn.exp2.f32(float %1665), !dbg !60
  %1674 = tail call float @llvm.amdgcn.exp2.f32(float %1666), !dbg !60
  %1675 = tail call float @llvm.amdgcn.exp2.f32(float %1667), !dbg !60
  %1676 = tail call float @llvm.amdgcn.exp2.f32(float %1668), !dbg !60
  %1677 = tail call float @llvm.amdgcn.exp2.f32(float %1669), !dbg !60
  %1678 = tail call float @llvm.amdgcn.exp2.f32(float %1670), !dbg !60
  %1679 = tail call float @llvm.amdgcn.exp2.f32(float %1671), !dbg !60
  %1680 = tail call float @llvm.amdgcn.exp2.f32(float %1672), !dbg !60
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1681 = icmp slt <2 x i32> %859, %421, !dbg !57
  %1682 = insertelement <2 x float> poison, float %1673, i64 0, !dbg !63
  %1683 = insertelement <2 x float> %1682, float %1674, i64 1, !dbg !63
  %1684 = select <2 x i1> %1681, <2 x float> zeroinitializer, <2 x float> %1683, !dbg !63
  %1685 = extractelement <2 x float> %1684, i64 0, !dbg !61
  %1686 = fptrunc float %1685 to half, !dbg !61
  %1687 = extractelement <2 x float> %1684, i64 1, !dbg !61
  %1688 = fptrunc float %1687 to half, !dbg !61
  %1689 = insertelement <4 x half> poison, half %1686, i64 0, !dbg !61
  %1690 = insertelement <4 x half> %1689, half %1688, i64 1, !dbg !61
  %1691 = icmp slt <2 x i32> %858, %421, !dbg !57
  %1692 = insertelement <2 x float> poison, float %1675, i64 0, !dbg !63
  %1693 = insertelement <2 x float> %1692, float %1676, i64 1, !dbg !63
  %1694 = select <2 x i1> %1691, <2 x float> zeroinitializer, <2 x float> %1693, !dbg !63
  %1695 = extractelement <2 x float> %1694, i64 0, !dbg !61
  %1696 = fptrunc float %1695 to half, !dbg !61
  %1697 = extractelement <2 x float> %1694, i64 1, !dbg !61
  %1698 = fptrunc float %1697 to half, !dbg !61
  %1699 = insertelement <4 x half> %1690, half %1696, i64 2, !dbg !61
  %1700 = insertelement <4 x half> %1699, half %1698, i64 3, !dbg !61
  store <4 x half> %1700, ptr addrspace(3) %343, align 8, !dbg !61
  %1701 = icmp slt <2 x i32> %859, %423, !dbg !57
  %1702 = insertelement <2 x float> poison, float %1677, i64 0, !dbg !63
  %1703 = insertelement <2 x float> %1702, float %1678, i64 1, !dbg !63
  %1704 = select <2 x i1> %1701, <2 x float> zeroinitializer, <2 x float> %1703, !dbg !63
  %1705 = extractelement <2 x float> %1704, i64 0, !dbg !61
  %1706 = fptrunc float %1705 to half, !dbg !61
  %1707 = extractelement <2 x float> %1704, i64 1, !dbg !61
  %1708 = fptrunc float %1707 to half, !dbg !61
  %1709 = insertelement <4 x half> poison, half %1706, i64 0, !dbg !61
  %1710 = insertelement <4 x half> %1709, half %1708, i64 1, !dbg !61
  %1711 = icmp slt <2 x i32> %858, %423, !dbg !57
  %1712 = insertelement <2 x float> poison, float %1679, i64 0, !dbg !63
  %1713 = insertelement <2 x float> %1712, float %1680, i64 1, !dbg !63
  %1714 = select <2 x i1> %1711, <2 x float> zeroinitializer, <2 x float> %1713, !dbg !63
  %1715 = extractelement <2 x float> %1714, i64 0, !dbg !61
  %1716 = fptrunc float %1715 to half, !dbg !61
  %1717 = extractelement <2 x float> %1714, i64 1, !dbg !61
  %1718 = fptrunc float %1717 to half, !dbg !61
  %1719 = insertelement <4 x half> %1710, half %1716, i64 2, !dbg !61
  %1720 = insertelement <4 x half> %1719, half %1718, i64 3, !dbg !61
  store <4 x half> %1720, ptr addrspace(3) %345, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !61
  tail call void @llvm.amdgcn.s.barrier(), !dbg !61
  fence syncscope("workgroup") acquire, !dbg !61
  %1721 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !61
  %1722 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !61
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  store <4 x half> %unmaskedload1329, ptr addrspace(3) %357, align 8, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %1723 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !52
  %1724 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !52
  %1725 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !52
  %1726 = shufflevector <1 x half> %1725, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1727 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !52
  %1728 = shufflevector <1 x half> %1727, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1729 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !52
  %1730 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !52
  %1731 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !52
  %1732 = shufflevector <1 x half> %1731, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1733 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !52
  %1734 = shufflevector <1 x half> %1733, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1735 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !52
  %1736 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !52
  %1737 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !52
  %1738 = shufflevector <1 x half> %1737, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1739 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !52
  %1740 = shufflevector <1 x half> %1739, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1741 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !52
  %1742 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !52
  %1743 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !52
  %1744 = shufflevector <1 x half> %1743, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1745 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !52
  %1746 = shufflevector <1 x half> %1745, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1747 = shufflevector <1 x half> %1723, <1 x half> %1724, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1748 = shufflevector <4 x half> %1747, <4 x half> %1726, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1749 = shufflevector <4 x half> %1748, <4 x half> %1728, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1750 = shufflevector <1 x half> %1729, <1 x half> %1730, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1751 = shufflevector <4 x half> %1750, <4 x half> %1732, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1752 = shufflevector <4 x half> %1751, <4 x half> %1734, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1753 = shufflevector <1 x half> %1735, <1 x half> %1736, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1754 = shufflevector <4 x half> %1753, <4 x half> %1738, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1755 = shufflevector <4 x half> %1754, <4 x half> %1740, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1756 = shufflevector <1 x half> %1741, <1 x half> %1742, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !62
  %1757 = shufflevector <4 x half> %1756, <4 x half> %1744, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !62
  %1758 = shufflevector <4 x half> %1757, <4 x half> %1746, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !62
  %1759 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1749, <4 x half> %1721, <16 x float> %1570, i32 0, i32 0, i32 0), !dbg !62
  %1760 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1752, <4 x half> %1722, <16 x float> %1759, i32 0, i32 0, i32 0), !dbg !62
  %1761 = extractelement <16 x float> %1760, i64 0, !dbg !62
  %1762 = extractelement <16 x float> %1760, i64 1, !dbg !62
  %1763 = extractelement <16 x float> %1760, i64 2, !dbg !62
  %1764 = extractelement <16 x float> %1760, i64 3, !dbg !62
  %1765 = extractelement <16 x float> %1760, i64 4, !dbg !62
  %1766 = extractelement <16 x float> %1760, i64 5, !dbg !62
  %1767 = extractelement <16 x float> %1760, i64 6, !dbg !62
  %1768 = extractelement <16 x float> %1760, i64 7, !dbg !62
  %1769 = extractelement <16 x float> %1760, i64 8, !dbg !62
  %1770 = extractelement <16 x float> %1760, i64 9, !dbg !62
  %1771 = extractelement <16 x float> %1760, i64 10, !dbg !62
  %1772 = extractelement <16 x float> %1760, i64 11, !dbg !62
  %1773 = extractelement <16 x float> %1760, i64 12, !dbg !62
  %1774 = extractelement <16 x float> %1760, i64 13, !dbg !62
  %1775 = extractelement <16 x float> %1760, i64 14, !dbg !62
  %1776 = extractelement <16 x float> %1760, i64 15, !dbg !62
  %1777 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1755, <4 x half> %1721, <16 x float> %1572, i32 0, i32 0, i32 0), !dbg !62
  %1778 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1758, <4 x half> %1722, <16 x float> %1777, i32 0, i32 0, i32 0), !dbg !62
  %1779 = extractelement <16 x float> %1778, i64 0, !dbg !62
  %1780 = extractelement <16 x float> %1778, i64 1, !dbg !62
  %1781 = extractelement <16 x float> %1778, i64 2, !dbg !62
  %1782 = extractelement <16 x float> %1778, i64 3, !dbg !62
  %1783 = extractelement <16 x float> %1778, i64 4, !dbg !62
  %1784 = extractelement <16 x float> %1778, i64 5, !dbg !62
  %1785 = extractelement <16 x float> %1778, i64 6, !dbg !62
  %1786 = extractelement <16 x float> %1778, i64 7, !dbg !62
  %1787 = extractelement <16 x float> %1778, i64 8, !dbg !62
  %1788 = extractelement <16 x float> %1778, i64 9, !dbg !62
  %1789 = extractelement <16 x float> %1778, i64 10, !dbg !62
  %1790 = extractelement <16 x float> %1778, i64 11, !dbg !62
  %1791 = extractelement <16 x float> %1778, i64 12, !dbg !62
  %1792 = extractelement <16 x float> %1778, i64 13, !dbg !62
  %1793 = extractelement <16 x float> %1778, i64 14, !dbg !62
  %1794 = extractelement <16 x float> %1778, i64 15, !dbg !62
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  store <4 x half> %unmaskedload1329, ptr addrspace(3) %330, align 8, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %1795 = load <4 x half>, ptr addrspace(3) %335, align 8, !dbg !64
  %1796 = load <4 x half>, ptr addrspace(3) %336, align 8, !dbg !64
  %1797 = load <4 x half>, ptr addrspace(3) %337, align 8, !dbg !64
  %1798 = load <4 x half>, ptr addrspace(3) %338, align 8, !dbg !64
  %1799 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1795, <4 x half> %317, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1800 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1796, <4 x half> %318, <4 x float> %1799, i32 0, i32 0, i32 0), !dbg !65
  %1801 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1797, <4 x half> %319, <4 x float> %1800, i32 0, i32 0, i32 0), !dbg !65
  %1802 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1798, <4 x half> %320, <4 x float> %1801, i32 0, i32 0, i32 0), !dbg !65
  %1803 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1795, <4 x half> %321, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !65
  %1804 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1796, <4 x half> %322, <4 x float> %1803, i32 0, i32 0, i32 0), !dbg !65
  %1805 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1797, <4 x half> %323, <4 x float> %1804, i32 0, i32 0, i32 0), !dbg !65
  %1806 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %1798, <4 x half> %324, <4 x float> %1805, i32 0, i32 0, i32 0), !dbg !65
  %1807 = fsub <4 x float> %1802, %unmaskedload1330, !dbg !66
  %1808 = shufflevector <4 x float> %1807, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1809 = fsub <4 x float> %1802, %unmaskedload1330, !dbg !66
  %1810 = shufflevector <4 x float> %1809, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1811 = fsub <4 x float> %1806, %unmaskedload1330, !dbg !66
  %1812 = shufflevector <4 x float> %1811, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !66
  %1813 = fsub <4 x float> %1806, %unmaskedload1330, !dbg !66
  %1814 = shufflevector <4 x float> %1813, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !66
  %1815 = fmul <2 x float> %1684, %1808, !dbg !67
  %1816 = fmul <2 x float> %1694, %1810, !dbg !67
  %1817 = fmul <2 x float> %1704, %1812, !dbg !67
  %1818 = fmul <2 x float> %1714, %1814, !dbg !67
  %1819 = fptrunc <2 x float> %1815 to <2 x half>, !dbg !68
  %1820 = fptrunc <2 x float> %1816 to <2 x half>, !dbg !68
  %1821 = fptrunc <2 x float> %1817 to <2 x half>, !dbg !68
  %1822 = fptrunc <2 x float> %1818 to <2 x half>, !dbg !68
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <4 x half> %unmaskedload1327, ptr addrspace(3) %357, align 8, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1823 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %1824 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !69
  %1825 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %1826 = shufflevector <1 x half> %1825, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1827 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !69
  %1828 = shufflevector <1 x half> %1827, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1829 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %1830 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !69
  %1831 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %1832 = shufflevector <1 x half> %1831, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1833 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !69
  %1834 = shufflevector <1 x half> %1833, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1835 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %1836 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !69
  %1837 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %1838 = shufflevector <1 x half> %1837, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1839 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !69
  %1840 = shufflevector <1 x half> %1839, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1841 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %1842 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !69
  %1843 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %1844 = shufflevector <1 x half> %1843, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1845 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !69
  %1846 = shufflevector <1 x half> %1845, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1847 = shufflevector <2 x half> %1819, <2 x half> %1820, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1847, ptr addrspace(3) %343, align 8, !dbg !68
  %1848 = shufflevector <2 x half> %1821, <2 x half> %1822, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !68
  store <4 x half> %1848, ptr addrspace(3) %345, align 8, !dbg !68
  fence syncscope("workgroup") release, !dbg !68
  tail call void @llvm.amdgcn.s.barrier(), !dbg !68
  fence syncscope("workgroup") acquire, !dbg !68
  %1849 = load <4 x half>, ptr addrspace(3) %354, align 8, !dbg !68
  %1850 = load <4 x half>, ptr addrspace(3) %355, align 8, !dbg !68
  %1851 = shufflevector <1 x half> %1823, <1 x half> %1824, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1852 = shufflevector <4 x half> %1851, <4 x half> %1826, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1853 = shufflevector <4 x half> %1852, <4 x half> %1828, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1854 = shufflevector <1 x half> %1829, <1 x half> %1830, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1855 = shufflevector <4 x half> %1854, <4 x half> %1832, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1856 = shufflevector <4 x half> %1855, <4 x half> %1834, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1857 = shufflevector <1 x half> %1835, <1 x half> %1836, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1858 = shufflevector <4 x half> %1857, <4 x half> %1838, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1859 = shufflevector <4 x half> %1858, <4 x half> %1840, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1860 = shufflevector <1 x half> %1841, <1 x half> %1842, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !70
  %1861 = shufflevector <4 x half> %1860, <4 x half> %1844, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !70
  %1862 = shufflevector <4 x half> %1861, <4 x half> %1846, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !70
  %1863 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1853, <4 x half> %1849, <16 x float> %1642, i32 0, i32 0, i32 0), !dbg !70
  %1864 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1856, <4 x half> %1850, <16 x float> %1863, i32 0, i32 0, i32 0), !dbg !70
  %1865 = extractelement <16 x float> %1864, i64 0, !dbg !70
  %1866 = extractelement <16 x float> %1864, i64 3, !dbg !70
  %1867 = extractelement <16 x float> %1864, i64 4, !dbg !70
  %1868 = extractelement <16 x float> %1864, i64 7, !dbg !70
  %1869 = extractelement <16 x float> %1864, i64 8, !dbg !70
  %1870 = extractelement <16 x float> %1864, i64 11, !dbg !70
  %1871 = extractelement <16 x float> %1864, i64 12, !dbg !70
  %1872 = extractelement <16 x float> %1864, i64 15, !dbg !70
  %1873 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1859, <4 x half> %1849, <16 x float> %1644, i32 0, i32 0, i32 0), !dbg !70
  %1874 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1862, <4 x half> %1850, <16 x float> %1873, i32 0, i32 0, i32 0), !dbg !70
  %1875 = extractelement <16 x float> %1874, i64 0, !dbg !70
  %1876 = extractelement <16 x float> %1874, i64 3, !dbg !70
  %1877 = extractelement <16 x float> %1874, i64 4, !dbg !70
  %1878 = extractelement <16 x float> %1874, i64 7, !dbg !70
  %1879 = extractelement <16 x float> %1874, i64 8, !dbg !70
  %1880 = extractelement <16 x float> %1874, i64 11, !dbg !70
  %1881 = extractelement <16 x float> %1874, i64 12, !dbg !70
  %1882 = extractelement <16 x float> %1874, i64 15, !dbg !70
  %1883 = icmp sgt i32 %875, 159, !dbg !76
  br i1 %1883, label %.lr.ph, label %.._crit_edge_crit_edge, !dbg !76

.._crit_edge_crit_edge:                           ; preds = %866
  %.pre = shl nuw nsw i32 %160, 6, !dbg !84
  %.pre2336 = or disjoint i32 %229, %.pre, !dbg !84
  %.pre2338 = or disjoint i32 %234, %.pre, !dbg !84
  %.pre2340 = or disjoint i32 %237, %.pre, !dbg !84
  %.pre2342 = or disjoint i32 %239, %.pre, !dbg !84
  %.pre2344 = or disjoint i32 %241, %.pre, !dbg !84
  %.pre2346 = or disjoint i32 %243, %.pre, !dbg !84
  %.pre2348 = or disjoint i32 %245, %.pre, !dbg !84
  %.pre2350 = or disjoint i32 %247, %.pre, !dbg !84
  %1884 = shufflevector <16 x float> %1864, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %1885 = shufflevector <16 x float> %1864, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %1886 = shufflevector <16 x float> %1864, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %1887 = shufflevector <16 x float> %1864, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %1888 = shufflevector <16 x float> %1874, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %1889 = shufflevector <16 x float> %1874, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %1890 = shufflevector <16 x float> %1874, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %1891 = shufflevector <16 x float> %1874, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %1892 = shufflevector <4 x float> %1068, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1893 = shufflevector <4 x float> %1068, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1894 = shufflevector <4 x float> %1067, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1895 = shufflevector <4 x float> %1067, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1896 = shufflevector <4 x float> %1066, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1897 = shufflevector <4 x float> %1066, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1898 = shufflevector <4 x float> %1065, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1899 = shufflevector <4 x float> %1065, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1900 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1901 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1902 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1903 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1904 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1905 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1906 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1907 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1908 = shufflevector <4 x float> %993, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1909 = shufflevector <4 x float> %993, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1910 = shufflevector <4 x float> %992, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1911 = shufflevector <4 x float> %992, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1912 = shufflevector <4 x float> %991, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1913 = shufflevector <4 x float> %991, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1914 = shufflevector <4 x float> %990, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1915 = shufflevector <4 x float> %990, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1916 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1917 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1918 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1919 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1920 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1921 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1922 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1923 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1924 = shufflevector <4 x float> %954, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1925 = shufflevector <4 x float> %954, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1926 = shufflevector <4 x float> %953, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1927 = shufflevector <4 x float> %953, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1928 = shufflevector <4 x float> %952, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1929 = shufflevector <4 x float> %952, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1930 = shufflevector <4 x float> %951, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1931 = shufflevector <4 x float> %951, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1932 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1933 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1934 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1935 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1936 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1937 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1938 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1939 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1940 = shufflevector <4 x float> %915, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1941 = shufflevector <4 x float> %915, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1942 = shufflevector <4 x float> %914, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1943 = shufflevector <4 x float> %914, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1944 = shufflevector <4 x float> %913, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1945 = shufflevector <4 x float> %913, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1946 = shufflevector <4 x float> %912, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1947 = shufflevector <4 x float> %912, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1948 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1949 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1950 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %1951 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1952 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %1953 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %1954 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %1955 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br label %._crit_edge, !dbg !76

.lr.ph:                                           ; preds = %866
  %1956 = extractelement <16 x float> %1874, i64 14, !dbg !70
  %1957 = extractelement <16 x float> %1874, i64 13, !dbg !70
  %1958 = extractelement <16 x float> %1874, i64 10, !dbg !70
  %1959 = extractelement <16 x float> %1874, i64 9, !dbg !70
  %1960 = extractelement <16 x float> %1874, i64 6, !dbg !70
  %1961 = extractelement <16 x float> %1874, i64 5, !dbg !70
  %1962 = extractelement <16 x float> %1874, i64 2, !dbg !70
  %1963 = extractelement <16 x float> %1874, i64 1, !dbg !70
  %1964 = extractelement <16 x float> %1864, i64 14, !dbg !70
  %1965 = extractelement <16 x float> %1864, i64 13, !dbg !70
  %1966 = extractelement <16 x float> %1864, i64 10, !dbg !70
  %1967 = extractelement <16 x float> %1864, i64 9, !dbg !70
  %1968 = extractelement <16 x float> %1864, i64 6, !dbg !70
  %1969 = extractelement <16 x float> %1864, i64 5, !dbg !70
  %1970 = extractelement <16 x float> %1864, i64 2, !dbg !70
  %1971 = extractelement <16 x float> %1864, i64 1, !dbg !70
  %1972 = lshr i32 %875, 5, !dbg !88
  %1973 = shl nuw nsw i32 %160, 6
  %1974 = or disjoint i32 %229, %1973
  %1975 = or disjoint i32 %234, %1973
  %1976 = or disjoint i32 %237, %1973
  %1977 = or disjoint i32 %239, %1973
  %1978 = or disjoint i32 %241, %1973
  %1979 = or disjoint i32 %243, %1973
  %1980 = or disjoint i32 %245, %1973
  %1981 = or disjoint i32 %247, %1973
  %1982 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1974
  %1983 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1975
  %1984 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1976
  %1985 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1977
  %1986 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1978
  %1987 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1979
  %1988 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1980
  %1989 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1981
  %1990 = or disjoint i32 %183, %51
  %1991 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %1990
  %1992 = or disjoint i32 %360, 1024
  %1993 = or disjoint i32 %360, 1088
  %1994 = or disjoint i32 %360, 1152
  %1995 = or disjoint i32 %360, 1216
  %1996 = or disjoint i32 %360, 1536
  %1997 = or disjoint i32 %360, 1600
  %1998 = or disjoint i32 %360, 1664
  %1999 = or disjoint i32 %360, 1728
  %2000 = or disjoint i32 %360, 1056
  %2001 = or disjoint i32 %360, 1120
  %2002 = or disjoint i32 %360, 1184
  %2003 = or disjoint i32 %360, 1248
  %2004 = or disjoint i32 %360, 1568
  %2005 = or disjoint i32 %360, 1632
  %2006 = or disjoint i32 %360, 1696
  %2007 = or disjoint i32 %360, 1760
  %2008 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1992
  %2009 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1993
  %2010 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1994
  %2011 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1995
  %2012 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1996
  %2013 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1997
  %2014 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1998
  %2015 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1999
  %2016 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2000
  %2017 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2001
  %2018 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2002
  %2019 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2003
  %2020 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2004
  %2021 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2005
  %2022 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2006
  %2023 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2007
  %2024 = add nsw i32 %1972, -5
  %2025 = shufflevector <4 x float> %1068, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2026 = shufflevector <4 x float> %1068, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2027 = shufflevector <4 x float> %1067, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2028 = shufflevector <4 x float> %1067, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2029 = shufflevector <4 x float> %1066, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2030 = shufflevector <4 x float> %1066, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2031 = shufflevector <4 x float> %1065, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2032 = shufflevector <4 x float> %1065, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2033 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2034 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2035 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2036 = shufflevector <8 x half> %1018, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2037 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2038 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2039 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2040 = shufflevector <8 x half> %1059, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2041 = shufflevector <4 x float> %993, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2042 = shufflevector <4 x float> %993, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2043 = shufflevector <4 x float> %992, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2044 = shufflevector <4 x float> %992, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2045 = shufflevector <4 x float> %991, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2046 = shufflevector <4 x float> %991, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2047 = shufflevector <4 x float> %990, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2048 = shufflevector <4 x float> %990, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2049 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2050 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2051 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2052 = shufflevector <8 x half> %1013, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2053 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2054 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2055 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2056 = shufflevector <8 x half> %1057, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2057 = shufflevector <4 x float> %954, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2058 = shufflevector <4 x float> %954, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2059 = shufflevector <4 x float> %953, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2060 = shufflevector <4 x float> %953, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2061 = shufflevector <4 x float> %952, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2062 = shufflevector <4 x float> %952, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2063 = shufflevector <4 x float> %951, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2064 = shufflevector <4 x float> %951, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2065 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2066 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2067 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2068 = shufflevector <8 x half> %1008, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2069 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2070 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2071 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2072 = shufflevector <8 x half> %1054, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2073 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2074 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2075 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2076 = shufflevector <8 x half> %1051, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2077 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2078 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2079 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2080 = shufflevector <8 x half> %1003, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2081 = shufflevector <4 x float> %915, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2082 = shufflevector <4 x float> %915, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2083 = shufflevector <4 x float> %914, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2084 = shufflevector <4 x float> %914, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2085 = shufflevector <4 x float> %913, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2086 = shufflevector <4 x float> %913, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2087 = shufflevector <4 x float> %912, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2088 = shufflevector <4 x float> %912, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  br label %2089, !dbg !76

2089:                                             ; preds = %.lr.ph, %2089
  %2090 = phi ptr addrspace(1) [ %1055, %.lr.ph ], [ %2183, %2089 ]
  %2091 = phi ptr addrspace(1) [ %1009, %.lr.ph ], [ %2158, %2089 ]
  %.pn2441592 = phi float [ %1047, %.lr.ph ], [ %2182, %2089 ]
  %.pn2461591 = phi float [ %1046, %.lr.ph ], [ %2181, %2089 ]
  %.pn2481590 = phi float [ %1045, %.lr.ph ], [ %2180, %2089 ]
  %.pn2501589 = phi float [ %1044, %.lr.ph ], [ %2179, %2089 ]
  %.pn2521588 = phi float [ %1042, %.lr.ph ], [ %2178, %2089 ]
  %.pn2541587 = phi float [ %1041, %.lr.ph ], [ %2177, %2089 ]
  %.pn2561586 = phi float [ %1040, %.lr.ph ], [ %2176, %2089 ]
  %.pn2581585 = phi float [ %1039, %.lr.ph ], [ %2175, %2089 ]
  %.pn2601584 = phi float [ %1037, %.lr.ph ], [ %2174, %2089 ]
  %.pn2621583 = phi float [ %1036, %.lr.ph ], [ %2173, %2089 ]
  %.pn2641582 = phi float [ %1035, %.lr.ph ], [ %2172, %2089 ]
  %.pn2661581 = phi float [ %1034, %.lr.ph ], [ %2171, %2089 ]
  %.pn2681580 = phi float [ %1032, %.lr.ph ], [ %2170, %2089 ]
  %.pn2701579 = phi float [ %1031, %.lr.ph ], [ %2169, %2089 ]
  %.pn2721578 = phi float [ %1030, %.lr.ph ], [ %2168, %2089 ]
  %.pn2741577 = phi float [ %1029, %.lr.ph ], [ %2167, %2089 ]
  %.pn244.pn1576 = phi float [ %984, %.lr.ph ], [ %.pn2441592, %2089 ]
  %.pn246.pn1575 = phi float [ %983, %.lr.ph ], [ %.pn2461591, %2089 ]
  %.pn248.pn1574 = phi float [ %982, %.lr.ph ], [ %.pn2481590, %2089 ]
  %.pn250.pn1573 = phi float [ %981, %.lr.ph ], [ %.pn2501589, %2089 ]
  %.pn252.pn1572 = phi float [ %979, %.lr.ph ], [ %.pn2521588, %2089 ]
  %.pn254.pn1571 = phi float [ %978, %.lr.ph ], [ %.pn2541587, %2089 ]
  %.pn256.pn1570 = phi float [ %977, %.lr.ph ], [ %.pn2561586, %2089 ]
  %.pn258.pn1569 = phi float [ %976, %.lr.ph ], [ %.pn2581585, %2089 ]
  %.pn260.pn1568 = phi float [ %974, %.lr.ph ], [ %.pn2601584, %2089 ]
  %.pn262.pn1567 = phi float [ %973, %.lr.ph ], [ %.pn2621583, %2089 ]
  %.pn264.pn1566 = phi float [ %972, %.lr.ph ], [ %.pn2641582, %2089 ]
  %.pn266.pn1565 = phi float [ %971, %.lr.ph ], [ %.pn2661581, %2089 ]
  %.pn268.pn1564 = phi float [ %969, %.lr.ph ], [ %.pn2681580, %2089 ]
  %.pn270.pn1563 = phi float [ %968, %.lr.ph ], [ %.pn2701579, %2089 ]
  %.pn272.pn1562 = phi float [ %967, %.lr.ph ], [ %.pn2721578, %2089 ]
  %.pn274.pn1561 = phi float [ %966, %.lr.ph ], [ %.pn2741577, %2089 ]
  %.pn244.pn.pn1560 = phi float [ %945, %.lr.ph ], [ %.pn244.pn1576, %2089 ]
  %.pn246.pn.pn1559 = phi float [ %944, %.lr.ph ], [ %.pn246.pn1575, %2089 ]
  %.pn248.pn.pn1558 = phi float [ %943, %.lr.ph ], [ %.pn248.pn1574, %2089 ]
  %.pn250.pn.pn1557 = phi float [ %942, %.lr.ph ], [ %.pn250.pn1573, %2089 ]
  %.pn252.pn.pn1556 = phi float [ %940, %.lr.ph ], [ %.pn252.pn1572, %2089 ]
  %.pn254.pn.pn1555 = phi float [ %939, %.lr.ph ], [ %.pn254.pn1571, %2089 ]
  %.pn256.pn.pn1554 = phi float [ %938, %.lr.ph ], [ %.pn256.pn1570, %2089 ]
  %.pn258.pn.pn1553 = phi float [ %937, %.lr.ph ], [ %.pn258.pn1569, %2089 ]
  %.pn260.pn.pn1552 = phi float [ %935, %.lr.ph ], [ %.pn260.pn1568, %2089 ]
  %.pn262.pn.pn1551 = phi float [ %934, %.lr.ph ], [ %.pn262.pn1567, %2089 ]
  %.pn264.pn.pn1550 = phi float [ %933, %.lr.ph ], [ %.pn264.pn1566, %2089 ]
  %.pn266.pn.pn1549 = phi float [ %932, %.lr.ph ], [ %.pn266.pn1565, %2089 ]
  %.pn268.pn.pn1548 = phi float [ %930, %.lr.ph ], [ %.pn268.pn1564, %2089 ]
  %.pn270.pn.pn1547 = phi float [ %929, %.lr.ph ], [ %.pn270.pn1563, %2089 ]
  %.pn272.pn.pn1546 = phi float [ %928, %.lr.ph ], [ %.pn272.pn1562, %2089 ]
  %.pn274.pn.pn1545 = phi float [ %927, %.lr.ph ], [ %.pn274.pn1561, %2089 ]
  %.pn244.pn.pn.pn1544 = phi float [ %906, %.lr.ph ], [ %.pn244.pn.pn1560, %2089 ]
  %.pn246.pn.pn.pn1543 = phi float [ %905, %.lr.ph ], [ %.pn246.pn.pn1559, %2089 ]
  %.pn248.pn.pn.pn1542 = phi float [ %904, %.lr.ph ], [ %.pn248.pn.pn1558, %2089 ]
  %.pn250.pn.pn.pn1541 = phi float [ %903, %.lr.ph ], [ %.pn250.pn.pn1557, %2089 ]
  %.pn252.pn.pn.pn1540 = phi float [ %901, %.lr.ph ], [ %.pn252.pn.pn1556, %2089 ]
  %.pn254.pn.pn.pn1539 = phi float [ %900, %.lr.ph ], [ %.pn254.pn.pn1555, %2089 ]
  %.pn256.pn.pn.pn1538 = phi float [ %899, %.lr.ph ], [ %.pn256.pn.pn1554, %2089 ]
  %.pn258.pn.pn.pn1537 = phi float [ %898, %.lr.ph ], [ %.pn258.pn.pn1553, %2089 ]
  %.pn260.pn.pn.pn1536 = phi float [ %896, %.lr.ph ], [ %.pn260.pn.pn1552, %2089 ]
  %.pn262.pn.pn.pn1535 = phi float [ %895, %.lr.ph ], [ %.pn262.pn.pn1551, %2089 ]
  %.pn264.pn.pn.pn1534 = phi float [ %894, %.lr.ph ], [ %.pn264.pn.pn1550, %2089 ]
  %.pn266.pn.pn.pn1533 = phi float [ %893, %.lr.ph ], [ %.pn266.pn.pn1549, %2089 ]
  %.pn268.pn.pn.pn1532 = phi float [ %891, %.lr.ph ], [ %.pn268.pn.pn1548, %2089 ]
  %.pn270.pn.pn.pn1531 = phi float [ %890, %.lr.ph ], [ %.pn270.pn.pn1547, %2089 ]
  %.pn272.pn.pn.pn1530 = phi float [ %889, %.lr.ph ], [ %.pn272.pn.pn1546, %2089 ]
  %.pn274.pn.pn.pn1529 = phi float [ %888, %.lr.ph ], [ %.pn274.pn.pn1545, %2089 ]
  %2092 = phi i32 [ %1019, %.lr.ph ], [ %2160, %2089 ]
  %.pn1641496 = phi float [ %1882, %.lr.ph ], [ %2655, %2089 ]
  %.pn1661495 = phi float [ %1956, %.lr.ph ], [ %2654, %2089 ]
  %.pn1681494 = phi float [ %1957, %.lr.ph ], [ %2653, %2089 ]
  %.pn1701493 = phi float [ %1881, %.lr.ph ], [ %2652, %2089 ]
  %.pn1721492 = phi float [ %1880, %.lr.ph ], [ %2651, %2089 ]
  %.pn1741491 = phi float [ %1958, %.lr.ph ], [ %2650, %2089 ]
  %.pn1761490 = phi float [ %1959, %.lr.ph ], [ %2649, %2089 ]
  %.pn1781489 = phi float [ %1879, %.lr.ph ], [ %2648, %2089 ]
  %.pn1801488 = phi float [ %1878, %.lr.ph ], [ %2647, %2089 ]
  %.pn1821487 = phi float [ %1960, %.lr.ph ], [ %2646, %2089 ]
  %.pn1841486 = phi float [ %1961, %.lr.ph ], [ %2645, %2089 ]
  %.pn1861485 = phi float [ %1877, %.lr.ph ], [ %2644, %2089 ]
  %.pn1881484 = phi float [ %1876, %.lr.ph ], [ %2643, %2089 ]
  %.pn1901483 = phi float [ %1962, %.lr.ph ], [ %2642, %2089 ]
  %.pn1921482 = phi float [ %1963, %.lr.ph ], [ %2641, %2089 ]
  %.pn1941481 = phi float [ %1875, %.lr.ph ], [ %2640, %2089 ]
  %.pn1961480 = phi float [ %1872, %.lr.ph ], [ %2619, %2089 ]
  %.pn1981479 = phi float [ %1964, %.lr.ph ], [ %2618, %2089 ]
  %.pn2001478 = phi float [ %1965, %.lr.ph ], [ %2617, %2089 ]
  %.pn2021477 = phi float [ %1871, %.lr.ph ], [ %2616, %2089 ]
  %.pn2041476 = phi float [ %1870, %.lr.ph ], [ %2615, %2089 ]
  %.pn2061475 = phi float [ %1966, %.lr.ph ], [ %2614, %2089 ]
  %.pn2081474 = phi float [ %1967, %.lr.ph ], [ %2613, %2089 ]
  %.pn2101473 = phi float [ %1869, %.lr.ph ], [ %2612, %2089 ]
  %.pn2121472 = phi float [ %1868, %.lr.ph ], [ %2611, %2089 ]
  %.pn2141471 = phi float [ %1968, %.lr.ph ], [ %2610, %2089 ]
  %.pn2161470 = phi float [ %1969, %.lr.ph ], [ %2609, %2089 ]
  %.pn2181469 = phi float [ %1867, %.lr.ph ], [ %2608, %2089 ]
  %.pn2201468 = phi float [ %1866, %.lr.ph ], [ %2607, %2089 ]
  %.pn2221467 = phi float [ %1970, %.lr.ph ], [ %2606, %2089 ]
  %.pn2241466 = phi float [ %1971, %.lr.ph ], [ %2605, %2089 ]
  %.pn2261465 = phi float [ %1865, %.lr.ph ], [ %2604, %2089 ]
  %.pn1001464 = phi float [ %1794, %.lr.ph ], [ %2436, %2089 ]
  %.pn1021463 = phi float [ %1793, %.lr.ph ], [ %2435, %2089 ]
  %.pn1041462 = phi float [ %1792, %.lr.ph ], [ %2434, %2089 ]
  %.pn1061461 = phi float [ %1791, %.lr.ph ], [ %2433, %2089 ]
  %.pn1081460 = phi float [ %1790, %.lr.ph ], [ %2432, %2089 ]
  %.pn1101459 = phi float [ %1789, %.lr.ph ], [ %2431, %2089 ]
  %.pn1121458 = phi float [ %1788, %.lr.ph ], [ %2430, %2089 ]
  %.pn1141457 = phi float [ %1787, %.lr.ph ], [ %2429, %2089 ]
  %.pn1161456 = phi float [ %1786, %.lr.ph ], [ %2428, %2089 ]
  %.pn1181455 = phi float [ %1785, %.lr.ph ], [ %2427, %2089 ]
  %.pn1201454 = phi float [ %1784, %.lr.ph ], [ %2426, %2089 ]
  %.pn1221453 = phi float [ %1783, %.lr.ph ], [ %2425, %2089 ]
  %.pn1241452 = phi float [ %1782, %.lr.ph ], [ %2424, %2089 ]
  %.pn1261451 = phi float [ %1781, %.lr.ph ], [ %2423, %2089 ]
  %.pn1281450 = phi float [ %1780, %.lr.ph ], [ %2422, %2089 ]
  %.pn1301449 = phi float [ %1779, %.lr.ph ], [ %2421, %2089 ]
  %.pn1321448 = phi float [ %1776, %.lr.ph ], [ %2400, %2089 ]
  %.pn1341447 = phi float [ %1775, %.lr.ph ], [ %2399, %2089 ]
  %.pn1361446 = phi float [ %1774, %.lr.ph ], [ %2398, %2089 ]
  %.pn1381445 = phi float [ %1773, %.lr.ph ], [ %2397, %2089 ]
  %.pn1401444 = phi float [ %1772, %.lr.ph ], [ %2396, %2089 ]
  %.pn1421443 = phi float [ %1771, %.lr.ph ], [ %2395, %2089 ]
  %.pn1441442 = phi float [ %1770, %.lr.ph ], [ %2394, %2089 ]
  %.pn1461441 = phi float [ %1769, %.lr.ph ], [ %2393, %2089 ]
  %.pn1481440 = phi float [ %1768, %.lr.ph ], [ %2392, %2089 ]
  %.pn1501439 = phi float [ %1767, %.lr.ph ], [ %2391, %2089 ]
  %.pn1521438 = phi float [ %1766, %.lr.ph ], [ %2390, %2089 ]
  %.pn1541437 = phi float [ %1765, %.lr.ph ], [ %2389, %2089 ]
  %.pn1561436 = phi float [ %1764, %.lr.ph ], [ %2388, %2089 ]
  %.pn1581435 = phi float [ %1763, %.lr.ph ], [ %2387, %2089 ]
  %.pn1601434 = phi float [ %1762, %.lr.ph ], [ %2386, %2089 ]
  %.pn1621433 = phi float [ %1761, %.lr.ph ], [ %2385, %2089 ]
  %2093 = phi i32 [ 0, %.lr.ph ], [ %2656, %2089 ]
  %2094 = phi <2 x float> [ %2025, %.lr.ph ], [ %2657, %2089 ]
  %2095 = phi <2 x float> [ %2026, %.lr.ph ], [ %2658, %2089 ]
  %2096 = phi <2 x float> [ %2027, %.lr.ph ], [ %2659, %2089 ]
  %2097 = phi <2 x float> [ %2028, %.lr.ph ], [ %2660, %2089 ]
  %2098 = phi <2 x float> [ %2029, %.lr.ph ], [ %2661, %2089 ]
  %2099 = phi <2 x float> [ %2030, %.lr.ph ], [ %2662, %2089 ]
  %2100 = phi <2 x float> [ %2031, %.lr.ph ], [ %2663, %2089 ]
  %2101 = phi <2 x float> [ %2032, %.lr.ph ], [ %2664, %2089 ]
  %2102 = phi <2 x half> [ %2033, %.lr.ph ], [ %2665, %2089 ]
  %2103 = phi <2 x half> [ %2034, %.lr.ph ], [ %2666, %2089 ]
  %2104 = phi <2 x half> [ %2035, %.lr.ph ], [ %2667, %2089 ]
  %2105 = phi <2 x half> [ %2036, %.lr.ph ], [ %2668, %2089 ]
  %2106 = phi <2 x half> [ %2037, %.lr.ph ], [ %2669, %2089 ]
  %2107 = phi <2 x half> [ %2038, %.lr.ph ], [ %2671, %2089 ]
  %2108 = phi <2 x half> [ %2039, %.lr.ph ], [ %2672, %2089 ]
  %2109 = phi <2 x half> [ %2040, %.lr.ph ], [ %2670, %2089 ]
  %2110 = phi <2 x float> [ %2041, %.lr.ph ], [ %2094, %2089 ]
  %2111 = phi <2 x float> [ %2042, %.lr.ph ], [ %2095, %2089 ]
  %2112 = phi <2 x float> [ %2043, %.lr.ph ], [ %2096, %2089 ]
  %2113 = phi <2 x float> [ %2044, %.lr.ph ], [ %2097, %2089 ]
  %2114 = phi <2 x float> [ %2045, %.lr.ph ], [ %2098, %2089 ]
  %2115 = phi <2 x float> [ %2046, %.lr.ph ], [ %2099, %2089 ]
  %2116 = phi <2 x float> [ %2047, %.lr.ph ], [ %2100, %2089 ]
  %2117 = phi <2 x float> [ %2048, %.lr.ph ], [ %2101, %2089 ]
  %2118 = phi <2 x half> [ %2049, %.lr.ph ], [ %2102, %2089 ]
  %2119 = phi <2 x half> [ %2050, %.lr.ph ], [ %2103, %2089 ]
  %2120 = phi <2 x half> [ %2051, %.lr.ph ], [ %2104, %2089 ]
  %2121 = phi <2 x half> [ %2052, %.lr.ph ], [ %2105, %2089 ]
  %2122 = phi <2 x half> [ %2053, %.lr.ph ], [ %2106, %2089 ]
  %2123 = phi <2 x half> [ %2054, %.lr.ph ], [ %2107, %2089 ]
  %2124 = phi <2 x half> [ %2055, %.lr.ph ], [ %2109, %2089 ]
  %2125 = phi <2 x half> [ %2056, %.lr.ph ], [ %2108, %2089 ]
  %2126 = phi <2 x float> [ %2057, %.lr.ph ], [ %2110, %2089 ]
  %2127 = phi <2 x float> [ %2058, %.lr.ph ], [ %2111, %2089 ]
  %2128 = phi <2 x float> [ %2059, %.lr.ph ], [ %2112, %2089 ]
  %2129 = phi <2 x float> [ %2060, %.lr.ph ], [ %2113, %2089 ]
  %2130 = phi <2 x float> [ %2061, %.lr.ph ], [ %2114, %2089 ]
  %2131 = phi <2 x float> [ %2062, %.lr.ph ], [ %2115, %2089 ]
  %2132 = phi <2 x float> [ %2063, %.lr.ph ], [ %2116, %2089 ]
  %2133 = phi <2 x float> [ %2064, %.lr.ph ], [ %2117, %2089 ]
  %2134 = phi <2 x half> [ %2065, %.lr.ph ], [ %2118, %2089 ]
  %2135 = phi <2 x half> [ %2066, %.lr.ph ], [ %2119, %2089 ]
  %2136 = phi <2 x half> [ %2067, %.lr.ph ], [ %2120, %2089 ]
  %2137 = phi <2 x half> [ %2068, %.lr.ph ], [ %2121, %2089 ]
  %2138 = phi <2 x half> [ %2069, %.lr.ph ], [ %2122, %2089 ]
  %2139 = phi <2 x half> [ %2070, %.lr.ph ], [ %2123, %2089 ]
  %2140 = phi <2 x half> [ %2071, %.lr.ph ], [ %2124, %2089 ]
  %2141 = phi <2 x half> [ %2072, %.lr.ph ], [ %2125, %2089 ]
  %2142 = phi <2 x half> [ %2073, %.lr.ph ], [ %2140, %2089 ]
  %2143 = phi <2 x half> [ %2074, %.lr.ph ], [ %2141, %2089 ]
  %2144 = phi <2 x half> [ %2075, %.lr.ph ], [ %2139, %2089 ]
  %2145 = phi <2 x half> [ %2076, %.lr.ph ], [ %2138, %2089 ]
  %2146 = phi <2 x half> [ %2077, %.lr.ph ], [ %2137, %2089 ]
  %2147 = phi <2 x half> [ %2078, %.lr.ph ], [ %2136, %2089 ]
  %2148 = phi <2 x half> [ %2079, %.lr.ph ], [ %2135, %2089 ]
  %2149 = phi <2 x half> [ %2080, %.lr.ph ], [ %2134, %2089 ]
  %2150 = phi <2 x float> [ %2081, %.lr.ph ], [ %2126, %2089 ]
  %2151 = phi <2 x float> [ %2082, %.lr.ph ], [ %2127, %2089 ]
  %2152 = phi <2 x float> [ %2083, %.lr.ph ], [ %2128, %2089 ]
  %2153 = phi <2 x float> [ %2084, %.lr.ph ], [ %2129, %2089 ]
  %2154 = phi <2 x float> [ %2085, %.lr.ph ], [ %2130, %2089 ]
  %2155 = phi <2 x float> [ %2086, %.lr.ph ], [ %2131, %2089 ]
  %2156 = phi <2 x float> [ %2087, %.lr.ph ], [ %2132, %2089 ]
  %2157 = phi <2 x float> [ %2088, %.lr.ph ], [ %2133, %2089 ]
  %2158 = getelementptr half, ptr addrspace(1) %2091, i64 %998, !dbg !83
  %2159 = getelementptr half, ptr addrspace(1) %2158, i64 %53, !dbg !84
  %unmaskedload1191 = load <8 x half>, ptr addrspace(1) %2159, align 16, !dbg !84
  %2160 = add i32 %2092, 32, !dbg !80
  %2161 = sext i32 %2160 to i64, !dbg !73
  %2162 = getelementptr float, ptr addrspace(1) %69, i64 %2161, !dbg !73
  %2163 = getelementptr float, ptr addrspace(1) %2162, i64 %877, !dbg !77
  %2164 = getelementptr float, ptr addrspace(1) %2162, i64 %879, !dbg !77
  %2165 = getelementptr float, ptr addrspace(1) %2162, i64 %881, !dbg !77
  %2166 = getelementptr float, ptr addrspace(1) %2162, i64 %883, !dbg !77
  %unmaskedload1192 = load <4 x float>, ptr addrspace(1) %2163, align 16, !dbg !77
  %2167 = extractelement <4 x float> %unmaskedload1192, i64 0, !dbg !77
  %2168 = extractelement <4 x float> %unmaskedload1192, i64 1, !dbg !77
  %2169 = extractelement <4 x float> %unmaskedload1192, i64 2, !dbg !77
  %2170 = extractelement <4 x float> %unmaskedload1192, i64 3, !dbg !77
  %unmaskedload1193 = load <4 x float>, ptr addrspace(1) %2164, align 16, !dbg !77
  %2171 = extractelement <4 x float> %unmaskedload1193, i64 0, !dbg !77
  %2172 = extractelement <4 x float> %unmaskedload1193, i64 1, !dbg !77
  %2173 = extractelement <4 x float> %unmaskedload1193, i64 2, !dbg !77
  %2174 = extractelement <4 x float> %unmaskedload1193, i64 3, !dbg !77
  %unmaskedload1194 = load <4 x float>, ptr addrspace(1) %2165, align 16, !dbg !77
  %2175 = extractelement <4 x float> %unmaskedload1194, i64 0, !dbg !77
  %2176 = extractelement <4 x float> %unmaskedload1194, i64 1, !dbg !77
  %2177 = extractelement <4 x float> %unmaskedload1194, i64 2, !dbg !77
  %2178 = extractelement <4 x float> %unmaskedload1194, i64 3, !dbg !77
  %unmaskedload1195 = load <4 x float>, ptr addrspace(1) %2166, align 16, !dbg !77
  %2179 = extractelement <4 x float> %unmaskedload1195, i64 0, !dbg !77
  %2180 = extractelement <4 x float> %unmaskedload1195, i64 1, !dbg !77
  %2181 = extractelement <4 x float> %unmaskedload1195, i64 2, !dbg !77
  %2182 = extractelement <4 x float> %unmaskedload1195, i64 3, !dbg !77
  %2183 = getelementptr half, ptr addrspace(1) %2090, i64 %998, !dbg !86
  %2184 = getelementptr half, ptr addrspace(1) %2183, i64 %53, !dbg !87
  %unmaskedload1196 = load <8 x half>, ptr addrspace(1) %2184, align 16, !dbg !87
  %2185 = getelementptr float, ptr addrspace(1) %89, i64 %2161, !dbg !78
  %2186 = getelementptr float, ptr addrspace(1) %2185, i64 %877, !dbg !79
  %2187 = getelementptr float, ptr addrspace(1) %2185, i64 %879, !dbg !79
  %2188 = getelementptr float, ptr addrspace(1) %2185, i64 %881, !dbg !79
  %2189 = getelementptr float, ptr addrspace(1) %2185, i64 %883, !dbg !79
  %unmaskedload1197 = load <4 x float>, ptr addrspace(1) %2186, align 16, !dbg !79
  %unmaskedload1198 = load <4 x float>, ptr addrspace(1) %2187, align 16, !dbg !79
  %unmaskedload1199 = load <4 x float>, ptr addrspace(1) %2188, align 16, !dbg !79
  %unmaskedload1200 = load <4 x float>, ptr addrspace(1) %2189, align 16, !dbg !79
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %2190 = shufflevector <2 x half> %2149, <2 x half> %2148, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %2190, ptr addrspace(3) %185, align 8, !dbg !84
  %2191 = shufflevector <2 x half> %2147, <2 x half> %2146, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %2191, ptr addrspace(3) %192, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %2192 = load <4 x half>, ptr addrspace(3) %1982, align 8, !dbg !84
  %2193 = load <4 x half>, ptr addrspace(3) %1983, align 8, !dbg !84
  %2194 = load <4 x half>, ptr addrspace(3) %1984, align 8, !dbg !84
  %2195 = load <4 x half>, ptr addrspace(3) %1985, align 8, !dbg !84
  %2196 = load <4 x half>, ptr addrspace(3) %1986, align 8, !dbg !84
  %2197 = load <4 x half>, ptr addrspace(3) %1987, align 8, !dbg !84
  %2198 = load <4 x half>, ptr addrspace(3) %1988, align 8, !dbg !84
  %2199 = load <4 x half>, ptr addrspace(3) %1989, align 8, !dbg !84
  %2200 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2192, <4 x half> %250, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !89
  %2201 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2193, <4 x half> %252, <16 x float> %2200, i32 0, i32 0, i32 0), !dbg !89
  %2202 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2194, <4 x half> %254, <16 x float> %2201, i32 0, i32 0, i32 0), !dbg !89
  %2203 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2195, <4 x half> %256, <16 x float> %2202, i32 0, i32 0, i32 0), !dbg !89
  %2204 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2196, <4 x half> %258, <16 x float> %2203, i32 0, i32 0, i32 0), !dbg !89
  %2205 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2197, <4 x half> %260, <16 x float> %2204, i32 0, i32 0, i32 0), !dbg !89
  %2206 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2198, <4 x half> %262, <16 x float> %2205, i32 0, i32 0, i32 0), !dbg !89
  %2207 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2199, <4 x half> %264, <16 x float> %2206, i32 0, i32 0, i32 0), !dbg !89
  %2208 = extractelement <16 x float> %2207, i64 0, !dbg !89
  %2209 = extractelement <16 x float> %2207, i64 1, !dbg !89
  %2210 = extractelement <16 x float> %2207, i64 2, !dbg !89
  %2211 = extractelement <16 x float> %2207, i64 3, !dbg !89
  %2212 = extractelement <16 x float> %2207, i64 4, !dbg !89
  %2213 = extractelement <16 x float> %2207, i64 5, !dbg !89
  %2214 = extractelement <16 x float> %2207, i64 6, !dbg !89
  %2215 = extractelement <16 x float> %2207, i64 7, !dbg !89
  %2216 = extractelement <16 x float> %2207, i64 8, !dbg !89
  %2217 = extractelement <16 x float> %2207, i64 9, !dbg !89
  %2218 = extractelement <16 x float> %2207, i64 10, !dbg !89
  %2219 = extractelement <16 x float> %2207, i64 11, !dbg !89
  %2220 = extractelement <16 x float> %2207, i64 12, !dbg !89
  %2221 = extractelement <16 x float> %2207, i64 13, !dbg !89
  %2222 = extractelement <16 x float> %2207, i64 14, !dbg !89
  %2223 = extractelement <16 x float> %2207, i64 15, !dbg !89
  %2224 = fsub float %2208, %.pn274.pn.pn.pn1529, !dbg !90
  %2225 = fsub float %2209, %.pn272.pn.pn.pn1530, !dbg !90
  %2226 = fsub float %2210, %.pn270.pn.pn.pn1531, !dbg !90
  %2227 = fsub float %2211, %.pn268.pn.pn.pn1532, !dbg !90
  %2228 = fsub float %2212, %.pn266.pn.pn.pn1533, !dbg !90
  %2229 = fsub float %2213, %.pn264.pn.pn.pn1534, !dbg !90
  %2230 = fsub float %2214, %.pn262.pn.pn.pn1535, !dbg !90
  %2231 = fsub float %2215, %.pn260.pn.pn.pn1536, !dbg !90
  %2232 = fsub float %2216, %.pn258.pn.pn.pn1537, !dbg !90
  %2233 = fsub float %2217, %.pn256.pn.pn.pn1538, !dbg !90
  %2234 = fsub float %2218, %.pn254.pn.pn.pn1539, !dbg !90
  %2235 = fsub float %2219, %.pn252.pn.pn.pn1540, !dbg !90
  %2236 = fsub float %2220, %.pn250.pn.pn.pn1541, !dbg !90
  %2237 = fsub float %2221, %.pn248.pn.pn.pn1542, !dbg !90
  %2238 = fsub float %2222, %.pn246.pn.pn.pn1543, !dbg !90
  %2239 = fsub float %2223, %.pn244.pn.pn.pn1544, !dbg !90
  %2240 = tail call float @llvm.amdgcn.exp2.f32(float %2224), !dbg !91
  %2241 = tail call float @llvm.amdgcn.exp2.f32(float %2225), !dbg !91
  %2242 = tail call float @llvm.amdgcn.exp2.f32(float %2226), !dbg !91
  %2243 = tail call float @llvm.amdgcn.exp2.f32(float %2227), !dbg !91
  %2244 = tail call float @llvm.amdgcn.exp2.f32(float %2228), !dbg !91
  %2245 = tail call float @llvm.amdgcn.exp2.f32(float %2229), !dbg !91
  %2246 = tail call float @llvm.amdgcn.exp2.f32(float %2230), !dbg !91
  %2247 = tail call float @llvm.amdgcn.exp2.f32(float %2231), !dbg !91
  %2248 = tail call float @llvm.amdgcn.exp2.f32(float %2232), !dbg !91
  %2249 = tail call float @llvm.amdgcn.exp2.f32(float %2233), !dbg !91
  %2250 = tail call float @llvm.amdgcn.exp2.f32(float %2234), !dbg !91
  %2251 = tail call float @llvm.amdgcn.exp2.f32(float %2235), !dbg !91
  %2252 = tail call float @llvm.amdgcn.exp2.f32(float %2236), !dbg !91
  %2253 = tail call float @llvm.amdgcn.exp2.f32(float %2237), !dbg !91
  %2254 = tail call float @llvm.amdgcn.exp2.f32(float %2238), !dbg !91
  %2255 = tail call float @llvm.amdgcn.exp2.f32(float %2239), !dbg !91
  %2256 = fptrunc float %2240 to half, !dbg !92
  %2257 = fptrunc float %2241 to half, !dbg !92
  %2258 = fptrunc float %2242 to half, !dbg !92
  %2259 = fptrunc float %2243 to half, !dbg !92
  %2260 = fptrunc float %2244 to half, !dbg !92
  %2261 = fptrunc float %2245 to half, !dbg !92
  %2262 = fptrunc float %2246 to half, !dbg !92
  %2263 = fptrunc float %2247 to half, !dbg !92
  %2264 = fptrunc float %2248 to half, !dbg !92
  %2265 = fptrunc float %2249 to half, !dbg !92
  %2266 = fptrunc float %2250 to half, !dbg !92
  %2267 = fptrunc float %2251 to half, !dbg !92
  %2268 = fptrunc float %2252 to half, !dbg !92
  %2269 = fptrunc float %2253 to half, !dbg !92
  %2270 = fptrunc float %2254 to half, !dbg !92
  %2271 = fptrunc float %2255 to half, !dbg !92
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %2272 = shufflevector <2 x half> %2145, <2 x half> %2144, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2273 = shufflevector <2 x half> %2143, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2274 = shufflevector <8 x half> %2272, <8 x half> %2273, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !87
  %2275 = shufflevector <2 x half> %2142, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2276 = shufflevector <8 x half> %2274, <8 x half> %2275, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !87
  store <8 x half> %2276, ptr addrspace(3) %1991, align 16, !dbg !87
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %2277 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !87
  %2278 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !87
  %2279 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !87
  %2280 = shufflevector <1 x half> %2279, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2281 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !87
  %2282 = shufflevector <1 x half> %2281, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2283 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !87
  %2284 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !87
  %2285 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !87
  %2286 = shufflevector <1 x half> %2285, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2287 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !87
  %2288 = shufflevector <1 x half> %2287, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2289 = load <1 x half>, ptr addrspace(3) %2008, align 2, !dbg !87
  %2290 = load <1 x half>, ptr addrspace(3) %2009, align 2, !dbg !87
  %2291 = load <1 x half>, ptr addrspace(3) %2010, align 2, !dbg !87
  %2292 = shufflevector <1 x half> %2291, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2293 = load <1 x half>, ptr addrspace(3) %2011, align 2, !dbg !87
  %2294 = shufflevector <1 x half> %2293, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2295 = load <1 x half>, ptr addrspace(3) %2012, align 2, !dbg !87
  %2296 = load <1 x half>, ptr addrspace(3) %2013, align 2, !dbg !87
  %2297 = load <1 x half>, ptr addrspace(3) %2014, align 2, !dbg !87
  %2298 = shufflevector <1 x half> %2297, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2299 = load <1 x half>, ptr addrspace(3) %2015, align 2, !dbg !87
  %2300 = shufflevector <1 x half> %2299, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2301 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !87
  %2302 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !87
  %2303 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !87
  %2304 = shufflevector <1 x half> %2303, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2305 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !87
  %2306 = shufflevector <1 x half> %2305, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2307 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !87
  %2308 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !87
  %2309 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !87
  %2310 = shufflevector <1 x half> %2309, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2311 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !87
  %2312 = shufflevector <1 x half> %2311, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2313 = load <1 x half>, ptr addrspace(3) %2016, align 2, !dbg !87
  %2314 = load <1 x half>, ptr addrspace(3) %2017, align 2, !dbg !87
  %2315 = load <1 x half>, ptr addrspace(3) %2018, align 2, !dbg !87
  %2316 = shufflevector <1 x half> %2315, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2317 = load <1 x half>, ptr addrspace(3) %2019, align 2, !dbg !87
  %2318 = shufflevector <1 x half> %2317, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2319 = load <1 x half>, ptr addrspace(3) %2020, align 2, !dbg !87
  %2320 = load <1 x half>, ptr addrspace(3) %2021, align 2, !dbg !87
  %2321 = load <1 x half>, ptr addrspace(3) %2022, align 2, !dbg !87
  %2322 = shufflevector <1 x half> %2321, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2323 = load <1 x half>, ptr addrspace(3) %2023, align 2, !dbg !87
  %2324 = shufflevector <1 x half> %2323, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2325 = insertelement <4 x half> poison, half %2256, i64 0, !dbg !93
  %2326 = insertelement <4 x half> %2325, half %2257, i64 1, !dbg !93
  %2327 = insertelement <4 x half> %2326, half %2258, i64 2, !dbg !93
  %2328 = insertelement <4 x half> %2327, half %2259, i64 3, !dbg !93
  %2329 = insertelement <4 x half> poison, half %2260, i64 0, !dbg !93
  %2330 = insertelement <4 x half> %2329, half %2261, i64 1, !dbg !93
  %2331 = insertelement <4 x half> %2330, half %2262, i64 2, !dbg !93
  %2332 = insertelement <4 x half> %2331, half %2263, i64 3, !dbg !93
  %2333 = insertelement <4 x half> poison, half %2264, i64 0, !dbg !93
  %2334 = insertelement <4 x half> %2333, half %2265, i64 1, !dbg !93
  %2335 = insertelement <4 x half> %2334, half %2266, i64 2, !dbg !93
  %2336 = insertelement <4 x half> %2335, half %2267, i64 3, !dbg !93
  %2337 = insertelement <4 x half> poison, half %2268, i64 0, !dbg !93
  %2338 = insertelement <4 x half> %2337, half %2269, i64 1, !dbg !93
  %2339 = insertelement <4 x half> %2338, half %2270, i64 2, !dbg !93
  %2340 = insertelement <4 x half> %2339, half %2271, i64 3, !dbg !93
  %2341 = shufflevector <1 x half> %2277, <1 x half> %2278, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2342 = shufflevector <4 x half> %2341, <4 x half> %2280, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2343 = shufflevector <4 x half> %2342, <4 x half> %2282, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2344 = shufflevector <1 x half> %2283, <1 x half> %2284, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2345 = shufflevector <4 x half> %2344, <4 x half> %2286, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2346 = shufflevector <4 x half> %2345, <4 x half> %2288, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2347 = shufflevector <1 x half> %2289, <1 x half> %2290, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2348 = shufflevector <4 x half> %2347, <4 x half> %2292, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2349 = shufflevector <4 x half> %2348, <4 x half> %2294, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2350 = shufflevector <1 x half> %2295, <1 x half> %2296, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2351 = shufflevector <4 x half> %2350, <4 x half> %2298, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2352 = shufflevector <4 x half> %2351, <4 x half> %2300, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2353 = shufflevector <1 x half> %2301, <1 x half> %2302, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2354 = shufflevector <4 x half> %2353, <4 x half> %2304, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2355 = shufflevector <4 x half> %2354, <4 x half> %2306, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2356 = shufflevector <1 x half> %2307, <1 x half> %2308, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2357 = shufflevector <4 x half> %2356, <4 x half> %2310, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2358 = shufflevector <4 x half> %2357, <4 x half> %2312, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2359 = shufflevector <1 x half> %2313, <1 x half> %2314, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2360 = shufflevector <4 x half> %2359, <4 x half> %2316, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2361 = shufflevector <4 x half> %2360, <4 x half> %2318, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2362 = shufflevector <1 x half> %2319, <1 x half> %2320, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %2363 = shufflevector <4 x half> %2362, <4 x half> %2322, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %2364 = shufflevector <4 x half> %2363, <4 x half> %2324, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %2365 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn1621433, i64 0, !dbg !93
  %2366 = insertelement <16 x float> %2365, float %.pn1601434, i64 1, !dbg !93
  %2367 = insertelement <16 x float> %2366, float %.pn1581435, i64 2, !dbg !93
  %2368 = insertelement <16 x float> %2367, float %.pn1561436, i64 3, !dbg !93
  %2369 = insertelement <16 x float> %2368, float %.pn1541437, i64 4, !dbg !93
  %2370 = insertelement <16 x float> %2369, float %.pn1521438, i64 5, !dbg !93
  %2371 = insertelement <16 x float> %2370, float %.pn1501439, i64 6, !dbg !93
  %2372 = insertelement <16 x float> %2371, float %.pn1481440, i64 7, !dbg !93
  %2373 = insertelement <16 x float> %2372, float %.pn1461441, i64 8, !dbg !93
  %2374 = insertelement <16 x float> %2373, float %.pn1441442, i64 9, !dbg !93
  %2375 = insertelement <16 x float> %2374, float %.pn1421443, i64 10, !dbg !93
  %2376 = insertelement <16 x float> %2375, float %.pn1401444, i64 11, !dbg !93
  %2377 = insertelement <16 x float> %2376, float %.pn1381445, i64 12, !dbg !93
  %2378 = insertelement <16 x float> %2377, float %.pn1361446, i64 13, !dbg !93
  %2379 = insertelement <16 x float> %2378, float %.pn1341447, i64 14, !dbg !93
  %2380 = insertelement <16 x float> %2379, float %.pn1321448, i64 15, !dbg !93
  %2381 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2343, <4 x half> %2328, <16 x float> %2380, i32 0, i32 0, i32 0), !dbg !93
  %2382 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2346, <4 x half> %2332, <16 x float> %2381, i32 0, i32 0, i32 0), !dbg !93
  %2383 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2349, <4 x half> %2336, <16 x float> %2382, i32 0, i32 0, i32 0), !dbg !93
  %2384 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2352, <4 x half> %2340, <16 x float> %2383, i32 0, i32 0, i32 0), !dbg !93
  %2385 = extractelement <16 x float> %2384, i64 0, !dbg !93
  %2386 = extractelement <16 x float> %2384, i64 1, !dbg !93
  %2387 = extractelement <16 x float> %2384, i64 2, !dbg !93
  %2388 = extractelement <16 x float> %2384, i64 3, !dbg !93
  %2389 = extractelement <16 x float> %2384, i64 4, !dbg !93
  %2390 = extractelement <16 x float> %2384, i64 5, !dbg !93
  %2391 = extractelement <16 x float> %2384, i64 6, !dbg !93
  %2392 = extractelement <16 x float> %2384, i64 7, !dbg !93
  %2393 = extractelement <16 x float> %2384, i64 8, !dbg !93
  %2394 = extractelement <16 x float> %2384, i64 9, !dbg !93
  %2395 = extractelement <16 x float> %2384, i64 10, !dbg !93
  %2396 = extractelement <16 x float> %2384, i64 11, !dbg !93
  %2397 = extractelement <16 x float> %2384, i64 12, !dbg !93
  %2398 = extractelement <16 x float> %2384, i64 13, !dbg !93
  %2399 = extractelement <16 x float> %2384, i64 14, !dbg !93
  %2400 = extractelement <16 x float> %2384, i64 15, !dbg !93
  %2401 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn1301449, i64 0, !dbg !93
  %2402 = insertelement <16 x float> %2401, float %.pn1281450, i64 1, !dbg !93
  %2403 = insertelement <16 x float> %2402, float %.pn1261451, i64 2, !dbg !93
  %2404 = insertelement <16 x float> %2403, float %.pn1241452, i64 3, !dbg !93
  %2405 = insertelement <16 x float> %2404, float %.pn1221453, i64 4, !dbg !93
  %2406 = insertelement <16 x float> %2405, float %.pn1201454, i64 5, !dbg !93
  %2407 = insertelement <16 x float> %2406, float %.pn1181455, i64 6, !dbg !93
  %2408 = insertelement <16 x float> %2407, float %.pn1161456, i64 7, !dbg !93
  %2409 = insertelement <16 x float> %2408, float %.pn1141457, i64 8, !dbg !93
  %2410 = insertelement <16 x float> %2409, float %.pn1121458, i64 9, !dbg !93
  %2411 = insertelement <16 x float> %2410, float %.pn1101459, i64 10, !dbg !93
  %2412 = insertelement <16 x float> %2411, float %.pn1081460, i64 11, !dbg !93
  %2413 = insertelement <16 x float> %2412, float %.pn1061461, i64 12, !dbg !93
  %2414 = insertelement <16 x float> %2413, float %.pn1041462, i64 13, !dbg !93
  %2415 = insertelement <16 x float> %2414, float %.pn1021463, i64 14, !dbg !93
  %2416 = insertelement <16 x float> %2415, float %.pn1001464, i64 15, !dbg !93
  %2417 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2355, <4 x half> %2328, <16 x float> %2416, i32 0, i32 0, i32 0), !dbg !93
  %2418 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2358, <4 x half> %2332, <16 x float> %2417, i32 0, i32 0, i32 0), !dbg !93
  %2419 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2361, <4 x half> %2336, <16 x float> %2418, i32 0, i32 0, i32 0), !dbg !93
  %2420 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2364, <4 x half> %2340, <16 x float> %2419, i32 0, i32 0, i32 0), !dbg !93
  %2421 = extractelement <16 x float> %2420, i64 0, !dbg !93
  %2422 = extractelement <16 x float> %2420, i64 1, !dbg !93
  %2423 = extractelement <16 x float> %2420, i64 2, !dbg !93
  %2424 = extractelement <16 x float> %2420, i64 3, !dbg !93
  %2425 = extractelement <16 x float> %2420, i64 4, !dbg !93
  %2426 = extractelement <16 x float> %2420, i64 5, !dbg !93
  %2427 = extractelement <16 x float> %2420, i64 6, !dbg !93
  %2428 = extractelement <16 x float> %2420, i64 7, !dbg !93
  %2429 = extractelement <16 x float> %2420, i64 8, !dbg !93
  %2430 = extractelement <16 x float> %2420, i64 9, !dbg !93
  %2431 = extractelement <16 x float> %2420, i64 10, !dbg !93
  %2432 = extractelement <16 x float> %2420, i64 11, !dbg !93
  %2433 = extractelement <16 x float> %2420, i64 12, !dbg !93
  %2434 = extractelement <16 x float> %2420, i64 13, !dbg !93
  %2435 = extractelement <16 x float> %2420, i64 14, !dbg !93
  %2436 = extractelement <16 x float> %2420, i64 15, !dbg !93
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %2437 = shufflevector <2 x half> %2145, <2 x half> %2144, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %2437, ptr addrspace(3) %185, align 8, !dbg !94
  %2438 = shufflevector <2 x half> %2143, <2 x half> %2142, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %2438, ptr addrspace(3) %192, align 8, !dbg !94
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %2439 = load <4 x half>, ptr addrspace(3) %1982, align 8, !dbg !94
  %2440 = load <4 x half>, ptr addrspace(3) %1983, align 8, !dbg !94
  %2441 = load <4 x half>, ptr addrspace(3) %1984, align 8, !dbg !94
  %2442 = load <4 x half>, ptr addrspace(3) %1985, align 8, !dbg !94
  %2443 = load <4 x half>, ptr addrspace(3) %1986, align 8, !dbg !94
  %2444 = load <4 x half>, ptr addrspace(3) %1987, align 8, !dbg !94
  %2445 = load <4 x half>, ptr addrspace(3) %1988, align 8, !dbg !94
  %2446 = load <4 x half>, ptr addrspace(3) %1989, align 8, !dbg !94
  %2447 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2439, <4 x half> %309, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !95
  %2448 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2440, <4 x half> %310, <16 x float> %2447, i32 0, i32 0, i32 0), !dbg !95
  %2449 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2441, <4 x half> %311, <16 x float> %2448, i32 0, i32 0, i32 0), !dbg !95
  %2450 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2442, <4 x half> %312, <16 x float> %2449, i32 0, i32 0, i32 0), !dbg !95
  %2451 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2443, <4 x half> %313, <16 x float> %2450, i32 0, i32 0, i32 0), !dbg !95
  %2452 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2444, <4 x half> %314, <16 x float> %2451, i32 0, i32 0, i32 0), !dbg !95
  %2453 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2445, <4 x half> %315, <16 x float> %2452, i32 0, i32 0, i32 0), !dbg !95
  %2454 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2446, <4 x half> %316, <16 x float> %2453, i32 0, i32 0, i32 0), !dbg !95
  %2455 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !96
  %2456 = fsub <2 x float> %2455, %2156, !dbg !96
  %2457 = insertelement <2 x float> poison, float %2240, i64 0, !dbg !97
  %2458 = insertelement <2 x float> %2457, float %2241, i64 1, !dbg !97
  %2459 = fmul <2 x float> %2458, %2456, !dbg !97
  %2460 = fptrunc <2 x float> %2459 to <2 x half>, !dbg !98
  %2461 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !96
  %2462 = fsub <2 x float> %2461, %2157, !dbg !96
  %2463 = insertelement <2 x float> poison, float %2242, i64 0, !dbg !97
  %2464 = insertelement <2 x float> %2463, float %2243, i64 1, !dbg !97
  %2465 = fmul <2 x float> %2464, %2462, !dbg !97
  %2466 = fptrunc <2 x float> %2465 to <2 x half>, !dbg !98
  %2467 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !96
  %2468 = fsub <2 x float> %2467, %2154, !dbg !96
  %2469 = insertelement <2 x float> poison, float %2244, i64 0, !dbg !97
  %2470 = insertelement <2 x float> %2469, float %2245, i64 1, !dbg !97
  %2471 = fmul <2 x float> %2470, %2468, !dbg !97
  %2472 = fptrunc <2 x float> %2471 to <2 x half>, !dbg !98
  %2473 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !96
  %2474 = fsub <2 x float> %2473, %2155, !dbg !96
  %2475 = insertelement <2 x float> poison, float %2246, i64 0, !dbg !97
  %2476 = insertelement <2 x float> %2475, float %2247, i64 1, !dbg !97
  %2477 = fmul <2 x float> %2476, %2474, !dbg !97
  %2478 = fptrunc <2 x float> %2477 to <2 x half>, !dbg !98
  %2479 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !96
  %2480 = fsub <2 x float> %2479, %2152, !dbg !96
  %2481 = insertelement <2 x float> poison, float %2248, i64 0, !dbg !97
  %2482 = insertelement <2 x float> %2481, float %2249, i64 1, !dbg !97
  %2483 = fmul <2 x float> %2482, %2480, !dbg !97
  %2484 = fptrunc <2 x float> %2483 to <2 x half>, !dbg !98
  %2485 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !96
  %2486 = fsub <2 x float> %2485, %2153, !dbg !96
  %2487 = insertelement <2 x float> poison, float %2250, i64 0, !dbg !97
  %2488 = insertelement <2 x float> %2487, float %2251, i64 1, !dbg !97
  %2489 = fmul <2 x float> %2488, %2486, !dbg !97
  %2490 = fptrunc <2 x float> %2489 to <2 x half>, !dbg !98
  %2491 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !96
  %2492 = fsub <2 x float> %2491, %2150, !dbg !96
  %2493 = insertelement <2 x float> poison, float %2252, i64 0, !dbg !97
  %2494 = insertelement <2 x float> %2493, float %2253, i64 1, !dbg !97
  %2495 = fmul <2 x float> %2494, %2492, !dbg !97
  %2496 = fptrunc <2 x float> %2495 to <2 x half>, !dbg !98
  %2497 = shufflevector <16 x float> %2454, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !96
  %2498 = fsub <2 x float> %2497, %2151, !dbg !96
  %2499 = insertelement <2 x float> poison, float %2254, i64 0, !dbg !97
  %2500 = insertelement <2 x float> %2499, float %2255, i64 1, !dbg !97
  %2501 = fmul <2 x float> %2500, %2498, !dbg !97
  %2502 = fptrunc <2 x float> %2501 to <2 x half>, !dbg !98
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %2503 = shufflevector <2 x half> %2149, <2 x half> %2148, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %2504 = shufflevector <2 x half> %2147, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %2505 = shufflevector <8 x half> %2503, <8 x half> %2504, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !99
  %2506 = shufflevector <2 x half> %2146, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %2507 = shufflevector <8 x half> %2505, <8 x half> %2506, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !99
  store <8 x half> %2507, ptr addrspace(3) %1991, align 16, !dbg !99
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %2508 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !99
  %2509 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !99
  %2510 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !99
  %2511 = shufflevector <1 x half> %2510, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2512 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !99
  %2513 = shufflevector <1 x half> %2512, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2514 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !99
  %2515 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !99
  %2516 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !99
  %2517 = shufflevector <1 x half> %2516, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2518 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !99
  %2519 = shufflevector <1 x half> %2518, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2520 = load <1 x half>, ptr addrspace(3) %2008, align 2, !dbg !99
  %2521 = load <1 x half>, ptr addrspace(3) %2009, align 2, !dbg !99
  %2522 = load <1 x half>, ptr addrspace(3) %2010, align 2, !dbg !99
  %2523 = shufflevector <1 x half> %2522, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2524 = load <1 x half>, ptr addrspace(3) %2011, align 2, !dbg !99
  %2525 = shufflevector <1 x half> %2524, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2526 = load <1 x half>, ptr addrspace(3) %2012, align 2, !dbg !99
  %2527 = load <1 x half>, ptr addrspace(3) %2013, align 2, !dbg !99
  %2528 = load <1 x half>, ptr addrspace(3) %2014, align 2, !dbg !99
  %2529 = shufflevector <1 x half> %2528, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2530 = load <1 x half>, ptr addrspace(3) %2015, align 2, !dbg !99
  %2531 = shufflevector <1 x half> %2530, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2532 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !99
  %2533 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !99
  %2534 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !99
  %2535 = shufflevector <1 x half> %2534, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2536 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !99
  %2537 = shufflevector <1 x half> %2536, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2538 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !99
  %2539 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !99
  %2540 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !99
  %2541 = shufflevector <1 x half> %2540, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2542 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !99
  %2543 = shufflevector <1 x half> %2542, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2544 = load <1 x half>, ptr addrspace(3) %2016, align 2, !dbg !99
  %2545 = load <1 x half>, ptr addrspace(3) %2017, align 2, !dbg !99
  %2546 = load <1 x half>, ptr addrspace(3) %2018, align 2, !dbg !99
  %2547 = shufflevector <1 x half> %2546, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2548 = load <1 x half>, ptr addrspace(3) %2019, align 2, !dbg !99
  %2549 = shufflevector <1 x half> %2548, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2550 = load <1 x half>, ptr addrspace(3) %2020, align 2, !dbg !99
  %2551 = load <1 x half>, ptr addrspace(3) %2021, align 2, !dbg !99
  %2552 = load <1 x half>, ptr addrspace(3) %2022, align 2, !dbg !99
  %2553 = shufflevector <1 x half> %2552, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2554 = load <1 x half>, ptr addrspace(3) %2023, align 2, !dbg !99
  %2555 = shufflevector <1 x half> %2554, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2556 = shufflevector <2 x half> %2460, <2 x half> %2466, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %2557 = shufflevector <2 x half> %2472, <2 x half> %2478, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %2558 = shufflevector <2 x half> %2484, <2 x half> %2490, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %2559 = shufflevector <2 x half> %2496, <2 x half> %2502, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %2560 = shufflevector <1 x half> %2508, <1 x half> %2509, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2561 = shufflevector <4 x half> %2560, <4 x half> %2511, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2562 = shufflevector <4 x half> %2561, <4 x half> %2513, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2563 = shufflevector <1 x half> %2514, <1 x half> %2515, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2564 = shufflevector <4 x half> %2563, <4 x half> %2517, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2565 = shufflevector <4 x half> %2564, <4 x half> %2519, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2566 = shufflevector <1 x half> %2520, <1 x half> %2521, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2567 = shufflevector <4 x half> %2566, <4 x half> %2523, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2568 = shufflevector <4 x half> %2567, <4 x half> %2525, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2569 = shufflevector <1 x half> %2526, <1 x half> %2527, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2570 = shufflevector <4 x half> %2569, <4 x half> %2529, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2571 = shufflevector <4 x half> %2570, <4 x half> %2531, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2572 = shufflevector <1 x half> %2532, <1 x half> %2533, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2573 = shufflevector <4 x half> %2572, <4 x half> %2535, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2574 = shufflevector <4 x half> %2573, <4 x half> %2537, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2575 = shufflevector <1 x half> %2538, <1 x half> %2539, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2576 = shufflevector <4 x half> %2575, <4 x half> %2541, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2577 = shufflevector <4 x half> %2576, <4 x half> %2543, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2578 = shufflevector <1 x half> %2544, <1 x half> %2545, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2579 = shufflevector <4 x half> %2578, <4 x half> %2547, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2580 = shufflevector <4 x half> %2579, <4 x half> %2549, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2581 = shufflevector <1 x half> %2550, <1 x half> %2551, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %2582 = shufflevector <4 x half> %2581, <4 x half> %2553, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %2583 = shufflevector <4 x half> %2582, <4 x half> %2555, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %2584 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn2261465, i64 0, !dbg !100
  %2585 = insertelement <16 x float> %2584, float %.pn2241466, i64 1, !dbg !100
  %2586 = insertelement <16 x float> %2585, float %.pn2221467, i64 2, !dbg !100
  %2587 = insertelement <16 x float> %2586, float %.pn2201468, i64 3, !dbg !100
  %2588 = insertelement <16 x float> %2587, float %.pn2181469, i64 4, !dbg !100
  %2589 = insertelement <16 x float> %2588, float %.pn2161470, i64 5, !dbg !100
  %2590 = insertelement <16 x float> %2589, float %.pn2141471, i64 6, !dbg !100
  %2591 = insertelement <16 x float> %2590, float %.pn2121472, i64 7, !dbg !100
  %2592 = insertelement <16 x float> %2591, float %.pn2101473, i64 8, !dbg !100
  %2593 = insertelement <16 x float> %2592, float %.pn2081474, i64 9, !dbg !100
  %2594 = insertelement <16 x float> %2593, float %.pn2061475, i64 10, !dbg !100
  %2595 = insertelement <16 x float> %2594, float %.pn2041476, i64 11, !dbg !100
  %2596 = insertelement <16 x float> %2595, float %.pn2021477, i64 12, !dbg !100
  %2597 = insertelement <16 x float> %2596, float %.pn2001478, i64 13, !dbg !100
  %2598 = insertelement <16 x float> %2597, float %.pn1981479, i64 14, !dbg !100
  %2599 = insertelement <16 x float> %2598, float %.pn1961480, i64 15, !dbg !100
  %2600 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2562, <4 x half> %2556, <16 x float> %2599, i32 0, i32 0, i32 0), !dbg !100
  %2601 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2565, <4 x half> %2557, <16 x float> %2600, i32 0, i32 0, i32 0), !dbg !100
  %2602 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2568, <4 x half> %2558, <16 x float> %2601, i32 0, i32 0, i32 0), !dbg !100
  %2603 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2571, <4 x half> %2559, <16 x float> %2602, i32 0, i32 0, i32 0), !dbg !100
  %2604 = extractelement <16 x float> %2603, i64 0, !dbg !100
  %2605 = extractelement <16 x float> %2603, i64 1, !dbg !100
  %2606 = extractelement <16 x float> %2603, i64 2, !dbg !100
  %2607 = extractelement <16 x float> %2603, i64 3, !dbg !100
  %2608 = extractelement <16 x float> %2603, i64 4, !dbg !100
  %2609 = extractelement <16 x float> %2603, i64 5, !dbg !100
  %2610 = extractelement <16 x float> %2603, i64 6, !dbg !100
  %2611 = extractelement <16 x float> %2603, i64 7, !dbg !100
  %2612 = extractelement <16 x float> %2603, i64 8, !dbg !100
  %2613 = extractelement <16 x float> %2603, i64 9, !dbg !100
  %2614 = extractelement <16 x float> %2603, i64 10, !dbg !100
  %2615 = extractelement <16 x float> %2603, i64 11, !dbg !100
  %2616 = extractelement <16 x float> %2603, i64 12, !dbg !100
  %2617 = extractelement <16 x float> %2603, i64 13, !dbg !100
  %2618 = extractelement <16 x float> %2603, i64 14, !dbg !100
  %2619 = extractelement <16 x float> %2603, i64 15, !dbg !100
  %2620 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn1941481, i64 0, !dbg !100
  %2621 = insertelement <16 x float> %2620, float %.pn1921482, i64 1, !dbg !100
  %2622 = insertelement <16 x float> %2621, float %.pn1901483, i64 2, !dbg !100
  %2623 = insertelement <16 x float> %2622, float %.pn1881484, i64 3, !dbg !100
  %2624 = insertelement <16 x float> %2623, float %.pn1861485, i64 4, !dbg !100
  %2625 = insertelement <16 x float> %2624, float %.pn1841486, i64 5, !dbg !100
  %2626 = insertelement <16 x float> %2625, float %.pn1821487, i64 6, !dbg !100
  %2627 = insertelement <16 x float> %2626, float %.pn1801488, i64 7, !dbg !100
  %2628 = insertelement <16 x float> %2627, float %.pn1781489, i64 8, !dbg !100
  %2629 = insertelement <16 x float> %2628, float %.pn1761490, i64 9, !dbg !100
  %2630 = insertelement <16 x float> %2629, float %.pn1741491, i64 10, !dbg !100
  %2631 = insertelement <16 x float> %2630, float %.pn1721492, i64 11, !dbg !100
  %2632 = insertelement <16 x float> %2631, float %.pn1701493, i64 12, !dbg !100
  %2633 = insertelement <16 x float> %2632, float %.pn1681494, i64 13, !dbg !100
  %2634 = insertelement <16 x float> %2633, float %.pn1661495, i64 14, !dbg !100
  %2635 = insertelement <16 x float> %2634, float %.pn1641496, i64 15, !dbg !100
  %2636 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2574, <4 x half> %2556, <16 x float> %2635, i32 0, i32 0, i32 0), !dbg !100
  %2637 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2577, <4 x half> %2557, <16 x float> %2636, i32 0, i32 0, i32 0), !dbg !100
  %2638 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2580, <4 x half> %2558, <16 x float> %2637, i32 0, i32 0, i32 0), !dbg !100
  %2639 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2583, <4 x half> %2559, <16 x float> %2638, i32 0, i32 0, i32 0), !dbg !100
  %2640 = extractelement <16 x float> %2639, i64 0, !dbg !100
  %2641 = extractelement <16 x float> %2639, i64 1, !dbg !100
  %2642 = extractelement <16 x float> %2639, i64 2, !dbg !100
  %2643 = extractelement <16 x float> %2639, i64 3, !dbg !100
  %2644 = extractelement <16 x float> %2639, i64 4, !dbg !100
  %2645 = extractelement <16 x float> %2639, i64 5, !dbg !100
  %2646 = extractelement <16 x float> %2639, i64 6, !dbg !100
  %2647 = extractelement <16 x float> %2639, i64 7, !dbg !100
  %2648 = extractelement <16 x float> %2639, i64 8, !dbg !100
  %2649 = extractelement <16 x float> %2639, i64 9, !dbg !100
  %2650 = extractelement <16 x float> %2639, i64 10, !dbg !100
  %2651 = extractelement <16 x float> %2639, i64 11, !dbg !100
  %2652 = extractelement <16 x float> %2639, i64 12, !dbg !100
  %2653 = extractelement <16 x float> %2639, i64 13, !dbg !100
  %2654 = extractelement <16 x float> %2639, i64 14, !dbg !100
  %2655 = extractelement <16 x float> %2639, i64 15, !dbg !100
  %2656 = add nuw nsw i32 %2093, 1, !dbg !76
  %exitcond2333.not = icmp eq i32 %2093, %2024, !dbg !76
  %2657 = shufflevector <4 x float> %unmaskedload1200, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2658 = shufflevector <4 x float> %unmaskedload1200, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2659 = shufflevector <4 x float> %unmaskedload1199, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2660 = shufflevector <4 x float> %unmaskedload1199, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2661 = shufflevector <4 x float> %unmaskedload1198, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2662 = shufflevector <4 x float> %unmaskedload1198, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2663 = shufflevector <4 x float> %unmaskedload1197, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %2664 = shufflevector <4 x float> %unmaskedload1197, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %2665 = shufflevector <8 x half> %unmaskedload1191, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2666 = shufflevector <8 x half> %unmaskedload1191, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2667 = shufflevector <8 x half> %unmaskedload1191, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %2668 = shufflevector <8 x half> %unmaskedload1191, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2669 = shufflevector <8 x half> %unmaskedload1196, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %2670 = shufflevector <8 x half> %unmaskedload1196, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %2671 = shufflevector <8 x half> %unmaskedload1196, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %2672 = shufflevector <8 x half> %unmaskedload1196, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  br i1 %exitcond2333.not, label %._crit_edge.loopexit, label %2089, !dbg !76

._crit_edge.loopexit:                             ; preds = %2089
  %2673 = shufflevector <16 x float> %2639, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %2674 = shufflevector <16 x float> %2639, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %2675 = shufflevector <16 x float> %2639, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %2676 = shufflevector <16 x float> %2639, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %2677 = shufflevector <16 x float> %2603, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %2678 = shufflevector <16 x float> %2603, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %2679 = shufflevector <16 x float> %2603, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %2680 = shufflevector <16 x float> %2603, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  br label %._crit_edge, !dbg !101

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.._crit_edge_crit_edge
  %.pre-phi2351 = phi i32 [ %.pre2350, %.._crit_edge_crit_edge ], [ %1981, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2349 = phi i32 [ %.pre2348, %.._crit_edge_crit_edge ], [ %1980, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2347 = phi i32 [ %.pre2346, %.._crit_edge_crit_edge ], [ %1979, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2345 = phi i32 [ %.pre2344, %.._crit_edge_crit_edge ], [ %1978, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2343 = phi i32 [ %.pre2342, %.._crit_edge_crit_edge ], [ %1977, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2341 = phi i32 [ %.pre2340, %.._crit_edge_crit_edge ], [ %1976, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2339 = phi i32 [ %.pre2338, %.._crit_edge_crit_edge ], [ %1975, %._crit_edge.loopexit ], !dbg !84
  %.pre-phi2337 = phi i32 [ %.pre2336, %.._crit_edge_crit_edge ], [ %1974, %._crit_edge.loopexit ], !dbg !84
  %.pn162.lcssa = phi float [ %1761, %.._crit_edge_crit_edge ], [ %2385, %._crit_edge.loopexit ]
  %.pn160.lcssa = phi float [ %1762, %.._crit_edge_crit_edge ], [ %2386, %._crit_edge.loopexit ]
  %.pn158.lcssa = phi float [ %1763, %.._crit_edge_crit_edge ], [ %2387, %._crit_edge.loopexit ]
  %.pn156.lcssa = phi float [ %1764, %.._crit_edge_crit_edge ], [ %2388, %._crit_edge.loopexit ]
  %.pn154.lcssa = phi float [ %1765, %.._crit_edge_crit_edge ], [ %2389, %._crit_edge.loopexit ]
  %.pn152.lcssa = phi float [ %1766, %.._crit_edge_crit_edge ], [ %2390, %._crit_edge.loopexit ]
  %.pn150.lcssa = phi float [ %1767, %.._crit_edge_crit_edge ], [ %2391, %._crit_edge.loopexit ]
  %.pn148.lcssa = phi float [ %1768, %.._crit_edge_crit_edge ], [ %2392, %._crit_edge.loopexit ]
  %.pn146.lcssa = phi float [ %1769, %.._crit_edge_crit_edge ], [ %2393, %._crit_edge.loopexit ]
  %.pn144.lcssa = phi float [ %1770, %.._crit_edge_crit_edge ], [ %2394, %._crit_edge.loopexit ]
  %.pn142.lcssa = phi float [ %1771, %.._crit_edge_crit_edge ], [ %2395, %._crit_edge.loopexit ]
  %.pn140.lcssa = phi float [ %1772, %.._crit_edge_crit_edge ], [ %2396, %._crit_edge.loopexit ]
  %.pn138.lcssa = phi float [ %1773, %.._crit_edge_crit_edge ], [ %2397, %._crit_edge.loopexit ]
  %.pn136.lcssa = phi float [ %1774, %.._crit_edge_crit_edge ], [ %2398, %._crit_edge.loopexit ]
  %.pn134.lcssa = phi float [ %1775, %.._crit_edge_crit_edge ], [ %2399, %._crit_edge.loopexit ]
  %.pn132.lcssa = phi float [ %1776, %.._crit_edge_crit_edge ], [ %2400, %._crit_edge.loopexit ]
  %.pn130.lcssa = phi float [ %1779, %.._crit_edge_crit_edge ], [ %2421, %._crit_edge.loopexit ]
  %.pn128.lcssa = phi float [ %1780, %.._crit_edge_crit_edge ], [ %2422, %._crit_edge.loopexit ]
  %.pn126.lcssa = phi float [ %1781, %.._crit_edge_crit_edge ], [ %2423, %._crit_edge.loopexit ]
  %.pn124.lcssa = phi float [ %1782, %.._crit_edge_crit_edge ], [ %2424, %._crit_edge.loopexit ]
  %.pn122.lcssa = phi float [ %1783, %.._crit_edge_crit_edge ], [ %2425, %._crit_edge.loopexit ]
  %.pn120.lcssa = phi float [ %1784, %.._crit_edge_crit_edge ], [ %2426, %._crit_edge.loopexit ]
  %.pn118.lcssa = phi float [ %1785, %.._crit_edge_crit_edge ], [ %2427, %._crit_edge.loopexit ]
  %.pn116.lcssa = phi float [ %1786, %.._crit_edge_crit_edge ], [ %2428, %._crit_edge.loopexit ]
  %.pn114.lcssa = phi float [ %1787, %.._crit_edge_crit_edge ], [ %2429, %._crit_edge.loopexit ]
  %.pn112.lcssa = phi float [ %1788, %.._crit_edge_crit_edge ], [ %2430, %._crit_edge.loopexit ]
  %.pn110.lcssa = phi float [ %1789, %.._crit_edge_crit_edge ], [ %2431, %._crit_edge.loopexit ]
  %.pn108.lcssa = phi float [ %1790, %.._crit_edge_crit_edge ], [ %2432, %._crit_edge.loopexit ]
  %.pn106.lcssa = phi float [ %1791, %.._crit_edge_crit_edge ], [ %2433, %._crit_edge.loopexit ]
  %.pn104.lcssa = phi float [ %1792, %.._crit_edge_crit_edge ], [ %2434, %._crit_edge.loopexit ]
  %.pn102.lcssa = phi float [ %1793, %.._crit_edge_crit_edge ], [ %2435, %._crit_edge.loopexit ]
  %.pn100.lcssa = phi float [ %1794, %.._crit_edge_crit_edge ], [ %2436, %._crit_edge.loopexit ]
  %.pn226.lcssa = phi float [ %1865, %.._crit_edge_crit_edge ], [ %2604, %._crit_edge.loopexit ]
  %.pn220.lcssa = phi float [ %1866, %.._crit_edge_crit_edge ], [ %2607, %._crit_edge.loopexit ]
  %.pn218.lcssa = phi float [ %1867, %.._crit_edge_crit_edge ], [ %2608, %._crit_edge.loopexit ]
  %.pn212.lcssa = phi float [ %1868, %.._crit_edge_crit_edge ], [ %2611, %._crit_edge.loopexit ]
  %.pn210.lcssa = phi float [ %1869, %.._crit_edge_crit_edge ], [ %2612, %._crit_edge.loopexit ]
  %.pn204.lcssa = phi float [ %1870, %.._crit_edge_crit_edge ], [ %2615, %._crit_edge.loopexit ]
  %.pn202.lcssa = phi float [ %1871, %.._crit_edge_crit_edge ], [ %2616, %._crit_edge.loopexit ]
  %.pn196.lcssa = phi float [ %1872, %.._crit_edge_crit_edge ], [ %2619, %._crit_edge.loopexit ]
  %.pn194.lcssa = phi float [ %1875, %.._crit_edge_crit_edge ], [ %2640, %._crit_edge.loopexit ]
  %.pn188.lcssa = phi float [ %1876, %.._crit_edge_crit_edge ], [ %2643, %._crit_edge.loopexit ]
  %.pn186.lcssa = phi float [ %1877, %.._crit_edge_crit_edge ], [ %2644, %._crit_edge.loopexit ]
  %.pn180.lcssa = phi float [ %1878, %.._crit_edge_crit_edge ], [ %2647, %._crit_edge.loopexit ]
  %.pn178.lcssa = phi float [ %1879, %.._crit_edge_crit_edge ], [ %2648, %._crit_edge.loopexit ]
  %.pn172.lcssa = phi float [ %1880, %.._crit_edge_crit_edge ], [ %2651, %._crit_edge.loopexit ]
  %.pn170.lcssa = phi float [ %1881, %.._crit_edge_crit_edge ], [ %2652, %._crit_edge.loopexit ]
  %.pn164.lcssa = phi float [ %1882, %.._crit_edge_crit_edge ], [ %2655, %._crit_edge.loopexit ]
  %.pn274.pn.pn.pn.lcssa = phi float [ %888, %.._crit_edge_crit_edge ], [ %.pn274.pn.pn1545, %._crit_edge.loopexit ]
  %.pn272.pn.pn.pn.lcssa = phi float [ %889, %.._crit_edge_crit_edge ], [ %.pn272.pn.pn1546, %._crit_edge.loopexit ]
  %.pn270.pn.pn.pn.lcssa = phi float [ %890, %.._crit_edge_crit_edge ], [ %.pn270.pn.pn1547, %._crit_edge.loopexit ]
  %.pn268.pn.pn.pn.lcssa = phi float [ %891, %.._crit_edge_crit_edge ], [ %.pn268.pn.pn1548, %._crit_edge.loopexit ]
  %.pn266.pn.pn.pn.lcssa = phi float [ %893, %.._crit_edge_crit_edge ], [ %.pn266.pn.pn1549, %._crit_edge.loopexit ]
  %.pn264.pn.pn.pn.lcssa = phi float [ %894, %.._crit_edge_crit_edge ], [ %.pn264.pn.pn1550, %._crit_edge.loopexit ]
  %.pn262.pn.pn.pn.lcssa = phi float [ %895, %.._crit_edge_crit_edge ], [ %.pn262.pn.pn1551, %._crit_edge.loopexit ]
  %.pn260.pn.pn.pn.lcssa = phi float [ %896, %.._crit_edge_crit_edge ], [ %.pn260.pn.pn1552, %._crit_edge.loopexit ]
  %.pn258.pn.pn.pn.lcssa = phi float [ %898, %.._crit_edge_crit_edge ], [ %.pn258.pn.pn1553, %._crit_edge.loopexit ]
  %.pn256.pn.pn.pn.lcssa = phi float [ %899, %.._crit_edge_crit_edge ], [ %.pn256.pn.pn1554, %._crit_edge.loopexit ]
  %.pn254.pn.pn.pn.lcssa = phi float [ %900, %.._crit_edge_crit_edge ], [ %.pn254.pn.pn1555, %._crit_edge.loopexit ]
  %.pn252.pn.pn.pn.lcssa = phi float [ %901, %.._crit_edge_crit_edge ], [ %.pn252.pn.pn1556, %._crit_edge.loopexit ]
  %.pn250.pn.pn.pn.lcssa = phi float [ %903, %.._crit_edge_crit_edge ], [ %.pn250.pn.pn1557, %._crit_edge.loopexit ]
  %.pn248.pn.pn.pn.lcssa = phi float [ %904, %.._crit_edge_crit_edge ], [ %.pn248.pn.pn1558, %._crit_edge.loopexit ]
  %.pn246.pn.pn.pn.lcssa = phi float [ %905, %.._crit_edge_crit_edge ], [ %.pn246.pn.pn1559, %._crit_edge.loopexit ]
  %.pn244.pn.pn.pn.lcssa = phi float [ %906, %.._crit_edge_crit_edge ], [ %.pn244.pn.pn1560, %._crit_edge.loopexit ]
  %.pn274.pn.pn.lcssa = phi float [ %927, %.._crit_edge_crit_edge ], [ %.pn274.pn1561, %._crit_edge.loopexit ]
  %.pn272.pn.pn.lcssa = phi float [ %928, %.._crit_edge_crit_edge ], [ %.pn272.pn1562, %._crit_edge.loopexit ]
  %.pn270.pn.pn.lcssa = phi float [ %929, %.._crit_edge_crit_edge ], [ %.pn270.pn1563, %._crit_edge.loopexit ]
  %.pn268.pn.pn.lcssa = phi float [ %930, %.._crit_edge_crit_edge ], [ %.pn268.pn1564, %._crit_edge.loopexit ]
  %.pn266.pn.pn.lcssa = phi float [ %932, %.._crit_edge_crit_edge ], [ %.pn266.pn1565, %._crit_edge.loopexit ]
  %.pn264.pn.pn.lcssa = phi float [ %933, %.._crit_edge_crit_edge ], [ %.pn264.pn1566, %._crit_edge.loopexit ]
  %.pn262.pn.pn.lcssa = phi float [ %934, %.._crit_edge_crit_edge ], [ %.pn262.pn1567, %._crit_edge.loopexit ]
  %.pn260.pn.pn.lcssa = phi float [ %935, %.._crit_edge_crit_edge ], [ %.pn260.pn1568, %._crit_edge.loopexit ]
  %.pn258.pn.pn.lcssa = phi float [ %937, %.._crit_edge_crit_edge ], [ %.pn258.pn1569, %._crit_edge.loopexit ]
  %.pn256.pn.pn.lcssa = phi float [ %938, %.._crit_edge_crit_edge ], [ %.pn256.pn1570, %._crit_edge.loopexit ]
  %.pn254.pn.pn.lcssa = phi float [ %939, %.._crit_edge_crit_edge ], [ %.pn254.pn1571, %._crit_edge.loopexit ]
  %.pn252.pn.pn.lcssa = phi float [ %940, %.._crit_edge_crit_edge ], [ %.pn252.pn1572, %._crit_edge.loopexit ]
  %.pn250.pn.pn.lcssa = phi float [ %942, %.._crit_edge_crit_edge ], [ %.pn250.pn1573, %._crit_edge.loopexit ]
  %.pn248.pn.pn.lcssa = phi float [ %943, %.._crit_edge_crit_edge ], [ %.pn248.pn1574, %._crit_edge.loopexit ]
  %.pn246.pn.pn.lcssa = phi float [ %944, %.._crit_edge_crit_edge ], [ %.pn246.pn1575, %._crit_edge.loopexit ]
  %.pn244.pn.pn.lcssa = phi float [ %945, %.._crit_edge_crit_edge ], [ %.pn244.pn1576, %._crit_edge.loopexit ]
  %.pn274.pn.lcssa = phi float [ %966, %.._crit_edge_crit_edge ], [ %.pn2741577, %._crit_edge.loopexit ]
  %.pn272.pn.lcssa = phi float [ %967, %.._crit_edge_crit_edge ], [ %.pn2721578, %._crit_edge.loopexit ]
  %.pn270.pn.lcssa = phi float [ %968, %.._crit_edge_crit_edge ], [ %.pn2701579, %._crit_edge.loopexit ]
  %.pn268.pn.lcssa = phi float [ %969, %.._crit_edge_crit_edge ], [ %.pn2681580, %._crit_edge.loopexit ]
  %.pn266.pn.lcssa = phi float [ %971, %.._crit_edge_crit_edge ], [ %.pn2661581, %._crit_edge.loopexit ]
  %.pn264.pn.lcssa = phi float [ %972, %.._crit_edge_crit_edge ], [ %.pn2641582, %._crit_edge.loopexit ]
  %.pn262.pn.lcssa = phi float [ %973, %.._crit_edge_crit_edge ], [ %.pn2621583, %._crit_edge.loopexit ]
  %.pn260.pn.lcssa = phi float [ %974, %.._crit_edge_crit_edge ], [ %.pn2601584, %._crit_edge.loopexit ]
  %.pn258.pn.lcssa = phi float [ %976, %.._crit_edge_crit_edge ], [ %.pn2581585, %._crit_edge.loopexit ]
  %.pn256.pn.lcssa = phi float [ %977, %.._crit_edge_crit_edge ], [ %.pn2561586, %._crit_edge.loopexit ]
  %.pn254.pn.lcssa = phi float [ %978, %.._crit_edge_crit_edge ], [ %.pn2541587, %._crit_edge.loopexit ]
  %.pn252.pn.lcssa = phi float [ %979, %.._crit_edge_crit_edge ], [ %.pn2521588, %._crit_edge.loopexit ]
  %.pn250.pn.lcssa = phi float [ %981, %.._crit_edge_crit_edge ], [ %.pn2501589, %._crit_edge.loopexit ]
  %.pn248.pn.lcssa = phi float [ %982, %.._crit_edge_crit_edge ], [ %.pn2481590, %._crit_edge.loopexit ]
  %.pn246.pn.lcssa = phi float [ %983, %.._crit_edge_crit_edge ], [ %.pn2461591, %._crit_edge.loopexit ]
  %.pn244.pn.lcssa = phi float [ %984, %.._crit_edge_crit_edge ], [ %.pn2441592, %._crit_edge.loopexit ]
  %.pn274.lcssa = phi float [ %1029, %.._crit_edge_crit_edge ], [ %2167, %._crit_edge.loopexit ]
  %.pn272.lcssa = phi float [ %1030, %.._crit_edge_crit_edge ], [ %2168, %._crit_edge.loopexit ]
  %.pn270.lcssa = phi float [ %1031, %.._crit_edge_crit_edge ], [ %2169, %._crit_edge.loopexit ]
  %.pn268.lcssa = phi float [ %1032, %.._crit_edge_crit_edge ], [ %2170, %._crit_edge.loopexit ]
  %.pn266.lcssa = phi float [ %1034, %.._crit_edge_crit_edge ], [ %2171, %._crit_edge.loopexit ]
  %.pn264.lcssa = phi float [ %1035, %.._crit_edge_crit_edge ], [ %2172, %._crit_edge.loopexit ]
  %.pn262.lcssa = phi float [ %1036, %.._crit_edge_crit_edge ], [ %2173, %._crit_edge.loopexit ]
  %.pn260.lcssa = phi float [ %1037, %.._crit_edge_crit_edge ], [ %2174, %._crit_edge.loopexit ]
  %.pn258.lcssa = phi float [ %1039, %.._crit_edge_crit_edge ], [ %2175, %._crit_edge.loopexit ]
  %.pn256.lcssa = phi float [ %1040, %.._crit_edge_crit_edge ], [ %2176, %._crit_edge.loopexit ]
  %.pn254.lcssa = phi float [ %1041, %.._crit_edge_crit_edge ], [ %2177, %._crit_edge.loopexit ]
  %.pn252.lcssa = phi float [ %1042, %.._crit_edge_crit_edge ], [ %2178, %._crit_edge.loopexit ]
  %.pn250.lcssa = phi float [ %1044, %.._crit_edge_crit_edge ], [ %2179, %._crit_edge.loopexit ]
  %.pn248.lcssa = phi float [ %1045, %.._crit_edge_crit_edge ], [ %2180, %._crit_edge.loopexit ]
  %.pn246.lcssa = phi float [ %1046, %.._crit_edge_crit_edge ], [ %2181, %._crit_edge.loopexit ]
  %.pn244.lcssa = phi float [ %1047, %.._crit_edge_crit_edge ], [ %2182, %._crit_edge.loopexit ]
  %2681 = phi <2 x float> [ %1884, %.._crit_edge_crit_edge ], [ %2680, %._crit_edge.loopexit ]
  %2682 = phi <2 x float> [ %1885, %.._crit_edge_crit_edge ], [ %2679, %._crit_edge.loopexit ]
  %2683 = phi <2 x float> [ %1886, %.._crit_edge_crit_edge ], [ %2678, %._crit_edge.loopexit ]
  %2684 = phi <2 x float> [ %1887, %.._crit_edge_crit_edge ], [ %2677, %._crit_edge.loopexit ]
  %2685 = phi <2 x float> [ %1888, %.._crit_edge_crit_edge ], [ %2676, %._crit_edge.loopexit ]
  %2686 = phi <2 x float> [ %1889, %.._crit_edge_crit_edge ], [ %2675, %._crit_edge.loopexit ]
  %2687 = phi <2 x float> [ %1890, %.._crit_edge_crit_edge ], [ %2674, %._crit_edge.loopexit ]
  %2688 = phi <2 x float> [ %1891, %.._crit_edge_crit_edge ], [ %2673, %._crit_edge.loopexit ]
  %2689 = phi <2 x float> [ %1892, %.._crit_edge_crit_edge ], [ %2657, %._crit_edge.loopexit ]
  %2690 = phi <2 x float> [ %1893, %.._crit_edge_crit_edge ], [ %2658, %._crit_edge.loopexit ]
  %2691 = phi <2 x float> [ %1894, %.._crit_edge_crit_edge ], [ %2659, %._crit_edge.loopexit ]
  %2692 = phi <2 x float> [ %1895, %.._crit_edge_crit_edge ], [ %2660, %._crit_edge.loopexit ]
  %2693 = phi <2 x float> [ %1896, %.._crit_edge_crit_edge ], [ %2661, %._crit_edge.loopexit ]
  %2694 = phi <2 x float> [ %1897, %.._crit_edge_crit_edge ], [ %2662, %._crit_edge.loopexit ]
  %2695 = phi <2 x float> [ %1898, %.._crit_edge_crit_edge ], [ %2663, %._crit_edge.loopexit ]
  %2696 = phi <2 x float> [ %1899, %.._crit_edge_crit_edge ], [ %2664, %._crit_edge.loopexit ]
  %2697 = phi <2 x half> [ %1900, %.._crit_edge_crit_edge ], [ %2665, %._crit_edge.loopexit ]
  %2698 = phi <2 x half> [ %1901, %.._crit_edge_crit_edge ], [ %2666, %._crit_edge.loopexit ]
  %2699 = phi <2 x half> [ %1902, %.._crit_edge_crit_edge ], [ %2667, %._crit_edge.loopexit ]
  %2700 = phi <2 x half> [ %1903, %.._crit_edge_crit_edge ], [ %2668, %._crit_edge.loopexit ]
  %2701 = phi <2 x half> [ %1904, %.._crit_edge_crit_edge ], [ %2669, %._crit_edge.loopexit ]
  %2702 = phi <2 x half> [ %1905, %.._crit_edge_crit_edge ], [ %2670, %._crit_edge.loopexit ]
  %2703 = phi <2 x half> [ %1906, %.._crit_edge_crit_edge ], [ %2671, %._crit_edge.loopexit ]
  %2704 = phi <2 x half> [ %1907, %.._crit_edge_crit_edge ], [ %2672, %._crit_edge.loopexit ]
  %2705 = phi <2 x float> [ %1908, %.._crit_edge_crit_edge ], [ %2094, %._crit_edge.loopexit ]
  %2706 = phi <2 x float> [ %1909, %.._crit_edge_crit_edge ], [ %2095, %._crit_edge.loopexit ]
  %2707 = phi <2 x float> [ %1910, %.._crit_edge_crit_edge ], [ %2096, %._crit_edge.loopexit ]
  %2708 = phi <2 x float> [ %1911, %.._crit_edge_crit_edge ], [ %2097, %._crit_edge.loopexit ]
  %2709 = phi <2 x float> [ %1912, %.._crit_edge_crit_edge ], [ %2098, %._crit_edge.loopexit ]
  %2710 = phi <2 x float> [ %1913, %.._crit_edge_crit_edge ], [ %2099, %._crit_edge.loopexit ]
  %2711 = phi <2 x float> [ %1914, %.._crit_edge_crit_edge ], [ %2100, %._crit_edge.loopexit ]
  %2712 = phi <2 x float> [ %1915, %.._crit_edge_crit_edge ], [ %2101, %._crit_edge.loopexit ]
  %2713 = phi <2 x half> [ %1916, %.._crit_edge_crit_edge ], [ %2102, %._crit_edge.loopexit ]
  %2714 = phi <2 x half> [ %1917, %.._crit_edge_crit_edge ], [ %2103, %._crit_edge.loopexit ]
  %2715 = phi <2 x half> [ %1918, %.._crit_edge_crit_edge ], [ %2104, %._crit_edge.loopexit ]
  %2716 = phi <2 x half> [ %1919, %.._crit_edge_crit_edge ], [ %2105, %._crit_edge.loopexit ]
  %2717 = phi <2 x half> [ %1920, %.._crit_edge_crit_edge ], [ %2106, %._crit_edge.loopexit ]
  %2718 = phi <2 x half> [ %1921, %.._crit_edge_crit_edge ], [ %2107, %._crit_edge.loopexit ]
  %2719 = phi <2 x half> [ %1922, %.._crit_edge_crit_edge ], [ %2108, %._crit_edge.loopexit ]
  %2720 = phi <2 x half> [ %1923, %.._crit_edge_crit_edge ], [ %2109, %._crit_edge.loopexit ]
  %2721 = phi <2 x float> [ %1924, %.._crit_edge_crit_edge ], [ %2110, %._crit_edge.loopexit ]
  %2722 = phi <2 x float> [ %1925, %.._crit_edge_crit_edge ], [ %2111, %._crit_edge.loopexit ]
  %2723 = phi <2 x float> [ %1926, %.._crit_edge_crit_edge ], [ %2112, %._crit_edge.loopexit ]
  %2724 = phi <2 x float> [ %1927, %.._crit_edge_crit_edge ], [ %2113, %._crit_edge.loopexit ]
  %2725 = phi <2 x float> [ %1928, %.._crit_edge_crit_edge ], [ %2114, %._crit_edge.loopexit ]
  %2726 = phi <2 x float> [ %1929, %.._crit_edge_crit_edge ], [ %2115, %._crit_edge.loopexit ]
  %2727 = phi <2 x float> [ %1930, %.._crit_edge_crit_edge ], [ %2116, %._crit_edge.loopexit ]
  %2728 = phi <2 x float> [ %1931, %.._crit_edge_crit_edge ], [ %2117, %._crit_edge.loopexit ]
  %2729 = phi <2 x half> [ %1932, %.._crit_edge_crit_edge ], [ %2118, %._crit_edge.loopexit ]
  %2730 = phi <2 x half> [ %1933, %.._crit_edge_crit_edge ], [ %2119, %._crit_edge.loopexit ]
  %2731 = phi <2 x half> [ %1934, %.._crit_edge_crit_edge ], [ %2120, %._crit_edge.loopexit ]
  %2732 = phi <2 x half> [ %1935, %.._crit_edge_crit_edge ], [ %2121, %._crit_edge.loopexit ]
  %2733 = phi <2 x half> [ %1936, %.._crit_edge_crit_edge ], [ %2122, %._crit_edge.loopexit ]
  %2734 = phi <2 x half> [ %1937, %.._crit_edge_crit_edge ], [ %2123, %._crit_edge.loopexit ]
  %2735 = phi <2 x half> [ %1938, %.._crit_edge_crit_edge ], [ %2124, %._crit_edge.loopexit ]
  %2736 = phi <2 x half> [ %1939, %.._crit_edge_crit_edge ], [ %2125, %._crit_edge.loopexit ]
  %2737 = phi <2 x float> [ %1940, %.._crit_edge_crit_edge ], [ %2126, %._crit_edge.loopexit ]
  %2738 = phi <2 x float> [ %1941, %.._crit_edge_crit_edge ], [ %2127, %._crit_edge.loopexit ]
  %2739 = phi <2 x float> [ %1942, %.._crit_edge_crit_edge ], [ %2128, %._crit_edge.loopexit ]
  %2740 = phi <2 x float> [ %1943, %.._crit_edge_crit_edge ], [ %2129, %._crit_edge.loopexit ]
  %2741 = phi <2 x float> [ %1944, %.._crit_edge_crit_edge ], [ %2130, %._crit_edge.loopexit ]
  %2742 = phi <2 x float> [ %1945, %.._crit_edge_crit_edge ], [ %2131, %._crit_edge.loopexit ]
  %2743 = phi <2 x float> [ %1946, %.._crit_edge_crit_edge ], [ %2132, %._crit_edge.loopexit ]
  %2744 = phi <2 x float> [ %1947, %.._crit_edge_crit_edge ], [ %2133, %._crit_edge.loopexit ]
  %2745 = phi <2 x half> [ %1948, %.._crit_edge_crit_edge ], [ %2134, %._crit_edge.loopexit ]
  %2746 = phi <2 x half> [ %1949, %.._crit_edge_crit_edge ], [ %2135, %._crit_edge.loopexit ]
  %2747 = phi <2 x half> [ %1950, %.._crit_edge_crit_edge ], [ %2136, %._crit_edge.loopexit ]
  %2748 = phi <2 x half> [ %1951, %.._crit_edge_crit_edge ], [ %2137, %._crit_edge.loopexit ]
  %2749 = phi <2 x half> [ %1952, %.._crit_edge_crit_edge ], [ %2138, %._crit_edge.loopexit ]
  %2750 = phi <2 x half> [ %1953, %.._crit_edge_crit_edge ], [ %2139, %._crit_edge.loopexit ]
  %2751 = phi <2 x half> [ %1954, %.._crit_edge_crit_edge ], [ %2140, %._crit_edge.loopexit ]
  %2752 = phi <2 x half> [ %1955, %.._crit_edge_crit_edge ], [ %2141, %._crit_edge.loopexit ]
  %2753 = getelementptr half, ptr addrspace(1) %124, i64 %53, !dbg !101
  %2754 = getelementptr half, ptr addrspace(1) %124, i64 %54, !dbg !101
  %2755 = getelementptr half, ptr addrspace(1) %124, i64 %55, !dbg !101
  %2756 = getelementptr half, ptr addrspace(1) %124, i64 %56, !dbg !101
  %unmaskedload323 = load <8 x half>, ptr addrspace(1) %2753, align 16, !dbg !101
  %unmaskedload324 = load <8 x half>, ptr addrspace(1) %2754, align 16, !dbg !101
  %unmaskedload325 = load <8 x half>, ptr addrspace(1) %2755, align 16, !dbg !101
  %unmaskedload326 = load <8 x half>, ptr addrspace(1) %2756, align 16, !dbg !101
  %2757 = getelementptr half, ptr addrspace(1) %148, i64 %53, !dbg !102
  %2758 = getelementptr half, ptr addrspace(1) %148, i64 %54, !dbg !102
  %2759 = getelementptr half, ptr addrspace(1) %148, i64 %55, !dbg !102
  %2760 = getelementptr half, ptr addrspace(1) %148, i64 %56, !dbg !102
  %unmaskedload327 = load <8 x half>, ptr addrspace(1) %2757, align 16, !dbg !102
  %unmaskedload328 = load <8 x half>, ptr addrspace(1) %2758, align 16, !dbg !102
  %unmaskedload329 = load <8 x half>, ptr addrspace(1) %2759, align 16, !dbg !102
  %unmaskedload330 = load <8 x half>, ptr addrspace(1) %2760, align 16, !dbg !102
  %2761 = zext nneg i32 %168 to i64, !dbg !103
  %2762 = getelementptr float, ptr addrspace(1) %82, i64 %2761, !dbg !103
  %2763 = zext nneg i32 %169 to i64, !dbg !103
  %2764 = getelementptr float, ptr addrspace(1) %82, i64 %2763, !dbg !103
  %unmaskedload331 = load <1 x float>, ptr addrspace(1) %2762, align 16, !dbg !103
  %2765 = extractelement <1 x float> %unmaskedload331, i64 0, !dbg !103
  %unmaskedload332 = load <1 x float>, ptr addrspace(1) %2764, align 16, !dbg !103
  %2766 = extractelement <1 x float> %unmaskedload332, i64 0, !dbg !103
  %2767 = zext nneg i32 %164 to i64, !dbg !103
  %2768 = getelementptr float, ptr addrspace(1) %82, i64 %2767, !dbg !103
  %unmaskedload333 = load <1 x float>, ptr addrspace(1) %2768, align 16, !dbg !103
  %2769 = extractelement <1 x float> %unmaskedload333, i64 0, !dbg !103
  %2770 = getelementptr float, ptr addrspace(1) %90, i64 %2761, !dbg !104
  %2771 = getelementptr float, ptr addrspace(1) %90, i64 %2763, !dbg !104
  %unmaskedload334 = load <1 x float>, ptr addrspace(1) %2770, align 16, !dbg !104
  %unmaskedload335 = load <1 x float>, ptr addrspace(1) %2771, align 16, !dbg !104
  %2772 = getelementptr float, ptr addrspace(1) %90, i64 %2767, !dbg !104
  %unmaskedload336 = load <1 x float>, ptr addrspace(1) %2772, align 16, !dbg !104
  %2773 = getelementptr half, ptr addrspace(1) %45, i64 %131, !dbg !105
  %2774 = getelementptr half, ptr addrspace(1) %45, i64 %129, !dbg !106
  %unmaskedload337 = load <4 x half>, ptr addrspace(1) %2774, align 16, !dbg !106
  %2775 = getelementptr half, ptr addrspace(1) %2773, i64 %131, !dbg !105
  %2776 = getelementptr half, ptr addrspace(1) %2773, i64 %129, !dbg !106
  %unmaskedload338 = load <4 x half>, ptr addrspace(1) %2776, align 16, !dbg !106
  %2777 = getelementptr half, ptr addrspace(1) %2775, i64 %131, !dbg !105
  %2778 = getelementptr half, ptr addrspace(1) %2775, i64 %129, !dbg !106
  %unmaskedload339 = load <4 x half>, ptr addrspace(1) %2778, align 16, !dbg !106
  %2779 = getelementptr half, ptr addrspace(1) %2777, i64 %129, !dbg !106
  %unmaskedload340 = load <4 x half>, ptr addrspace(1) %2779, align 16, !dbg !106
  %2780 = getelementptr half, ptr addrspace(1) %62, i64 %131, !dbg !107
  %2781 = getelementptr half, ptr addrspace(1) %62, i64 %129, !dbg !108
  %unmaskedload341 = load <4 x half>, ptr addrspace(1) %2781, align 16, !dbg !108
  %2782 = getelementptr half, ptr addrspace(1) %2780, i64 %131, !dbg !107
  %2783 = getelementptr half, ptr addrspace(1) %2780, i64 %129, !dbg !108
  %unmaskedload342 = load <4 x half>, ptr addrspace(1) %2783, align 16, !dbg !108
  %2784 = getelementptr half, ptr addrspace(1) %2782, i64 %131, !dbg !107
  %2785 = getelementptr half, ptr addrspace(1) %2782, i64 %129, !dbg !108
  %unmaskedload343 = load <4 x half>, ptr addrspace(1) %2785, align 16, !dbg !108
  %2786 = getelementptr half, ptr addrspace(1) %2784, i64 %129, !dbg !108
  %unmaskedload344 = load <4 x half>, ptr addrspace(1) %2786, align 16, !dbg !108
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %2787 = shufflevector <2 x half> %2745, <2 x half> %2746, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %2787, ptr addrspace(3) %185, align 8, !dbg !84
  %2788 = shufflevector <2 x half> %2747, <2 x half> %2748, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %2788, ptr addrspace(3) %192, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %2789 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2337, !dbg !84
  %2790 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2339, !dbg !84
  %2791 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2341, !dbg !84
  %2792 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2343, !dbg !84
  %2793 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2345, !dbg !84
  %2794 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2347, !dbg !84
  %2795 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2349, !dbg !84
  %2796 = getelementptr half, ptr addrspace(3) @global_smem, i32 %.pre-phi2351, !dbg !84
  br i1 %876, label %2797, label %2830, !dbg !89

2797:                                             ; preds = %._crit_edge
  %2798 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !84
  %2799 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !84
  %2800 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !84
  %2801 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !84
  %2802 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !84
  %2803 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !84
  %2804 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !84
  %2805 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !84
  %2806 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2805, <4 x half> %250, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !89
  %2807 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2804, <4 x half> %252, <16 x float> %2806, i32 0, i32 0, i32 0), !dbg !89
  %2808 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2803, <4 x half> %254, <16 x float> %2807, i32 0, i32 0, i32 0), !dbg !89
  %2809 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2802, <4 x half> %256, <16 x float> %2808, i32 0, i32 0, i32 0), !dbg !89
  %2810 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2801, <4 x half> %258, <16 x float> %2809, i32 0, i32 0, i32 0), !dbg !89
  %2811 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2800, <4 x half> %260, <16 x float> %2810, i32 0, i32 0, i32 0), !dbg !89
  %2812 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2799, <4 x half> %262, <16 x float> %2811, i32 0, i32 0, i32 0), !dbg !89
  %2813 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2798, <4 x half> %264, <16 x float> %2812, i32 0, i32 0, i32 0), !dbg !89
  %2814 = extractelement <16 x float> %2813, i64 0, !dbg !89
  %2815 = extractelement <16 x float> %2813, i64 1, !dbg !89
  %2816 = extractelement <16 x float> %2813, i64 2, !dbg !89
  %2817 = extractelement <16 x float> %2813, i64 3, !dbg !89
  %2818 = extractelement <16 x float> %2813, i64 4, !dbg !89
  %2819 = extractelement <16 x float> %2813, i64 5, !dbg !89
  %2820 = extractelement <16 x float> %2813, i64 6, !dbg !89
  %2821 = extractelement <16 x float> %2813, i64 7, !dbg !89
  %2822 = extractelement <16 x float> %2813, i64 8, !dbg !89
  %2823 = extractelement <16 x float> %2813, i64 9, !dbg !89
  %2824 = extractelement <16 x float> %2813, i64 10, !dbg !89
  %2825 = extractelement <16 x float> %2813, i64 11, !dbg !89
  %2826 = extractelement <16 x float> %2813, i64 12, !dbg !89
  %2827 = extractelement <16 x float> %2813, i64 13, !dbg !89
  %2828 = extractelement <16 x float> %2813, i64 14, !dbg !89
  %2829 = extractelement <16 x float> %2813, i64 15, !dbg !89
  br label %2830, !dbg !89

2830:                                             ; preds = %2797, %._crit_edge
  %2831 = phi float [ %2814, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2832 = phi float [ %2815, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2833 = phi float [ %2816, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2834 = phi float [ %2817, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2835 = phi float [ %2818, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2836 = phi float [ %2819, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2837 = phi float [ %2820, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2838 = phi float [ %2821, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2839 = phi float [ %2822, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2840 = phi float [ %2823, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2841 = phi float [ %2824, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2842 = phi float [ %2825, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2843 = phi float [ %2826, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2844 = phi float [ %2827, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2845 = phi float [ %2828, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2846 = phi float [ %2829, %2797 ], [ 0.000000e+00, %._crit_edge ], !dbg !74
  %2847 = fsub float %2831, %.pn274.pn.pn.pn.lcssa, !dbg !90
  %2848 = fsub float %2832, %.pn272.pn.pn.pn.lcssa, !dbg !90
  %2849 = fsub float %2833, %.pn270.pn.pn.pn.lcssa, !dbg !90
  %2850 = fsub float %2834, %.pn268.pn.pn.pn.lcssa, !dbg !90
  %2851 = fsub float %2835, %.pn266.pn.pn.pn.lcssa, !dbg !90
  %2852 = fsub float %2836, %.pn264.pn.pn.pn.lcssa, !dbg !90
  %2853 = fsub float %2837, %.pn262.pn.pn.pn.lcssa, !dbg !90
  %2854 = fsub float %2838, %.pn260.pn.pn.pn.lcssa, !dbg !90
  %2855 = fsub float %2839, %.pn258.pn.pn.pn.lcssa, !dbg !90
  %2856 = fsub float %2840, %.pn256.pn.pn.pn.lcssa, !dbg !90
  %2857 = fsub float %2841, %.pn254.pn.pn.pn.lcssa, !dbg !90
  %2858 = fsub float %2842, %.pn252.pn.pn.pn.lcssa, !dbg !90
  %2859 = fsub float %2843, %.pn250.pn.pn.pn.lcssa, !dbg !90
  %2860 = fsub float %2844, %.pn248.pn.pn.pn.lcssa, !dbg !90
  %2861 = fsub float %2845, %.pn246.pn.pn.pn.lcssa, !dbg !90
  %2862 = fsub float %2846, %.pn244.pn.pn.pn.lcssa, !dbg !90
  %2863 = tail call float @llvm.amdgcn.exp2.f32(float %2847), !dbg !91
  %2864 = tail call float @llvm.amdgcn.exp2.f32(float %2848), !dbg !91
  %2865 = tail call float @llvm.amdgcn.exp2.f32(float %2849), !dbg !91
  %2866 = tail call float @llvm.amdgcn.exp2.f32(float %2850), !dbg !91
  %2867 = tail call float @llvm.amdgcn.exp2.f32(float %2851), !dbg !91
  %2868 = tail call float @llvm.amdgcn.exp2.f32(float %2852), !dbg !91
  %2869 = tail call float @llvm.amdgcn.exp2.f32(float %2853), !dbg !91
  %2870 = tail call float @llvm.amdgcn.exp2.f32(float %2854), !dbg !91
  %2871 = tail call float @llvm.amdgcn.exp2.f32(float %2855), !dbg !91
  %2872 = tail call float @llvm.amdgcn.exp2.f32(float %2856), !dbg !91
  %2873 = tail call float @llvm.amdgcn.exp2.f32(float %2857), !dbg !91
  %2874 = tail call float @llvm.amdgcn.exp2.f32(float %2858), !dbg !91
  %2875 = tail call float @llvm.amdgcn.exp2.f32(float %2859), !dbg !91
  %2876 = tail call float @llvm.amdgcn.exp2.f32(float %2860), !dbg !91
  %2877 = tail call float @llvm.amdgcn.exp2.f32(float %2861), !dbg !91
  %2878 = tail call float @llvm.amdgcn.exp2.f32(float %2862), !dbg !91
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %2879 = or disjoint i32 %183, %51, !dbg !87
  %2880 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %2879, !dbg !87
  %2881 = shufflevector <2 x half> %2749, <2 x half> %2750, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2882 = shufflevector <2 x half> %2752, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2883 = shufflevector <8 x half> %2881, <8 x half> %2882, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !87
  %2884 = shufflevector <2 x half> %2751, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %2885 = shufflevector <8 x half> %2883, <8 x half> %2884, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !87
  store <8 x half> %2885, ptr addrspace(3) %2880, align 16, !dbg !87
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %2886 = or disjoint i32 %360, 1024, !dbg !87
  %2887 = or disjoint i32 %360, 1088, !dbg !87
  %2888 = or disjoint i32 %360, 1152, !dbg !87
  %2889 = or disjoint i32 %360, 1216, !dbg !87
  %2890 = or disjoint i32 %360, 1536, !dbg !87
  %2891 = or disjoint i32 %360, 1600, !dbg !87
  %2892 = or disjoint i32 %360, 1664, !dbg !87
  %2893 = or disjoint i32 %360, 1728, !dbg !87
  %2894 = or disjoint i32 %360, 1056, !dbg !87
  %2895 = or disjoint i32 %360, 1120, !dbg !87
  %2896 = or disjoint i32 %360, 1184, !dbg !87
  %2897 = or disjoint i32 %360, 1248, !dbg !87
  %2898 = or disjoint i32 %360, 1568, !dbg !87
  %2899 = or disjoint i32 %360, 1632, !dbg !87
  %2900 = or disjoint i32 %360, 1696, !dbg !87
  %2901 = or disjoint i32 %360, 1760, !dbg !87
  %2902 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2886, !dbg !87
  %2903 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2887, !dbg !87
  %2904 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2888, !dbg !87
  %2905 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2889, !dbg !87
  %2906 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2890, !dbg !87
  %2907 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2891, !dbg !87
  %2908 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2892, !dbg !87
  %2909 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2893, !dbg !87
  %2910 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2894, !dbg !87
  %2911 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2895, !dbg !87
  %2912 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2896, !dbg !87
  %2913 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2897, !dbg !87
  %2914 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2898, !dbg !87
  %2915 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2899, !dbg !87
  %2916 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2900, !dbg !87
  %2917 = getelementptr half, ptr addrspace(3) @global_smem, i32 %2901, !dbg !87
  br i1 %876, label %2918, label %3095, !dbg !93

2918:                                             ; preds = %2830
  %2919 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !87
  %2920 = shufflevector <1 x half> %2919, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2921 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !87
  %2922 = shufflevector <1 x half> %2921, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2923 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !87
  %2924 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !87
  %2925 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !87
  %2926 = shufflevector <1 x half> %2925, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2927 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !87
  %2928 = shufflevector <1 x half> %2927, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2929 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !87
  %2930 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !87
  %2931 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !87
  %2932 = shufflevector <1 x half> %2931, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2933 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !87
  %2934 = shufflevector <1 x half> %2933, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2935 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !87
  %2936 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !87
  %2937 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !87
  %2938 = shufflevector <1 x half> %2937, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2939 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !87
  %2940 = shufflevector <1 x half> %2939, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2941 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !87
  %2942 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !87
  %2943 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !87
  %2944 = shufflevector <1 x half> %2943, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2945 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !87
  %2946 = shufflevector <1 x half> %2945, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2947 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !87
  %2948 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !87
  %2949 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !87
  %2950 = shufflevector <1 x half> %2949, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2951 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !87
  %2952 = shufflevector <1 x half> %2951, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2953 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !87
  %2954 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !87
  %2955 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !87
  %2956 = shufflevector <1 x half> %2955, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2957 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !87
  %2958 = shufflevector <1 x half> %2957, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2959 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !87
  %2960 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !87
  %2961 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !87
  %2962 = shufflevector <1 x half> %2961, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2963 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !87
  %2964 = shufflevector <1 x half> %2963, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2965 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !87
  %2966 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !87
  %2967 = fptrunc float %2878 to half, !dbg !92
  %2968 = fptrunc float %2877 to half, !dbg !92
  %2969 = fptrunc float %2876 to half, !dbg !92
  %2970 = fptrunc float %2875 to half, !dbg !92
  %2971 = fptrunc float %2874 to half, !dbg !92
  %2972 = fptrunc float %2873 to half, !dbg !92
  %2973 = fptrunc float %2872 to half, !dbg !92
  %2974 = fptrunc float %2871 to half, !dbg !92
  %2975 = fptrunc float %2870 to half, !dbg !92
  %2976 = fptrunc float %2869 to half, !dbg !92
  %2977 = fptrunc float %2868 to half, !dbg !92
  %2978 = fptrunc float %2867 to half, !dbg !92
  %2979 = fptrunc float %2866 to half, !dbg !92
  %2980 = fptrunc float %2865 to half, !dbg !92
  %2981 = fptrunc float %2864 to half, !dbg !92
  %2982 = fptrunc float %2863 to half, !dbg !92
  %2983 = insertelement <4 x half> poison, half %2982, i64 0, !dbg !93
  %2984 = insertelement <4 x half> %2983, half %2981, i64 1, !dbg !93
  %2985 = insertelement <4 x half> %2984, half %2980, i64 2, !dbg !93
  %2986 = insertelement <4 x half> %2985, half %2979, i64 3, !dbg !93
  %2987 = insertelement <4 x half> poison, half %2978, i64 0, !dbg !93
  %2988 = insertelement <4 x half> %2987, half %2977, i64 1, !dbg !93
  %2989 = insertelement <4 x half> %2988, half %2976, i64 2, !dbg !93
  %2990 = insertelement <4 x half> %2989, half %2975, i64 3, !dbg !93
  %2991 = insertelement <4 x half> poison, half %2974, i64 0, !dbg !93
  %2992 = insertelement <4 x half> %2991, half %2973, i64 1, !dbg !93
  %2993 = insertelement <4 x half> %2992, half %2972, i64 2, !dbg !93
  %2994 = insertelement <4 x half> %2993, half %2971, i64 3, !dbg !93
  %2995 = insertelement <4 x half> poison, half %2970, i64 0, !dbg !93
  %2996 = insertelement <4 x half> %2995, half %2969, i64 1, !dbg !93
  %2997 = insertelement <4 x half> %2996, half %2968, i64 2, !dbg !93
  %2998 = insertelement <4 x half> %2997, half %2967, i64 3, !dbg !93
  %2999 = shufflevector <1 x half> %2966, <1 x half> %2965, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3000 = shufflevector <4 x half> %2999, <4 x half> %2964, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3001 = shufflevector <4 x half> %3000, <4 x half> %2962, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3002 = shufflevector <1 x half> %2960, <1 x half> %2959, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3003 = shufflevector <4 x half> %3002, <4 x half> %2958, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3004 = shufflevector <4 x half> %3003, <4 x half> %2956, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3005 = shufflevector <1 x half> %2954, <1 x half> %2953, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3006 = shufflevector <4 x half> %3005, <4 x half> %2952, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3007 = shufflevector <4 x half> %3006, <4 x half> %2950, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3008 = shufflevector <1 x half> %2948, <1 x half> %2947, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3009 = shufflevector <4 x half> %3008, <4 x half> %2946, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3010 = shufflevector <4 x half> %3009, <4 x half> %2944, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3011 = shufflevector <1 x half> %2942, <1 x half> %2941, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3012 = shufflevector <4 x half> %3011, <4 x half> %2940, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3013 = shufflevector <4 x half> %3012, <4 x half> %2938, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3014 = shufflevector <1 x half> %2936, <1 x half> %2935, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3015 = shufflevector <4 x half> %3014, <4 x half> %2934, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3016 = shufflevector <4 x half> %3015, <4 x half> %2932, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3017 = shufflevector <1 x half> %2930, <1 x half> %2929, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3018 = shufflevector <4 x half> %3017, <4 x half> %2928, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3019 = shufflevector <4 x half> %3018, <4 x half> %2926, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3020 = shufflevector <1 x half> %2924, <1 x half> %2923, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3021 = shufflevector <4 x half> %3020, <4 x half> %2922, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3022 = shufflevector <4 x half> %3021, <4 x half> %2920, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3023 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn162.lcssa, i64 0, !dbg !93
  %3024 = insertelement <16 x float> %3023, float %.pn160.lcssa, i64 1, !dbg !93
  %3025 = insertelement <16 x float> %3024, float %.pn158.lcssa, i64 2, !dbg !93
  %3026 = insertelement <16 x float> %3025, float %.pn156.lcssa, i64 3, !dbg !93
  %3027 = insertelement <16 x float> %3026, float %.pn154.lcssa, i64 4, !dbg !93
  %3028 = insertelement <16 x float> %3027, float %.pn152.lcssa, i64 5, !dbg !93
  %3029 = insertelement <16 x float> %3028, float %.pn150.lcssa, i64 6, !dbg !93
  %3030 = insertelement <16 x float> %3029, float %.pn148.lcssa, i64 7, !dbg !93
  %3031 = insertelement <16 x float> %3030, float %.pn146.lcssa, i64 8, !dbg !93
  %3032 = insertelement <16 x float> %3031, float %.pn144.lcssa, i64 9, !dbg !93
  %3033 = insertelement <16 x float> %3032, float %.pn142.lcssa, i64 10, !dbg !93
  %3034 = insertelement <16 x float> %3033, float %.pn140.lcssa, i64 11, !dbg !93
  %3035 = insertelement <16 x float> %3034, float %.pn138.lcssa, i64 12, !dbg !93
  %3036 = insertelement <16 x float> %3035, float %.pn136.lcssa, i64 13, !dbg !93
  %3037 = insertelement <16 x float> %3036, float %.pn134.lcssa, i64 14, !dbg !93
  %3038 = insertelement <16 x float> %3037, float %.pn132.lcssa, i64 15, !dbg !93
  %3039 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3001, <4 x half> %2986, <16 x float> %3038, i32 0, i32 0, i32 0), !dbg !93
  %3040 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3004, <4 x half> %2990, <16 x float> %3039, i32 0, i32 0, i32 0), !dbg !93
  %3041 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3007, <4 x half> %2994, <16 x float> %3040, i32 0, i32 0, i32 0), !dbg !93
  %3042 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3010, <4 x half> %2998, <16 x float> %3041, i32 0, i32 0, i32 0), !dbg !93
  %3043 = extractelement <16 x float> %3042, i64 0, !dbg !93
  %3044 = extractelement <16 x float> %3042, i64 1, !dbg !93
  %3045 = extractelement <16 x float> %3042, i64 2, !dbg !93
  %3046 = extractelement <16 x float> %3042, i64 3, !dbg !93
  %3047 = extractelement <16 x float> %3042, i64 4, !dbg !93
  %3048 = extractelement <16 x float> %3042, i64 5, !dbg !93
  %3049 = extractelement <16 x float> %3042, i64 6, !dbg !93
  %3050 = extractelement <16 x float> %3042, i64 7, !dbg !93
  %3051 = extractelement <16 x float> %3042, i64 8, !dbg !93
  %3052 = extractelement <16 x float> %3042, i64 9, !dbg !93
  %3053 = extractelement <16 x float> %3042, i64 10, !dbg !93
  %3054 = extractelement <16 x float> %3042, i64 11, !dbg !93
  %3055 = extractelement <16 x float> %3042, i64 12, !dbg !93
  %3056 = extractelement <16 x float> %3042, i64 13, !dbg !93
  %3057 = extractelement <16 x float> %3042, i64 14, !dbg !93
  %3058 = extractelement <16 x float> %3042, i64 15, !dbg !93
  %3059 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn130.lcssa, i64 0, !dbg !93
  %3060 = insertelement <16 x float> %3059, float %.pn128.lcssa, i64 1, !dbg !93
  %3061 = insertelement <16 x float> %3060, float %.pn126.lcssa, i64 2, !dbg !93
  %3062 = insertelement <16 x float> %3061, float %.pn124.lcssa, i64 3, !dbg !93
  %3063 = insertelement <16 x float> %3062, float %.pn122.lcssa, i64 4, !dbg !93
  %3064 = insertelement <16 x float> %3063, float %.pn120.lcssa, i64 5, !dbg !93
  %3065 = insertelement <16 x float> %3064, float %.pn118.lcssa, i64 6, !dbg !93
  %3066 = insertelement <16 x float> %3065, float %.pn116.lcssa, i64 7, !dbg !93
  %3067 = insertelement <16 x float> %3066, float %.pn114.lcssa, i64 8, !dbg !93
  %3068 = insertelement <16 x float> %3067, float %.pn112.lcssa, i64 9, !dbg !93
  %3069 = insertelement <16 x float> %3068, float %.pn110.lcssa, i64 10, !dbg !93
  %3070 = insertelement <16 x float> %3069, float %.pn108.lcssa, i64 11, !dbg !93
  %3071 = insertelement <16 x float> %3070, float %.pn106.lcssa, i64 12, !dbg !93
  %3072 = insertelement <16 x float> %3071, float %.pn104.lcssa, i64 13, !dbg !93
  %3073 = insertelement <16 x float> %3072, float %.pn102.lcssa, i64 14, !dbg !93
  %3074 = insertelement <16 x float> %3073, float %.pn100.lcssa, i64 15, !dbg !93
  %3075 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3013, <4 x half> %2986, <16 x float> %3074, i32 0, i32 0, i32 0), !dbg !93
  %3076 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3016, <4 x half> %2990, <16 x float> %3075, i32 0, i32 0, i32 0), !dbg !93
  %3077 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3019, <4 x half> %2994, <16 x float> %3076, i32 0, i32 0, i32 0), !dbg !93
  %3078 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3022, <4 x half> %2998, <16 x float> %3077, i32 0, i32 0, i32 0), !dbg !93
  %3079 = extractelement <16 x float> %3078, i64 0, !dbg !93
  %3080 = extractelement <16 x float> %3078, i64 1, !dbg !93
  %3081 = extractelement <16 x float> %3078, i64 2, !dbg !93
  %3082 = extractelement <16 x float> %3078, i64 3, !dbg !93
  %3083 = extractelement <16 x float> %3078, i64 4, !dbg !93
  %3084 = extractelement <16 x float> %3078, i64 5, !dbg !93
  %3085 = extractelement <16 x float> %3078, i64 6, !dbg !93
  %3086 = extractelement <16 x float> %3078, i64 7, !dbg !93
  %3087 = extractelement <16 x float> %3078, i64 8, !dbg !93
  %3088 = extractelement <16 x float> %3078, i64 9, !dbg !93
  %3089 = extractelement <16 x float> %3078, i64 10, !dbg !93
  %3090 = extractelement <16 x float> %3078, i64 11, !dbg !93
  %3091 = extractelement <16 x float> %3078, i64 12, !dbg !93
  %3092 = extractelement <16 x float> %3078, i64 13, !dbg !93
  %3093 = extractelement <16 x float> %3078, i64 14, !dbg !93
  %3094 = extractelement <16 x float> %3078, i64 15, !dbg !93
  br label %3095, !dbg !93

3095:                                             ; preds = %2918, %2830
  %.pn1263 = phi float [ %3043, %2918 ], [ %.pn162.lcssa, %2830 ]
  %.pn1261 = phi float [ %3044, %2918 ], [ %.pn160.lcssa, %2830 ]
  %.pn1259 = phi float [ %3045, %2918 ], [ %.pn158.lcssa, %2830 ]
  %.pn1257 = phi float [ %3046, %2918 ], [ %.pn156.lcssa, %2830 ]
  %.pn1255 = phi float [ %3047, %2918 ], [ %.pn154.lcssa, %2830 ]
  %.pn1253 = phi float [ %3048, %2918 ], [ %.pn152.lcssa, %2830 ]
  %.pn1251 = phi float [ %3049, %2918 ], [ %.pn150.lcssa, %2830 ]
  %.pn1249 = phi float [ %3050, %2918 ], [ %.pn148.lcssa, %2830 ]
  %.pn1247 = phi float [ %3051, %2918 ], [ %.pn146.lcssa, %2830 ]
  %.pn1245 = phi float [ %3052, %2918 ], [ %.pn144.lcssa, %2830 ]
  %.pn1243 = phi float [ %3053, %2918 ], [ %.pn142.lcssa, %2830 ]
  %.pn1241 = phi float [ %3054, %2918 ], [ %.pn140.lcssa, %2830 ]
  %.pn1239 = phi float [ %3055, %2918 ], [ %.pn138.lcssa, %2830 ]
  %.pn1237 = phi float [ %3056, %2918 ], [ %.pn136.lcssa, %2830 ]
  %.pn1235 = phi float [ %3057, %2918 ], [ %.pn134.lcssa, %2830 ]
  %.pn1233 = phi float [ %3058, %2918 ], [ %.pn132.lcssa, %2830 ]
  %.pn1231 = phi float [ %3079, %2918 ], [ %.pn130.lcssa, %2830 ]
  %.pn1229 = phi float [ %3080, %2918 ], [ %.pn128.lcssa, %2830 ]
  %.pn1227 = phi float [ %3081, %2918 ], [ %.pn126.lcssa, %2830 ]
  %.pn1225 = phi float [ %3082, %2918 ], [ %.pn124.lcssa, %2830 ]
  %.pn1223 = phi float [ %3083, %2918 ], [ %.pn122.lcssa, %2830 ]
  %.pn1221 = phi float [ %3084, %2918 ], [ %.pn120.lcssa, %2830 ]
  %.pn1219 = phi float [ %3085, %2918 ], [ %.pn118.lcssa, %2830 ]
  %.pn1217 = phi float [ %3086, %2918 ], [ %.pn116.lcssa, %2830 ]
  %.pn1215 = phi float [ %3087, %2918 ], [ %.pn114.lcssa, %2830 ]
  %.pn1213 = phi float [ %3088, %2918 ], [ %.pn112.lcssa, %2830 ]
  %.pn1211 = phi float [ %3089, %2918 ], [ %.pn110.lcssa, %2830 ]
  %.pn1209 = phi float [ %3090, %2918 ], [ %.pn108.lcssa, %2830 ]
  %.pn1207 = phi float [ %3091, %2918 ], [ %.pn106.lcssa, %2830 ]
  %.pn1205 = phi float [ %3092, %2918 ], [ %.pn104.lcssa, %2830 ]
  %.pn1204 = phi float [ %3093, %2918 ], [ %.pn102.lcssa, %2830 ]
  %.pn1202 = phi float [ %3094, %2918 ], [ %.pn100.lcssa, %2830 ]
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %3096 = shufflevector <2 x half> %2749, <2 x half> %2750, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %3096, ptr addrspace(3) %185, align 8, !dbg !94
  %3097 = shufflevector <2 x half> %2752, <2 x half> %2751, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %3097, ptr addrspace(3) %192, align 8, !dbg !94
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  br i1 %876, label %3098, label %3123, !dbg !95

3098:                                             ; preds = %3095
  %3099 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !94
  %3100 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !94
  %3101 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !94
  %3102 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !94
  %3103 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !94
  %3104 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !94
  %3105 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !94
  %3106 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !94
  %3107 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3106, <4 x half> %309, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !95
  %3108 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3105, <4 x half> %310, <16 x float> %3107, i32 0, i32 0, i32 0), !dbg !95
  %3109 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3104, <4 x half> %311, <16 x float> %3108, i32 0, i32 0, i32 0), !dbg !95
  %3110 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3103, <4 x half> %312, <16 x float> %3109, i32 0, i32 0, i32 0), !dbg !95
  %3111 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3102, <4 x half> %313, <16 x float> %3110, i32 0, i32 0, i32 0), !dbg !95
  %3112 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3101, <4 x half> %314, <16 x float> %3111, i32 0, i32 0, i32 0), !dbg !95
  %3113 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3100, <4 x half> %315, <16 x float> %3112, i32 0, i32 0, i32 0), !dbg !95
  %3114 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3099, <4 x half> %316, <16 x float> %3113, i32 0, i32 0, i32 0), !dbg !95
  %3115 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !74
  %3116 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !74
  %3117 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !74
  %3118 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !74
  %3119 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !74
  %3120 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !74
  %3121 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !74
  %3122 = shufflevector <16 x float> %3114, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !74
  br label %3123, !dbg !95

3123:                                             ; preds = %3098, %3095
  %3124 = phi <2 x float> [ %3115, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3125 = phi <2 x float> [ %3116, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3126 = phi <2 x float> [ %3117, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3127 = phi <2 x float> [ %3118, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3128 = phi <2 x float> [ %3119, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3129 = phi <2 x float> [ %3120, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3130 = phi <2 x float> [ %3121, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  %3131 = phi <2 x float> [ %3122, %3098 ], [ zeroinitializer, %3095 ], !dbg !74
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %3132 = shufflevector <2 x half> %2745, <2 x half> %2746, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3133 = shufflevector <2 x half> %2747, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3134 = shufflevector <8 x half> %3132, <8 x half> %3133, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !99
  %3135 = shufflevector <2 x half> %2748, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3136 = shufflevector <8 x half> %3134, <8 x half> %3135, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !99
  store <8 x half> %3136, ptr addrspace(3) %2880, align 16, !dbg !99
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  br i1 %876, label %3137, label %3318, !dbg !100

3137:                                             ; preds = %3123
  %3138 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !99
  %3139 = shufflevector <1 x half> %3138, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3140 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !99
  %3141 = shufflevector <1 x half> %3140, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3142 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !99
  %3143 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !99
  %3144 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !99
  %3145 = shufflevector <1 x half> %3144, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3146 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !99
  %3147 = shufflevector <1 x half> %3146, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3148 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !99
  %3149 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !99
  %3150 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !99
  %3151 = shufflevector <1 x half> %3150, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3152 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !99
  %3153 = shufflevector <1 x half> %3152, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3154 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !99
  %3155 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !99
  %3156 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !99
  %3157 = shufflevector <1 x half> %3156, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3158 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !99
  %3159 = shufflevector <1 x half> %3158, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3160 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !99
  %3161 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !99
  %3162 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !99
  %3163 = shufflevector <1 x half> %3162, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3164 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !99
  %3165 = shufflevector <1 x half> %3164, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3166 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !99
  %3167 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !99
  %3168 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !99
  %3169 = shufflevector <1 x half> %3168, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3170 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !99
  %3171 = shufflevector <1 x half> %3170, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3172 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !99
  %3173 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !99
  %3174 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !99
  %3175 = shufflevector <1 x half> %3174, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3176 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !99
  %3177 = shufflevector <1 x half> %3176, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3178 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !99
  %3179 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !99
  %3180 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !99
  %3181 = shufflevector <1 x half> %3180, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3182 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !99
  %3183 = shufflevector <1 x half> %3182, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3184 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !99
  %3185 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !99
  %3186 = fsub <2 x float> %3125, %2738, !dbg !96
  %3187 = insertelement <2 x float> poison, float %2877, i64 0, !dbg !97
  %3188 = insertelement <2 x float> %3187, float %2878, i64 1, !dbg !97
  %3189 = fmul <2 x float> %3188, %3186, !dbg !97
  %3190 = fptrunc <2 x float> %3189 to <2 x half>, !dbg !98
  %3191 = fsub <2 x float> %3124, %2737, !dbg !96
  %3192 = insertelement <2 x float> poison, float %2875, i64 0, !dbg !97
  %3193 = insertelement <2 x float> %3192, float %2876, i64 1, !dbg !97
  %3194 = fmul <2 x float> %3193, %3191, !dbg !97
  %3195 = fptrunc <2 x float> %3194 to <2 x half>, !dbg !98
  %3196 = fsub <2 x float> %3127, %2740, !dbg !96
  %3197 = insertelement <2 x float> poison, float %2873, i64 0, !dbg !97
  %3198 = insertelement <2 x float> %3197, float %2874, i64 1, !dbg !97
  %3199 = fmul <2 x float> %3198, %3196, !dbg !97
  %3200 = fptrunc <2 x float> %3199 to <2 x half>, !dbg !98
  %3201 = fsub <2 x float> %3126, %2739, !dbg !96
  %3202 = insertelement <2 x float> poison, float %2871, i64 0, !dbg !97
  %3203 = insertelement <2 x float> %3202, float %2872, i64 1, !dbg !97
  %3204 = fmul <2 x float> %3203, %3201, !dbg !97
  %3205 = fptrunc <2 x float> %3204 to <2 x half>, !dbg !98
  %3206 = fsub <2 x float> %3129, %2742, !dbg !96
  %3207 = insertelement <2 x float> poison, float %2869, i64 0, !dbg !97
  %3208 = insertelement <2 x float> %3207, float %2870, i64 1, !dbg !97
  %3209 = fmul <2 x float> %3208, %3206, !dbg !97
  %3210 = fptrunc <2 x float> %3209 to <2 x half>, !dbg !98
  %3211 = fsub <2 x float> %3128, %2741, !dbg !96
  %3212 = insertelement <2 x float> poison, float %2867, i64 0, !dbg !97
  %3213 = insertelement <2 x float> %3212, float %2868, i64 1, !dbg !97
  %3214 = fmul <2 x float> %3213, %3211, !dbg !97
  %3215 = fptrunc <2 x float> %3214 to <2 x half>, !dbg !98
  %3216 = fsub <2 x float> %3131, %2744, !dbg !96
  %3217 = insertelement <2 x float> poison, float %2865, i64 0, !dbg !97
  %3218 = insertelement <2 x float> %3217, float %2866, i64 1, !dbg !97
  %3219 = fmul <2 x float> %3218, %3216, !dbg !97
  %3220 = fptrunc <2 x float> %3219 to <2 x half>, !dbg !98
  %3221 = fsub <2 x float> %3130, %2743, !dbg !96
  %3222 = insertelement <2 x float> poison, float %2863, i64 0, !dbg !97
  %3223 = insertelement <2 x float> %3222, float %2864, i64 1, !dbg !97
  %3224 = fmul <2 x float> %3223, %3221, !dbg !97
  %3225 = fptrunc <2 x float> %3224 to <2 x half>, !dbg !98
  %3226 = shufflevector <2 x half> %3225, <2 x half> %3220, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3227 = shufflevector <2 x half> %3215, <2 x half> %3210, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3228 = shufflevector <2 x half> %3205, <2 x half> %3200, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3229 = shufflevector <2 x half> %3195, <2 x half> %3190, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3230 = shufflevector <1 x half> %3185, <1 x half> %3184, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3231 = shufflevector <4 x half> %3230, <4 x half> %3183, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3232 = shufflevector <4 x half> %3231, <4 x half> %3181, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3233 = shufflevector <1 x half> %3179, <1 x half> %3178, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3234 = shufflevector <4 x half> %3233, <4 x half> %3177, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3235 = shufflevector <4 x half> %3234, <4 x half> %3175, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3236 = shufflevector <1 x half> %3173, <1 x half> %3172, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3237 = shufflevector <4 x half> %3236, <4 x half> %3171, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3238 = shufflevector <4 x half> %3237, <4 x half> %3169, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3239 = shufflevector <1 x half> %3167, <1 x half> %3166, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3240 = shufflevector <4 x half> %3239, <4 x half> %3165, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3241 = shufflevector <4 x half> %3240, <4 x half> %3163, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3242 = shufflevector <1 x half> %3161, <1 x half> %3160, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3243 = shufflevector <4 x half> %3242, <4 x half> %3159, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3244 = shufflevector <4 x half> %3243, <4 x half> %3157, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3245 = shufflevector <1 x half> %3155, <1 x half> %3154, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3246 = shufflevector <4 x half> %3245, <4 x half> %3153, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3247 = shufflevector <4 x half> %3246, <4 x half> %3151, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3248 = shufflevector <1 x half> %3149, <1 x half> %3148, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3249 = shufflevector <4 x half> %3248, <4 x half> %3147, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3250 = shufflevector <4 x half> %3249, <4 x half> %3145, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3251 = shufflevector <1 x half> %3143, <1 x half> %3142, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3252 = shufflevector <4 x half> %3251, <4 x half> %3141, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3253 = shufflevector <4 x half> %3252, <4 x half> %3139, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3254 = insertelement <16 x float> poison, float %.pn226.lcssa, i64 0, !dbg !100
  %3255 = shufflevector <2 x float> %2681, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3256 = shufflevector <16 x float> %3254, <16 x float> %3255, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3257 = insertelement <16 x float> %3256, float %.pn220.lcssa, i64 3, !dbg !100
  %3258 = insertelement <16 x float> %3257, float %.pn218.lcssa, i64 4, !dbg !100
  %3259 = shufflevector <2 x float> %2682, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3260 = shufflevector <16 x float> %3258, <16 x float> %3259, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3261 = insertelement <16 x float> %3260, float %.pn212.lcssa, i64 7, !dbg !100
  %3262 = insertelement <16 x float> %3261, float %.pn210.lcssa, i64 8, !dbg !100
  %3263 = shufflevector <2 x float> %2683, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3264 = shufflevector <16 x float> %3262, <16 x float> %3263, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3265 = insertelement <16 x float> %3264, float %.pn204.lcssa, i64 11, !dbg !100
  %3266 = insertelement <16 x float> %3265, float %.pn202.lcssa, i64 12, !dbg !100
  %3267 = shufflevector <2 x float> %2684, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3268 = shufflevector <16 x float> %3266, <16 x float> %3267, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %3269 = insertelement <16 x float> %3268, float %.pn196.lcssa, i64 15, !dbg !100
  %3270 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3232, <4 x half> %3226, <16 x float> %3269, i32 0, i32 0, i32 0), !dbg !100
  %3271 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3235, <4 x half> %3227, <16 x float> %3270, i32 0, i32 0, i32 0), !dbg !100
  %3272 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3238, <4 x half> %3228, <16 x float> %3271, i32 0, i32 0, i32 0), !dbg !100
  %3273 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3241, <4 x half> %3229, <16 x float> %3272, i32 0, i32 0, i32 0), !dbg !100
  %3274 = extractelement <16 x float> %3273, i64 0, !dbg !100
  %3275 = extractelement <16 x float> %3273, i64 3, !dbg !100
  %3276 = extractelement <16 x float> %3273, i64 4, !dbg !100
  %3277 = extractelement <16 x float> %3273, i64 7, !dbg !100
  %3278 = extractelement <16 x float> %3273, i64 8, !dbg !100
  %3279 = extractelement <16 x float> %3273, i64 11, !dbg !100
  %3280 = extractelement <16 x float> %3273, i64 12, !dbg !100
  %3281 = extractelement <16 x float> %3273, i64 15, !dbg !100
  %3282 = insertelement <16 x float> poison, float %.pn194.lcssa, i64 0, !dbg !100
  %3283 = shufflevector <2 x float> %2685, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3284 = shufflevector <16 x float> %3282, <16 x float> %3283, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3285 = insertelement <16 x float> %3284, float %.pn188.lcssa, i64 3, !dbg !100
  %3286 = insertelement <16 x float> %3285, float %.pn186.lcssa, i64 4, !dbg !100
  %3287 = shufflevector <2 x float> %2686, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3288 = shufflevector <16 x float> %3286, <16 x float> %3287, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3289 = insertelement <16 x float> %3288, float %.pn180.lcssa, i64 7, !dbg !100
  %3290 = insertelement <16 x float> %3289, float %.pn178.lcssa, i64 8, !dbg !100
  %3291 = shufflevector <2 x float> %2687, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3292 = shufflevector <16 x float> %3290, <16 x float> %3291, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3293 = insertelement <16 x float> %3292, float %.pn172.lcssa, i64 11, !dbg !100
  %3294 = insertelement <16 x float> %3293, float %.pn170.lcssa, i64 12, !dbg !100
  %3295 = shufflevector <2 x float> %2688, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3296 = shufflevector <16 x float> %3294, <16 x float> %3295, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %3297 = insertelement <16 x float> %3296, float %.pn164.lcssa, i64 15, !dbg !100
  %3298 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3244, <4 x half> %3226, <16 x float> %3297, i32 0, i32 0, i32 0), !dbg !100
  %3299 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3247, <4 x half> %3227, <16 x float> %3298, i32 0, i32 0, i32 0), !dbg !100
  %3300 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3250, <4 x half> %3228, <16 x float> %3299, i32 0, i32 0, i32 0), !dbg !100
  %3301 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3253, <4 x half> %3229, <16 x float> %3300, i32 0, i32 0, i32 0), !dbg !100
  %3302 = extractelement <16 x float> %3301, i64 0, !dbg !100
  %3303 = extractelement <16 x float> %3301, i64 3, !dbg !100
  %3304 = extractelement <16 x float> %3301, i64 4, !dbg !100
  %3305 = extractelement <16 x float> %3301, i64 7, !dbg !100
  %3306 = extractelement <16 x float> %3301, i64 8, !dbg !100
  %3307 = extractelement <16 x float> %3301, i64 11, !dbg !100
  %3308 = extractelement <16 x float> %3301, i64 12, !dbg !100
  %3309 = extractelement <16 x float> %3301, i64 15, !dbg !100
  %3310 = shufflevector <16 x float> %3273, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %3311 = shufflevector <16 x float> %3273, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %3312 = shufflevector <16 x float> %3273, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %3313 = shufflevector <16 x float> %3273, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %3314 = shufflevector <16 x float> %3301, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %3315 = shufflevector <16 x float> %3301, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %3316 = shufflevector <16 x float> %3301, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %3317 = shufflevector <16 x float> %3301, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %3318, !dbg !100

3318:                                             ; preds = %3137, %3123
  %3319 = phi float [ %3274, %3137 ], [ %.pn226.lcssa, %3123 ], !dbg !74
  %3320 = phi float [ %.pn1263, %3137 ], [ %.pn162.lcssa, %3123 ], !dbg !74
  %3321 = phi float [ %.pn1261, %3137 ], [ %.pn160.lcssa, %3123 ], !dbg !74
  %3322 = phi float [ %.pn1259, %3137 ], [ %.pn158.lcssa, %3123 ], !dbg !74
  %3323 = phi float [ %.pn1257, %3137 ], [ %.pn156.lcssa, %3123 ], !dbg !74
  %3324 = phi float [ %.pn1255, %3137 ], [ %.pn154.lcssa, %3123 ], !dbg !74
  %3325 = phi float [ %.pn1253, %3137 ], [ %.pn152.lcssa, %3123 ], !dbg !74
  %3326 = phi float [ %.pn1251, %3137 ], [ %.pn150.lcssa, %3123 ], !dbg !74
  %3327 = phi float [ %.pn1249, %3137 ], [ %.pn148.lcssa, %3123 ], !dbg !74
  %3328 = phi float [ %.pn1247, %3137 ], [ %.pn146.lcssa, %3123 ], !dbg !74
  %3329 = phi float [ %.pn1245, %3137 ], [ %.pn144.lcssa, %3123 ], !dbg !74
  %3330 = phi float [ %.pn1243, %3137 ], [ %.pn142.lcssa, %3123 ], !dbg !74
  %3331 = phi float [ %.pn1241, %3137 ], [ %.pn140.lcssa, %3123 ], !dbg !74
  %3332 = phi float [ %.pn1239, %3137 ], [ %.pn138.lcssa, %3123 ], !dbg !74
  %3333 = phi float [ %.pn1237, %3137 ], [ %.pn136.lcssa, %3123 ], !dbg !74
  %3334 = phi float [ %.pn1235, %3137 ], [ %.pn134.lcssa, %3123 ], !dbg !74
  %3335 = phi float [ %.pn1233, %3137 ], [ %.pn132.lcssa, %3123 ], !dbg !74
  %3336 = phi float [ %.pn1231, %3137 ], [ %.pn130.lcssa, %3123 ], !dbg !74
  %3337 = phi float [ %.pn1229, %3137 ], [ %.pn128.lcssa, %3123 ], !dbg !74
  %3338 = phi float [ %.pn1227, %3137 ], [ %.pn126.lcssa, %3123 ], !dbg !74
  %3339 = phi float [ %.pn1225, %3137 ], [ %.pn124.lcssa, %3123 ], !dbg !74
  %3340 = phi float [ %.pn1223, %3137 ], [ %.pn122.lcssa, %3123 ], !dbg !74
  %3341 = phi float [ %.pn1221, %3137 ], [ %.pn120.lcssa, %3123 ], !dbg !74
  %3342 = phi float [ %.pn1219, %3137 ], [ %.pn118.lcssa, %3123 ], !dbg !74
  %3343 = phi float [ %.pn1217, %3137 ], [ %.pn116.lcssa, %3123 ], !dbg !74
  %3344 = phi float [ %.pn1215, %3137 ], [ %.pn114.lcssa, %3123 ], !dbg !74
  %3345 = phi float [ %.pn1213, %3137 ], [ %.pn112.lcssa, %3123 ], !dbg !74
  %3346 = phi float [ %.pn1211, %3137 ], [ %.pn110.lcssa, %3123 ], !dbg !74
  %3347 = phi float [ %.pn1209, %3137 ], [ %.pn108.lcssa, %3123 ], !dbg !74
  %3348 = phi float [ %.pn1207, %3137 ], [ %.pn106.lcssa, %3123 ], !dbg !74
  %3349 = phi float [ %.pn1205, %3137 ], [ %.pn104.lcssa, %3123 ], !dbg !74
  %3350 = phi float [ %.pn1204, %3137 ], [ %.pn102.lcssa, %3123 ], !dbg !74
  %3351 = phi float [ %.pn1202, %3137 ], [ %.pn100.lcssa, %3123 ], !dbg !74
  %.pn1320 = phi float [ %3275, %3137 ], [ %.pn220.lcssa, %3123 ]
  %.pn1318 = phi float [ %3276, %3137 ], [ %.pn218.lcssa, %3123 ]
  %.pn1312 = phi float [ %3277, %3137 ], [ %.pn212.lcssa, %3123 ]
  %.pn1310 = phi float [ %3278, %3137 ], [ %.pn210.lcssa, %3123 ]
  %.pn1304 = phi float [ %3279, %3137 ], [ %.pn204.lcssa, %3123 ]
  %.pn1302 = phi float [ %3280, %3137 ], [ %.pn202.lcssa, %3123 ]
  %.pn1296 = phi float [ %3281, %3137 ], [ %.pn196.lcssa, %3123 ]
  %.pn1294 = phi float [ %3302, %3137 ], [ %.pn194.lcssa, %3123 ]
  %.pn1288 = phi float [ %3303, %3137 ], [ %.pn188.lcssa, %3123 ]
  %.pn1286 = phi float [ %3304, %3137 ], [ %.pn186.lcssa, %3123 ]
  %.pn1280 = phi float [ %3305, %3137 ], [ %.pn180.lcssa, %3123 ]
  %.pn1278 = phi float [ %3306, %3137 ], [ %.pn178.lcssa, %3123 ]
  %.pn1272 = phi float [ %3307, %3137 ], [ %.pn172.lcssa, %3123 ]
  %.pn1270 = phi float [ %3308, %3137 ], [ %.pn170.lcssa, %3123 ]
  %.pn1264 = phi float [ %3309, %3137 ], [ %.pn164.lcssa, %3123 ]
  %3352 = phi <2 x float> [ %3310, %3137 ], [ %2681, %3123 ]
  %3353 = phi <2 x float> [ %3311, %3137 ], [ %2682, %3123 ]
  %3354 = phi <2 x float> [ %3312, %3137 ], [ %2683, %3123 ]
  %3355 = phi <2 x float> [ %3313, %3137 ], [ %2684, %3123 ]
  %3356 = phi <2 x float> [ %3314, %3137 ], [ %2685, %3123 ]
  %3357 = phi <2 x float> [ %3315, %3137 ], [ %2686, %3123 ]
  %3358 = phi <2 x float> [ %3316, %3137 ], [ %2687, %3123 ]
  %3359 = phi <2 x float> [ %3317, %3137 ], [ %2688, %3123 ]
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %3360 = shufflevector <2 x half> %2729, <2 x half> %2730, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %3360, ptr addrspace(3) %185, align 8, !dbg !84
  %3361 = shufflevector <2 x half> %2731, <2 x half> %2732, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %3361, ptr addrspace(3) %192, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  br i1 %919, label %3362, label %3395, !dbg !89

3362:                                             ; preds = %3318
  %3363 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !84
  %3364 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !84
  %3365 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !84
  %3366 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !84
  %3367 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !84
  %3368 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !84
  %3369 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !84
  %3370 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !84
  %3371 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3370, <4 x half> %250, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !89
  %3372 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3369, <4 x half> %252, <16 x float> %3371, i32 0, i32 0, i32 0), !dbg !89
  %3373 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3368, <4 x half> %254, <16 x float> %3372, i32 0, i32 0, i32 0), !dbg !89
  %3374 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3367, <4 x half> %256, <16 x float> %3373, i32 0, i32 0, i32 0), !dbg !89
  %3375 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3366, <4 x half> %258, <16 x float> %3374, i32 0, i32 0, i32 0), !dbg !89
  %3376 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3365, <4 x half> %260, <16 x float> %3375, i32 0, i32 0, i32 0), !dbg !89
  %3377 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3364, <4 x half> %262, <16 x float> %3376, i32 0, i32 0, i32 0), !dbg !89
  %3378 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3363, <4 x half> %264, <16 x float> %3377, i32 0, i32 0, i32 0), !dbg !89
  %3379 = extractelement <16 x float> %3378, i64 0, !dbg !89
  %3380 = extractelement <16 x float> %3378, i64 1, !dbg !89
  %3381 = extractelement <16 x float> %3378, i64 2, !dbg !89
  %3382 = extractelement <16 x float> %3378, i64 3, !dbg !89
  %3383 = extractelement <16 x float> %3378, i64 4, !dbg !89
  %3384 = extractelement <16 x float> %3378, i64 5, !dbg !89
  %3385 = extractelement <16 x float> %3378, i64 6, !dbg !89
  %3386 = extractelement <16 x float> %3378, i64 7, !dbg !89
  %3387 = extractelement <16 x float> %3378, i64 8, !dbg !89
  %3388 = extractelement <16 x float> %3378, i64 9, !dbg !89
  %3389 = extractelement <16 x float> %3378, i64 10, !dbg !89
  %3390 = extractelement <16 x float> %3378, i64 11, !dbg !89
  %3391 = extractelement <16 x float> %3378, i64 12, !dbg !89
  %3392 = extractelement <16 x float> %3378, i64 13, !dbg !89
  %3393 = extractelement <16 x float> %3378, i64 14, !dbg !89
  %3394 = extractelement <16 x float> %3378, i64 15, !dbg !89
  br label %3395, !dbg !89

3395:                                             ; preds = %3362, %3318
  %3396 = phi float [ %3379, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3397 = phi float [ %3380, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3398 = phi float [ %3381, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3399 = phi float [ %3382, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3400 = phi float [ %3383, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3401 = phi float [ %3384, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3402 = phi float [ %3385, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3403 = phi float [ %3386, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3404 = phi float [ %3387, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3405 = phi float [ %3388, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3406 = phi float [ %3389, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3407 = phi float [ %3390, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3408 = phi float [ %3391, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3409 = phi float [ %3392, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3410 = phi float [ %3393, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3411 = phi float [ %3394, %3362 ], [ 0.000000e+00, %3318 ], !dbg !74
  %3412 = fsub float %3396, %.pn274.pn.pn.lcssa, !dbg !90
  %3413 = fsub float %3397, %.pn272.pn.pn.lcssa, !dbg !90
  %3414 = fsub float %3398, %.pn270.pn.pn.lcssa, !dbg !90
  %3415 = fsub float %3399, %.pn268.pn.pn.lcssa, !dbg !90
  %3416 = fsub float %3400, %.pn266.pn.pn.lcssa, !dbg !90
  %3417 = fsub float %3401, %.pn264.pn.pn.lcssa, !dbg !90
  %3418 = fsub float %3402, %.pn262.pn.pn.lcssa, !dbg !90
  %3419 = fsub float %3403, %.pn260.pn.pn.lcssa, !dbg !90
  %3420 = fsub float %3404, %.pn258.pn.pn.lcssa, !dbg !90
  %3421 = fsub float %3405, %.pn256.pn.pn.lcssa, !dbg !90
  %3422 = fsub float %3406, %.pn254.pn.pn.lcssa, !dbg !90
  %3423 = fsub float %3407, %.pn252.pn.pn.lcssa, !dbg !90
  %3424 = fsub float %3408, %.pn250.pn.pn.lcssa, !dbg !90
  %3425 = fsub float %3409, %.pn248.pn.pn.lcssa, !dbg !90
  %3426 = fsub float %3410, %.pn246.pn.pn.lcssa, !dbg !90
  %3427 = fsub float %3411, %.pn244.pn.pn.lcssa, !dbg !90
  %3428 = tail call float @llvm.amdgcn.exp2.f32(float %3412), !dbg !91
  %3429 = tail call float @llvm.amdgcn.exp2.f32(float %3413), !dbg !91
  %3430 = tail call float @llvm.amdgcn.exp2.f32(float %3414), !dbg !91
  %3431 = tail call float @llvm.amdgcn.exp2.f32(float %3415), !dbg !91
  %3432 = tail call float @llvm.amdgcn.exp2.f32(float %3416), !dbg !91
  %3433 = tail call float @llvm.amdgcn.exp2.f32(float %3417), !dbg !91
  %3434 = tail call float @llvm.amdgcn.exp2.f32(float %3418), !dbg !91
  %3435 = tail call float @llvm.amdgcn.exp2.f32(float %3419), !dbg !91
  %3436 = tail call float @llvm.amdgcn.exp2.f32(float %3420), !dbg !91
  %3437 = tail call float @llvm.amdgcn.exp2.f32(float %3421), !dbg !91
  %3438 = tail call float @llvm.amdgcn.exp2.f32(float %3422), !dbg !91
  %3439 = tail call float @llvm.amdgcn.exp2.f32(float %3423), !dbg !91
  %3440 = tail call float @llvm.amdgcn.exp2.f32(float %3424), !dbg !91
  %3441 = tail call float @llvm.amdgcn.exp2.f32(float %3425), !dbg !91
  %3442 = tail call float @llvm.amdgcn.exp2.f32(float %3426), !dbg !91
  %3443 = tail call float @llvm.amdgcn.exp2.f32(float %3427), !dbg !91
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %3444 = shufflevector <2 x half> %2733, <2 x half> %2734, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3445 = shufflevector <2 x half> %2736, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3446 = shufflevector <8 x half> %3444, <8 x half> %3445, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !87
  %3447 = shufflevector <2 x half> %2735, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3448 = shufflevector <8 x half> %3446, <8 x half> %3447, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !87
  store <8 x half> %3448, ptr addrspace(3) %2880, align 16, !dbg !87
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  br i1 %919, label %3449, label %3626, !dbg !93

3449:                                             ; preds = %3395
  %3450 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !87
  %3451 = shufflevector <1 x half> %3450, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3452 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !87
  %3453 = shufflevector <1 x half> %3452, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3454 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !87
  %3455 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !87
  %3456 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !87
  %3457 = shufflevector <1 x half> %3456, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3458 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !87
  %3459 = shufflevector <1 x half> %3458, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3460 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !87
  %3461 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !87
  %3462 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !87
  %3463 = shufflevector <1 x half> %3462, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3464 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !87
  %3465 = shufflevector <1 x half> %3464, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3466 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !87
  %3467 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !87
  %3468 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !87
  %3469 = shufflevector <1 x half> %3468, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3470 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !87
  %3471 = shufflevector <1 x half> %3470, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3472 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !87
  %3473 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !87
  %3474 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !87
  %3475 = shufflevector <1 x half> %3474, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3476 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !87
  %3477 = shufflevector <1 x half> %3476, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3478 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !87
  %3479 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !87
  %3480 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !87
  %3481 = shufflevector <1 x half> %3480, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3482 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !87
  %3483 = shufflevector <1 x half> %3482, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3484 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !87
  %3485 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !87
  %3486 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !87
  %3487 = shufflevector <1 x half> %3486, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3488 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !87
  %3489 = shufflevector <1 x half> %3488, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3490 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !87
  %3491 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !87
  %3492 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !87
  %3493 = shufflevector <1 x half> %3492, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3494 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !87
  %3495 = shufflevector <1 x half> %3494, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3496 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !87
  %3497 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !87
  %3498 = fptrunc float %3443 to half, !dbg !92
  %3499 = fptrunc float %3442 to half, !dbg !92
  %3500 = fptrunc float %3441 to half, !dbg !92
  %3501 = fptrunc float %3440 to half, !dbg !92
  %3502 = fptrunc float %3439 to half, !dbg !92
  %3503 = fptrunc float %3438 to half, !dbg !92
  %3504 = fptrunc float %3437 to half, !dbg !92
  %3505 = fptrunc float %3436 to half, !dbg !92
  %3506 = fptrunc float %3435 to half, !dbg !92
  %3507 = fptrunc float %3434 to half, !dbg !92
  %3508 = fptrunc float %3433 to half, !dbg !92
  %3509 = fptrunc float %3432 to half, !dbg !92
  %3510 = fptrunc float %3431 to half, !dbg !92
  %3511 = fptrunc float %3430 to half, !dbg !92
  %3512 = fptrunc float %3429 to half, !dbg !92
  %3513 = fptrunc float %3428 to half, !dbg !92
  %3514 = insertelement <4 x half> poison, half %3513, i64 0, !dbg !93
  %3515 = insertelement <4 x half> %3514, half %3512, i64 1, !dbg !93
  %3516 = insertelement <4 x half> %3515, half %3511, i64 2, !dbg !93
  %3517 = insertelement <4 x half> %3516, half %3510, i64 3, !dbg !93
  %3518 = insertelement <4 x half> poison, half %3509, i64 0, !dbg !93
  %3519 = insertelement <4 x half> %3518, half %3508, i64 1, !dbg !93
  %3520 = insertelement <4 x half> %3519, half %3507, i64 2, !dbg !93
  %3521 = insertelement <4 x half> %3520, half %3506, i64 3, !dbg !93
  %3522 = insertelement <4 x half> poison, half %3505, i64 0, !dbg !93
  %3523 = insertelement <4 x half> %3522, half %3504, i64 1, !dbg !93
  %3524 = insertelement <4 x half> %3523, half %3503, i64 2, !dbg !93
  %3525 = insertelement <4 x half> %3524, half %3502, i64 3, !dbg !93
  %3526 = insertelement <4 x half> poison, half %3501, i64 0, !dbg !93
  %3527 = insertelement <4 x half> %3526, half %3500, i64 1, !dbg !93
  %3528 = insertelement <4 x half> %3527, half %3499, i64 2, !dbg !93
  %3529 = insertelement <4 x half> %3528, half %3498, i64 3, !dbg !93
  %3530 = shufflevector <1 x half> %3497, <1 x half> %3496, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3531 = shufflevector <4 x half> %3530, <4 x half> %3495, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3532 = shufflevector <4 x half> %3531, <4 x half> %3493, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3533 = shufflevector <1 x half> %3491, <1 x half> %3490, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3534 = shufflevector <4 x half> %3533, <4 x half> %3489, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3535 = shufflevector <4 x half> %3534, <4 x half> %3487, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3536 = shufflevector <1 x half> %3485, <1 x half> %3484, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3537 = shufflevector <4 x half> %3536, <4 x half> %3483, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3538 = shufflevector <4 x half> %3537, <4 x half> %3481, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3539 = shufflevector <1 x half> %3479, <1 x half> %3478, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3540 = shufflevector <4 x half> %3539, <4 x half> %3477, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3541 = shufflevector <4 x half> %3540, <4 x half> %3475, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3542 = shufflevector <1 x half> %3473, <1 x half> %3472, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3543 = shufflevector <4 x half> %3542, <4 x half> %3471, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3544 = shufflevector <4 x half> %3543, <4 x half> %3469, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3545 = shufflevector <1 x half> %3467, <1 x half> %3466, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3546 = shufflevector <4 x half> %3545, <4 x half> %3465, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3547 = shufflevector <4 x half> %3546, <4 x half> %3463, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3548 = shufflevector <1 x half> %3461, <1 x half> %3460, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3549 = shufflevector <4 x half> %3548, <4 x half> %3459, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3550 = shufflevector <4 x half> %3549, <4 x half> %3457, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3551 = shufflevector <1 x half> %3455, <1 x half> %3454, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %3552 = shufflevector <4 x half> %3551, <4 x half> %3453, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %3553 = shufflevector <4 x half> %3552, <4 x half> %3451, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %3554 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3320, i64 0, !dbg !93
  %3555 = insertelement <16 x float> %3554, float %3321, i64 1, !dbg !93
  %3556 = insertelement <16 x float> %3555, float %3322, i64 2, !dbg !93
  %3557 = insertelement <16 x float> %3556, float %3323, i64 3, !dbg !93
  %3558 = insertelement <16 x float> %3557, float %3324, i64 4, !dbg !93
  %3559 = insertelement <16 x float> %3558, float %3325, i64 5, !dbg !93
  %3560 = insertelement <16 x float> %3559, float %3326, i64 6, !dbg !93
  %3561 = insertelement <16 x float> %3560, float %3327, i64 7, !dbg !93
  %3562 = insertelement <16 x float> %3561, float %3328, i64 8, !dbg !93
  %3563 = insertelement <16 x float> %3562, float %3329, i64 9, !dbg !93
  %3564 = insertelement <16 x float> %3563, float %3330, i64 10, !dbg !93
  %3565 = insertelement <16 x float> %3564, float %3331, i64 11, !dbg !93
  %3566 = insertelement <16 x float> %3565, float %3332, i64 12, !dbg !93
  %3567 = insertelement <16 x float> %3566, float %3333, i64 13, !dbg !93
  %3568 = insertelement <16 x float> %3567, float %3334, i64 14, !dbg !93
  %3569 = insertelement <16 x float> %3568, float %3335, i64 15, !dbg !93
  %3570 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3532, <4 x half> %3517, <16 x float> %3569, i32 0, i32 0, i32 0), !dbg !93
  %3571 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3535, <4 x half> %3521, <16 x float> %3570, i32 0, i32 0, i32 0), !dbg !93
  %3572 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3538, <4 x half> %3525, <16 x float> %3571, i32 0, i32 0, i32 0), !dbg !93
  %3573 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3541, <4 x half> %3529, <16 x float> %3572, i32 0, i32 0, i32 0), !dbg !93
  %3574 = extractelement <16 x float> %3573, i64 0, !dbg !93
  %3575 = extractelement <16 x float> %3573, i64 1, !dbg !93
  %3576 = extractelement <16 x float> %3573, i64 2, !dbg !93
  %3577 = extractelement <16 x float> %3573, i64 3, !dbg !93
  %3578 = extractelement <16 x float> %3573, i64 4, !dbg !93
  %3579 = extractelement <16 x float> %3573, i64 5, !dbg !93
  %3580 = extractelement <16 x float> %3573, i64 6, !dbg !93
  %3581 = extractelement <16 x float> %3573, i64 7, !dbg !93
  %3582 = extractelement <16 x float> %3573, i64 8, !dbg !93
  %3583 = extractelement <16 x float> %3573, i64 9, !dbg !93
  %3584 = extractelement <16 x float> %3573, i64 10, !dbg !93
  %3585 = extractelement <16 x float> %3573, i64 11, !dbg !93
  %3586 = extractelement <16 x float> %3573, i64 12, !dbg !93
  %3587 = extractelement <16 x float> %3573, i64 13, !dbg !93
  %3588 = extractelement <16 x float> %3573, i64 14, !dbg !93
  %3589 = extractelement <16 x float> %3573, i64 15, !dbg !93
  %3590 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3336, i64 0, !dbg !93
  %3591 = insertelement <16 x float> %3590, float %3337, i64 1, !dbg !93
  %3592 = insertelement <16 x float> %3591, float %3338, i64 2, !dbg !93
  %3593 = insertelement <16 x float> %3592, float %3339, i64 3, !dbg !93
  %3594 = insertelement <16 x float> %3593, float %3340, i64 4, !dbg !93
  %3595 = insertelement <16 x float> %3594, float %3341, i64 5, !dbg !93
  %3596 = insertelement <16 x float> %3595, float %3342, i64 6, !dbg !93
  %3597 = insertelement <16 x float> %3596, float %3343, i64 7, !dbg !93
  %3598 = insertelement <16 x float> %3597, float %3344, i64 8, !dbg !93
  %3599 = insertelement <16 x float> %3598, float %3345, i64 9, !dbg !93
  %3600 = insertelement <16 x float> %3599, float %3346, i64 10, !dbg !93
  %3601 = insertelement <16 x float> %3600, float %3347, i64 11, !dbg !93
  %3602 = insertelement <16 x float> %3601, float %3348, i64 12, !dbg !93
  %3603 = insertelement <16 x float> %3602, float %3349, i64 13, !dbg !93
  %3604 = insertelement <16 x float> %3603, float %3350, i64 14, !dbg !93
  %3605 = insertelement <16 x float> %3604, float %3351, i64 15, !dbg !93
  %3606 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3544, <4 x half> %3517, <16 x float> %3605, i32 0, i32 0, i32 0), !dbg !93
  %3607 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3547, <4 x half> %3521, <16 x float> %3606, i32 0, i32 0, i32 0), !dbg !93
  %3608 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3550, <4 x half> %3525, <16 x float> %3607, i32 0, i32 0, i32 0), !dbg !93
  %3609 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3553, <4 x half> %3529, <16 x float> %3608, i32 0, i32 0, i32 0), !dbg !93
  %3610 = extractelement <16 x float> %3609, i64 0, !dbg !93
  %3611 = extractelement <16 x float> %3609, i64 1, !dbg !93
  %3612 = extractelement <16 x float> %3609, i64 2, !dbg !93
  %3613 = extractelement <16 x float> %3609, i64 3, !dbg !93
  %3614 = extractelement <16 x float> %3609, i64 4, !dbg !93
  %3615 = extractelement <16 x float> %3609, i64 5, !dbg !93
  %3616 = extractelement <16 x float> %3609, i64 6, !dbg !93
  %3617 = extractelement <16 x float> %3609, i64 7, !dbg !93
  %3618 = extractelement <16 x float> %3609, i64 8, !dbg !93
  %3619 = extractelement <16 x float> %3609, i64 9, !dbg !93
  %3620 = extractelement <16 x float> %3609, i64 10, !dbg !93
  %3621 = extractelement <16 x float> %3609, i64 11, !dbg !93
  %3622 = extractelement <16 x float> %3609, i64 12, !dbg !93
  %3623 = extractelement <16 x float> %3609, i64 13, !dbg !93
  %3624 = extractelement <16 x float> %3609, i64 14, !dbg !93
  %3625 = extractelement <16 x float> %3609, i64 15, !dbg !93
  br label %3626, !dbg !93

3626:                                             ; preds = %3449, %3395
  %.pn408 = phi float [ %3574, %3449 ], [ %3320, %3395 ]
  %.pn406 = phi float [ %3575, %3449 ], [ %3321, %3395 ]
  %.pn404 = phi float [ %3576, %3449 ], [ %3322, %3395 ]
  %.pn402 = phi float [ %3577, %3449 ], [ %3323, %3395 ]
  %.pn400 = phi float [ %3578, %3449 ], [ %3324, %3395 ]
  %.pn398 = phi float [ %3579, %3449 ], [ %3325, %3395 ]
  %.pn396 = phi float [ %3580, %3449 ], [ %3326, %3395 ]
  %.pn394 = phi float [ %3581, %3449 ], [ %3327, %3395 ]
  %.pn392 = phi float [ %3582, %3449 ], [ %3328, %3395 ]
  %.pn390 = phi float [ %3583, %3449 ], [ %3329, %3395 ]
  %.pn388 = phi float [ %3584, %3449 ], [ %3330, %3395 ]
  %.pn386 = phi float [ %3585, %3449 ], [ %3331, %3395 ]
  %.pn384 = phi float [ %3586, %3449 ], [ %3332, %3395 ]
  %.pn382 = phi float [ %3587, %3449 ], [ %3333, %3395 ]
  %.pn380 = phi float [ %3588, %3449 ], [ %3334, %3395 ]
  %.pn378 = phi float [ %3589, %3449 ], [ %3335, %3395 ]
  %.pn376 = phi float [ %3610, %3449 ], [ %3336, %3395 ]
  %.pn374 = phi float [ %3611, %3449 ], [ %3337, %3395 ]
  %.pn372 = phi float [ %3612, %3449 ], [ %3338, %3395 ]
  %.pn370 = phi float [ %3613, %3449 ], [ %3339, %3395 ]
  %.pn368 = phi float [ %3614, %3449 ], [ %3340, %3395 ]
  %.pn366 = phi float [ %3615, %3449 ], [ %3341, %3395 ]
  %.pn364 = phi float [ %3616, %3449 ], [ %3342, %3395 ]
  %.pn362 = phi float [ %3617, %3449 ], [ %3343, %3395 ]
  %.pn360 = phi float [ %3618, %3449 ], [ %3344, %3395 ]
  %.pn358 = phi float [ %3619, %3449 ], [ %3345, %3395 ]
  %.pn356 = phi float [ %3620, %3449 ], [ %3346, %3395 ]
  %.pn354 = phi float [ %3621, %3449 ], [ %3347, %3395 ]
  %.pn352 = phi float [ %3622, %3449 ], [ %3348, %3395 ]
  %.pn350 = phi float [ %3623, %3449 ], [ %3349, %3395 ]
  %.pn348 = phi float [ %3624, %3449 ], [ %3350, %3395 ]
  %.pn346 = phi float [ %3625, %3449 ], [ %3351, %3395 ]
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %3627 = shufflevector <2 x half> %2733, <2 x half> %2734, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %3627, ptr addrspace(3) %185, align 8, !dbg !94
  %3628 = shufflevector <2 x half> %2736, <2 x half> %2735, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %3628, ptr addrspace(3) %192, align 8, !dbg !94
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  br i1 %919, label %3629, label %3654, !dbg !95

3629:                                             ; preds = %3626
  %3630 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !94
  %3631 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !94
  %3632 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !94
  %3633 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !94
  %3634 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !94
  %3635 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !94
  %3636 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !94
  %3637 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !94
  %3638 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3637, <4 x half> %309, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !95
  %3639 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3636, <4 x half> %310, <16 x float> %3638, i32 0, i32 0, i32 0), !dbg !95
  %3640 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3635, <4 x half> %311, <16 x float> %3639, i32 0, i32 0, i32 0), !dbg !95
  %3641 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3634, <4 x half> %312, <16 x float> %3640, i32 0, i32 0, i32 0), !dbg !95
  %3642 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3633, <4 x half> %313, <16 x float> %3641, i32 0, i32 0, i32 0), !dbg !95
  %3643 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3632, <4 x half> %314, <16 x float> %3642, i32 0, i32 0, i32 0), !dbg !95
  %3644 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3631, <4 x half> %315, <16 x float> %3643, i32 0, i32 0, i32 0), !dbg !95
  %3645 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3630, <4 x half> %316, <16 x float> %3644, i32 0, i32 0, i32 0), !dbg !95
  %3646 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !74
  %3647 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !74
  %3648 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !74
  %3649 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !74
  %3650 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !74
  %3651 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !74
  %3652 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !74
  %3653 = shufflevector <16 x float> %3645, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !74
  br label %3654, !dbg !95

3654:                                             ; preds = %3629, %3626
  %3655 = phi <2 x float> [ %3646, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3656 = phi <2 x float> [ %3647, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3657 = phi <2 x float> [ %3648, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3658 = phi <2 x float> [ %3649, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3659 = phi <2 x float> [ %3650, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3660 = phi <2 x float> [ %3651, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3661 = phi <2 x float> [ %3652, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  %3662 = phi <2 x float> [ %3653, %3629 ], [ zeroinitializer, %3626 ], !dbg !74
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %3663 = shufflevector <2 x half> %2729, <2 x half> %2730, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3664 = shufflevector <2 x half> %2731, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3665 = shufflevector <8 x half> %3663, <8 x half> %3664, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !99
  %3666 = shufflevector <2 x half> %2732, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %3667 = shufflevector <8 x half> %3665, <8 x half> %3666, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !99
  store <8 x half> %3667, ptr addrspace(3) %2880, align 16, !dbg !99
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  br i1 %919, label %3668, label %3849, !dbg !100

3668:                                             ; preds = %3654
  %3669 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !99
  %3670 = shufflevector <1 x half> %3669, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3671 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !99
  %3672 = shufflevector <1 x half> %3671, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3673 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !99
  %3674 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !99
  %3675 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !99
  %3676 = shufflevector <1 x half> %3675, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3677 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !99
  %3678 = shufflevector <1 x half> %3677, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3679 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !99
  %3680 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !99
  %3681 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !99
  %3682 = shufflevector <1 x half> %3681, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3683 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !99
  %3684 = shufflevector <1 x half> %3683, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3685 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !99
  %3686 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !99
  %3687 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !99
  %3688 = shufflevector <1 x half> %3687, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3689 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !99
  %3690 = shufflevector <1 x half> %3689, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3691 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !99
  %3692 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !99
  %3693 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !99
  %3694 = shufflevector <1 x half> %3693, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3695 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !99
  %3696 = shufflevector <1 x half> %3695, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3697 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !99
  %3698 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !99
  %3699 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !99
  %3700 = shufflevector <1 x half> %3699, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3701 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !99
  %3702 = shufflevector <1 x half> %3701, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3703 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !99
  %3704 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !99
  %3705 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !99
  %3706 = shufflevector <1 x half> %3705, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3707 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !99
  %3708 = shufflevector <1 x half> %3707, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3709 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !99
  %3710 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !99
  %3711 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !99
  %3712 = shufflevector <1 x half> %3711, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3713 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !99
  %3714 = shufflevector <1 x half> %3713, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3715 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !99
  %3716 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !99
  %3717 = fsub <2 x float> %3656, %2722, !dbg !96
  %3718 = insertelement <2 x float> poison, float %3442, i64 0, !dbg !97
  %3719 = insertelement <2 x float> %3718, float %3443, i64 1, !dbg !97
  %3720 = fmul <2 x float> %3719, %3717, !dbg !97
  %3721 = fptrunc <2 x float> %3720 to <2 x half>, !dbg !98
  %3722 = fsub <2 x float> %3655, %2721, !dbg !96
  %3723 = insertelement <2 x float> poison, float %3440, i64 0, !dbg !97
  %3724 = insertelement <2 x float> %3723, float %3441, i64 1, !dbg !97
  %3725 = fmul <2 x float> %3724, %3722, !dbg !97
  %3726 = fptrunc <2 x float> %3725 to <2 x half>, !dbg !98
  %3727 = fsub <2 x float> %3658, %2724, !dbg !96
  %3728 = insertelement <2 x float> poison, float %3438, i64 0, !dbg !97
  %3729 = insertelement <2 x float> %3728, float %3439, i64 1, !dbg !97
  %3730 = fmul <2 x float> %3729, %3727, !dbg !97
  %3731 = fptrunc <2 x float> %3730 to <2 x half>, !dbg !98
  %3732 = fsub <2 x float> %3657, %2723, !dbg !96
  %3733 = insertelement <2 x float> poison, float %3436, i64 0, !dbg !97
  %3734 = insertelement <2 x float> %3733, float %3437, i64 1, !dbg !97
  %3735 = fmul <2 x float> %3734, %3732, !dbg !97
  %3736 = fptrunc <2 x float> %3735 to <2 x half>, !dbg !98
  %3737 = fsub <2 x float> %3660, %2726, !dbg !96
  %3738 = insertelement <2 x float> poison, float %3434, i64 0, !dbg !97
  %3739 = insertelement <2 x float> %3738, float %3435, i64 1, !dbg !97
  %3740 = fmul <2 x float> %3739, %3737, !dbg !97
  %3741 = fptrunc <2 x float> %3740 to <2 x half>, !dbg !98
  %3742 = fsub <2 x float> %3659, %2725, !dbg !96
  %3743 = insertelement <2 x float> poison, float %3432, i64 0, !dbg !97
  %3744 = insertelement <2 x float> %3743, float %3433, i64 1, !dbg !97
  %3745 = fmul <2 x float> %3744, %3742, !dbg !97
  %3746 = fptrunc <2 x float> %3745 to <2 x half>, !dbg !98
  %3747 = fsub <2 x float> %3662, %2728, !dbg !96
  %3748 = insertelement <2 x float> poison, float %3430, i64 0, !dbg !97
  %3749 = insertelement <2 x float> %3748, float %3431, i64 1, !dbg !97
  %3750 = fmul <2 x float> %3749, %3747, !dbg !97
  %3751 = fptrunc <2 x float> %3750 to <2 x half>, !dbg !98
  %3752 = fsub <2 x float> %3661, %2727, !dbg !96
  %3753 = insertelement <2 x float> poison, float %3428, i64 0, !dbg !97
  %3754 = insertelement <2 x float> %3753, float %3429, i64 1, !dbg !97
  %3755 = fmul <2 x float> %3754, %3752, !dbg !97
  %3756 = fptrunc <2 x float> %3755 to <2 x half>, !dbg !98
  %3757 = shufflevector <2 x half> %3756, <2 x half> %3751, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3758 = shufflevector <2 x half> %3746, <2 x half> %3741, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3759 = shufflevector <2 x half> %3736, <2 x half> %3731, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3760 = shufflevector <2 x half> %3726, <2 x half> %3721, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %3761 = shufflevector <1 x half> %3716, <1 x half> %3715, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3762 = shufflevector <4 x half> %3761, <4 x half> %3714, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3763 = shufflevector <4 x half> %3762, <4 x half> %3712, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3764 = shufflevector <1 x half> %3710, <1 x half> %3709, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3765 = shufflevector <4 x half> %3764, <4 x half> %3708, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3766 = shufflevector <4 x half> %3765, <4 x half> %3706, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3767 = shufflevector <1 x half> %3704, <1 x half> %3703, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3768 = shufflevector <4 x half> %3767, <4 x half> %3702, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3769 = shufflevector <4 x half> %3768, <4 x half> %3700, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3770 = shufflevector <1 x half> %3698, <1 x half> %3697, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3771 = shufflevector <4 x half> %3770, <4 x half> %3696, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3772 = shufflevector <4 x half> %3771, <4 x half> %3694, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3773 = shufflevector <1 x half> %3692, <1 x half> %3691, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3774 = shufflevector <4 x half> %3773, <4 x half> %3690, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3775 = shufflevector <4 x half> %3774, <4 x half> %3688, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3776 = shufflevector <1 x half> %3686, <1 x half> %3685, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3777 = shufflevector <4 x half> %3776, <4 x half> %3684, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3778 = shufflevector <4 x half> %3777, <4 x half> %3682, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3779 = shufflevector <1 x half> %3680, <1 x half> %3679, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3780 = shufflevector <4 x half> %3779, <4 x half> %3678, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3781 = shufflevector <4 x half> %3780, <4 x half> %3676, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3782 = shufflevector <1 x half> %3674, <1 x half> %3673, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %3783 = shufflevector <4 x half> %3782, <4 x half> %3672, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %3784 = shufflevector <4 x half> %3783, <4 x half> %3670, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %3785 = insertelement <16 x float> poison, float %3319, i64 0, !dbg !100
  %3786 = shufflevector <2 x float> %3352, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3787 = shufflevector <16 x float> %3785, <16 x float> %3786, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3788 = insertelement <16 x float> %3787, float %.pn1320, i64 3, !dbg !100
  %3789 = insertelement <16 x float> %3788, float %.pn1318, i64 4, !dbg !100
  %3790 = shufflevector <2 x float> %3353, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3791 = shufflevector <16 x float> %3789, <16 x float> %3790, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3792 = insertelement <16 x float> %3791, float %.pn1312, i64 7, !dbg !100
  %3793 = insertelement <16 x float> %3792, float %.pn1310, i64 8, !dbg !100
  %3794 = shufflevector <2 x float> %3354, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3795 = shufflevector <16 x float> %3793, <16 x float> %3794, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3796 = insertelement <16 x float> %3795, float %.pn1304, i64 11, !dbg !100
  %3797 = insertelement <16 x float> %3796, float %.pn1302, i64 12, !dbg !100
  %3798 = shufflevector <2 x float> %3355, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3799 = shufflevector <16 x float> %3797, <16 x float> %3798, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %3800 = insertelement <16 x float> %3799, float %.pn1296, i64 15, !dbg !100
  %3801 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3763, <4 x half> %3757, <16 x float> %3800, i32 0, i32 0, i32 0), !dbg !100
  %3802 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3766, <4 x half> %3758, <16 x float> %3801, i32 0, i32 0, i32 0), !dbg !100
  %3803 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3769, <4 x half> %3759, <16 x float> %3802, i32 0, i32 0, i32 0), !dbg !100
  %3804 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3772, <4 x half> %3760, <16 x float> %3803, i32 0, i32 0, i32 0), !dbg !100
  %3805 = extractelement <16 x float> %3804, i64 0, !dbg !100
  %3806 = extractelement <16 x float> %3804, i64 3, !dbg !100
  %3807 = extractelement <16 x float> %3804, i64 4, !dbg !100
  %3808 = extractelement <16 x float> %3804, i64 7, !dbg !100
  %3809 = extractelement <16 x float> %3804, i64 8, !dbg !100
  %3810 = extractelement <16 x float> %3804, i64 11, !dbg !100
  %3811 = extractelement <16 x float> %3804, i64 12, !dbg !100
  %3812 = extractelement <16 x float> %3804, i64 15, !dbg !100
  %3813 = insertelement <16 x float> poison, float %.pn1294, i64 0, !dbg !100
  %3814 = shufflevector <2 x float> %3356, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3815 = shufflevector <16 x float> %3813, <16 x float> %3814, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3816 = insertelement <16 x float> %3815, float %.pn1288, i64 3, !dbg !100
  %3817 = insertelement <16 x float> %3816, float %.pn1286, i64 4, !dbg !100
  %3818 = shufflevector <2 x float> %3357, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3819 = shufflevector <16 x float> %3817, <16 x float> %3818, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3820 = insertelement <16 x float> %3819, float %.pn1280, i64 7, !dbg !100
  %3821 = insertelement <16 x float> %3820, float %.pn1278, i64 8, !dbg !100
  %3822 = shufflevector <2 x float> %3358, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3823 = shufflevector <16 x float> %3821, <16 x float> %3822, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3824 = insertelement <16 x float> %3823, float %.pn1272, i64 11, !dbg !100
  %3825 = insertelement <16 x float> %3824, float %.pn1270, i64 12, !dbg !100
  %3826 = shufflevector <2 x float> %3359, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %3827 = shufflevector <16 x float> %3825, <16 x float> %3826, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %3828 = insertelement <16 x float> %3827, float %.pn1264, i64 15, !dbg !100
  %3829 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3775, <4 x half> %3757, <16 x float> %3828, i32 0, i32 0, i32 0), !dbg !100
  %3830 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3778, <4 x half> %3758, <16 x float> %3829, i32 0, i32 0, i32 0), !dbg !100
  %3831 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3781, <4 x half> %3759, <16 x float> %3830, i32 0, i32 0, i32 0), !dbg !100
  %3832 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3784, <4 x half> %3760, <16 x float> %3831, i32 0, i32 0, i32 0), !dbg !100
  %3833 = extractelement <16 x float> %3832, i64 0, !dbg !100
  %3834 = extractelement <16 x float> %3832, i64 3, !dbg !100
  %3835 = extractelement <16 x float> %3832, i64 4, !dbg !100
  %3836 = extractelement <16 x float> %3832, i64 7, !dbg !100
  %3837 = extractelement <16 x float> %3832, i64 8, !dbg !100
  %3838 = extractelement <16 x float> %3832, i64 11, !dbg !100
  %3839 = extractelement <16 x float> %3832, i64 12, !dbg !100
  %3840 = extractelement <16 x float> %3832, i64 15, !dbg !100
  %3841 = shufflevector <16 x float> %3804, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %3842 = shufflevector <16 x float> %3804, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %3843 = shufflevector <16 x float> %3804, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %3844 = shufflevector <16 x float> %3804, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %3845 = shufflevector <16 x float> %3832, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %3846 = shufflevector <16 x float> %3832, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %3847 = shufflevector <16 x float> %3832, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %3848 = shufflevector <16 x float> %3832, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %3849, !dbg !100

3849:                                             ; preds = %3668, %3654
  %3850 = phi float [ %3840, %3668 ], [ %.pn1264, %3654 ]
  %3851 = phi float [ %3839, %3668 ], [ %.pn1270, %3654 ]
  %3852 = phi float [ %3838, %3668 ], [ %.pn1272, %3654 ]
  %3853 = phi float [ %3837, %3668 ], [ %.pn1278, %3654 ]
  %3854 = phi float [ %3836, %3668 ], [ %.pn1280, %3654 ]
  %3855 = phi float [ %3835, %3668 ], [ %.pn1286, %3654 ]
  %3856 = phi float [ %3834, %3668 ], [ %.pn1288, %3654 ]
  %3857 = phi float [ %3833, %3668 ], [ %.pn1294, %3654 ]
  %3858 = phi float [ %3812, %3668 ], [ %.pn1296, %3654 ]
  %3859 = phi float [ %3811, %3668 ], [ %.pn1302, %3654 ]
  %3860 = phi float [ %3810, %3668 ], [ %.pn1304, %3654 ]
  %3861 = phi float [ %3809, %3668 ], [ %.pn1310, %3654 ]
  %3862 = phi float [ %3808, %3668 ], [ %.pn1312, %3654 ]
  %3863 = phi float [ %3807, %3668 ], [ %.pn1318, %3654 ]
  %3864 = phi float [ %3806, %3668 ], [ %.pn1320, %3654 ]
  %3865 = phi float [ %3805, %3668 ], [ %3319, %3654 ]
  %3866 = phi float [ %.pn346, %3668 ], [ %3351, %3654 ]
  %3867 = phi float [ %.pn348, %3668 ], [ %3350, %3654 ]
  %3868 = phi float [ %.pn350, %3668 ], [ %3349, %3654 ]
  %3869 = phi float [ %.pn352, %3668 ], [ %3348, %3654 ]
  %3870 = phi float [ %.pn354, %3668 ], [ %3347, %3654 ]
  %3871 = phi float [ %.pn356, %3668 ], [ %3346, %3654 ]
  %3872 = phi float [ %.pn358, %3668 ], [ %3345, %3654 ]
  %3873 = phi float [ %.pn360, %3668 ], [ %3344, %3654 ]
  %3874 = phi float [ %.pn362, %3668 ], [ %3343, %3654 ]
  %3875 = phi float [ %.pn364, %3668 ], [ %3342, %3654 ]
  %3876 = phi float [ %.pn366, %3668 ], [ %3341, %3654 ]
  %3877 = phi float [ %.pn368, %3668 ], [ %3340, %3654 ]
  %3878 = phi float [ %.pn370, %3668 ], [ %3339, %3654 ]
  %3879 = phi float [ %.pn372, %3668 ], [ %3338, %3654 ]
  %3880 = phi float [ %.pn374, %3668 ], [ %3337, %3654 ]
  %3881 = phi float [ %.pn376, %3668 ], [ %3336, %3654 ]
  %3882 = phi float [ %.pn378, %3668 ], [ %3335, %3654 ]
  %3883 = phi float [ %.pn380, %3668 ], [ %3334, %3654 ]
  %3884 = phi float [ %.pn382, %3668 ], [ %3333, %3654 ]
  %3885 = phi float [ %.pn384, %3668 ], [ %3332, %3654 ]
  %3886 = phi float [ %.pn386, %3668 ], [ %3331, %3654 ]
  %3887 = phi float [ %.pn388, %3668 ], [ %3330, %3654 ]
  %3888 = phi float [ %.pn390, %3668 ], [ %3329, %3654 ]
  %3889 = phi float [ %.pn392, %3668 ], [ %3328, %3654 ]
  %3890 = phi float [ %.pn394, %3668 ], [ %3327, %3654 ]
  %3891 = phi float [ %.pn396, %3668 ], [ %3326, %3654 ]
  %3892 = phi float [ %.pn398, %3668 ], [ %3325, %3654 ]
  %3893 = phi float [ %.pn400, %3668 ], [ %3324, %3654 ]
  %3894 = phi float [ %.pn402, %3668 ], [ %3323, %3654 ]
  %3895 = phi float [ %.pn404, %3668 ], [ %3322, %3654 ]
  %3896 = phi float [ %.pn406, %3668 ], [ %3321, %3654 ]
  %3897 = phi float [ %.pn408, %3668 ], [ %3320, %3654 ]
  %3898 = phi <2 x float> [ %3841, %3668 ], [ %3352, %3654 ]
  %3899 = phi <2 x float> [ %3842, %3668 ], [ %3353, %3654 ]
  %3900 = phi <2 x float> [ %3843, %3668 ], [ %3354, %3654 ]
  %3901 = phi <2 x float> [ %3844, %3668 ], [ %3355, %3654 ]
  %3902 = phi <2 x float> [ %3845, %3668 ], [ %3356, %3654 ]
  %3903 = phi <2 x float> [ %3846, %3668 ], [ %3357, %3654 ]
  %3904 = phi <2 x float> [ %3847, %3668 ], [ %3358, %3654 ]
  %3905 = phi <2 x float> [ %3848, %3668 ], [ %3359, %3654 ]
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %3906 = shufflevector <2 x half> %2713, <2 x half> %2714, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %3906, ptr addrspace(3) %185, align 8, !dbg !84
  %3907 = shufflevector <2 x half> %2715, <2 x half> %2716, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %3907, ptr addrspace(3) %192, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  br i1 %958, label %3908, label %3941, !dbg !89

3908:                                             ; preds = %3849
  %3909 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !84
  %3910 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !84
  %3911 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !84
  %3912 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !84
  %3913 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !84
  %3914 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !84
  %3915 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !84
  %3916 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !84
  %3917 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3916, <4 x half> %250, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !89
  %3918 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3915, <4 x half> %252, <16 x float> %3917, i32 0, i32 0, i32 0), !dbg !89
  %3919 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3914, <4 x half> %254, <16 x float> %3918, i32 0, i32 0, i32 0), !dbg !89
  %3920 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3913, <4 x half> %256, <16 x float> %3919, i32 0, i32 0, i32 0), !dbg !89
  %3921 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3912, <4 x half> %258, <16 x float> %3920, i32 0, i32 0, i32 0), !dbg !89
  %3922 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3911, <4 x half> %260, <16 x float> %3921, i32 0, i32 0, i32 0), !dbg !89
  %3923 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3910, <4 x half> %262, <16 x float> %3922, i32 0, i32 0, i32 0), !dbg !89
  %3924 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3909, <4 x half> %264, <16 x float> %3923, i32 0, i32 0, i32 0), !dbg !89
  %3925 = extractelement <16 x float> %3924, i64 0, !dbg !89
  %3926 = extractelement <16 x float> %3924, i64 1, !dbg !89
  %3927 = extractelement <16 x float> %3924, i64 2, !dbg !89
  %3928 = extractelement <16 x float> %3924, i64 3, !dbg !89
  %3929 = extractelement <16 x float> %3924, i64 4, !dbg !89
  %3930 = extractelement <16 x float> %3924, i64 5, !dbg !89
  %3931 = extractelement <16 x float> %3924, i64 6, !dbg !89
  %3932 = extractelement <16 x float> %3924, i64 7, !dbg !89
  %3933 = extractelement <16 x float> %3924, i64 8, !dbg !89
  %3934 = extractelement <16 x float> %3924, i64 9, !dbg !89
  %3935 = extractelement <16 x float> %3924, i64 10, !dbg !89
  %3936 = extractelement <16 x float> %3924, i64 11, !dbg !89
  %3937 = extractelement <16 x float> %3924, i64 12, !dbg !89
  %3938 = extractelement <16 x float> %3924, i64 13, !dbg !89
  %3939 = extractelement <16 x float> %3924, i64 14, !dbg !89
  %3940 = extractelement <16 x float> %3924, i64 15, !dbg !89
  br label %3941, !dbg !89

3941:                                             ; preds = %3908, %3849
  %3942 = phi float [ %3925, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3943 = phi float [ %3926, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3944 = phi float [ %3927, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3945 = phi float [ %3928, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3946 = phi float [ %3929, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3947 = phi float [ %3930, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3948 = phi float [ %3931, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3949 = phi float [ %3932, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3950 = phi float [ %3933, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3951 = phi float [ %3934, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3952 = phi float [ %3935, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3953 = phi float [ %3936, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3954 = phi float [ %3937, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3955 = phi float [ %3938, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3956 = phi float [ %3939, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3957 = phi float [ %3940, %3908 ], [ 0.000000e+00, %3849 ], !dbg !74
  %3958 = fsub float %3942, %.pn274.pn.lcssa, !dbg !90
  %3959 = fsub float %3943, %.pn272.pn.lcssa, !dbg !90
  %3960 = fsub float %3944, %.pn270.pn.lcssa, !dbg !90
  %3961 = fsub float %3945, %.pn268.pn.lcssa, !dbg !90
  %3962 = fsub float %3946, %.pn266.pn.lcssa, !dbg !90
  %3963 = fsub float %3947, %.pn264.pn.lcssa, !dbg !90
  %3964 = fsub float %3948, %.pn262.pn.lcssa, !dbg !90
  %3965 = fsub float %3949, %.pn260.pn.lcssa, !dbg !90
  %3966 = fsub float %3950, %.pn258.pn.lcssa, !dbg !90
  %3967 = fsub float %3951, %.pn256.pn.lcssa, !dbg !90
  %3968 = fsub float %3952, %.pn254.pn.lcssa, !dbg !90
  %3969 = fsub float %3953, %.pn252.pn.lcssa, !dbg !90
  %3970 = fsub float %3954, %.pn250.pn.lcssa, !dbg !90
  %3971 = fsub float %3955, %.pn248.pn.lcssa, !dbg !90
  %3972 = fsub float %3956, %.pn246.pn.lcssa, !dbg !90
  %3973 = fsub float %3957, %.pn244.pn.lcssa, !dbg !90
  %3974 = tail call float @llvm.amdgcn.exp2.f32(float %3958), !dbg !91
  %3975 = tail call float @llvm.amdgcn.exp2.f32(float %3959), !dbg !91
  %3976 = tail call float @llvm.amdgcn.exp2.f32(float %3960), !dbg !91
  %3977 = tail call float @llvm.amdgcn.exp2.f32(float %3961), !dbg !91
  %3978 = tail call float @llvm.amdgcn.exp2.f32(float %3962), !dbg !91
  %3979 = tail call float @llvm.amdgcn.exp2.f32(float %3963), !dbg !91
  %3980 = tail call float @llvm.amdgcn.exp2.f32(float %3964), !dbg !91
  %3981 = tail call float @llvm.amdgcn.exp2.f32(float %3965), !dbg !91
  %3982 = tail call float @llvm.amdgcn.exp2.f32(float %3966), !dbg !91
  %3983 = tail call float @llvm.amdgcn.exp2.f32(float %3967), !dbg !91
  %3984 = tail call float @llvm.amdgcn.exp2.f32(float %3968), !dbg !91
  %3985 = tail call float @llvm.amdgcn.exp2.f32(float %3969), !dbg !91
  %3986 = tail call float @llvm.amdgcn.exp2.f32(float %3970), !dbg !91
  %3987 = tail call float @llvm.amdgcn.exp2.f32(float %3971), !dbg !91
  %3988 = tail call float @llvm.amdgcn.exp2.f32(float %3972), !dbg !91
  %3989 = tail call float @llvm.amdgcn.exp2.f32(float %3973), !dbg !91
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %3990 = shufflevector <2 x half> %2717, <2 x half> %2718, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3991 = shufflevector <2 x half> %2719, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3992 = shufflevector <8 x half> %3990, <8 x half> %3991, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !87
  %3993 = shufflevector <2 x half> %2720, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %3994 = shufflevector <8 x half> %3992, <8 x half> %3993, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !87
  store <8 x half> %3994, ptr addrspace(3) %2880, align 16, !dbg !87
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  br i1 %958, label %3995, label %4172, !dbg !93

3995:                                             ; preds = %3941
  %3996 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !87
  %3997 = shufflevector <1 x half> %3996, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %3998 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !87
  %3999 = shufflevector <1 x half> %3998, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4000 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !87
  %4001 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !87
  %4002 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !87
  %4003 = shufflevector <1 x half> %4002, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4004 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !87
  %4005 = shufflevector <1 x half> %4004, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4006 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !87
  %4007 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !87
  %4008 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !87
  %4009 = shufflevector <1 x half> %4008, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4010 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !87
  %4011 = shufflevector <1 x half> %4010, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4012 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !87
  %4013 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !87
  %4014 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !87
  %4015 = shufflevector <1 x half> %4014, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4016 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !87
  %4017 = shufflevector <1 x half> %4016, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4018 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !87
  %4019 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !87
  %4020 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !87
  %4021 = shufflevector <1 x half> %4020, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4022 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !87
  %4023 = shufflevector <1 x half> %4022, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4024 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !87
  %4025 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !87
  %4026 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !87
  %4027 = shufflevector <1 x half> %4026, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4028 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !87
  %4029 = shufflevector <1 x half> %4028, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4030 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !87
  %4031 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !87
  %4032 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !87
  %4033 = shufflevector <1 x half> %4032, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4034 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !87
  %4035 = shufflevector <1 x half> %4034, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4036 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !87
  %4037 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !87
  %4038 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !87
  %4039 = shufflevector <1 x half> %4038, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4040 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !87
  %4041 = shufflevector <1 x half> %4040, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4042 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !87
  %4043 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !87
  %4044 = fptrunc float %3989 to half, !dbg !92
  %4045 = fptrunc float %3988 to half, !dbg !92
  %4046 = fptrunc float %3987 to half, !dbg !92
  %4047 = fptrunc float %3986 to half, !dbg !92
  %4048 = fptrunc float %3985 to half, !dbg !92
  %4049 = fptrunc float %3984 to half, !dbg !92
  %4050 = fptrunc float %3983 to half, !dbg !92
  %4051 = fptrunc float %3982 to half, !dbg !92
  %4052 = fptrunc float %3981 to half, !dbg !92
  %4053 = fptrunc float %3980 to half, !dbg !92
  %4054 = fptrunc float %3979 to half, !dbg !92
  %4055 = fptrunc float %3978 to half, !dbg !92
  %4056 = fptrunc float %3977 to half, !dbg !92
  %4057 = fptrunc float %3976 to half, !dbg !92
  %4058 = fptrunc float %3975 to half, !dbg !92
  %4059 = fptrunc float %3974 to half, !dbg !92
  %4060 = insertelement <4 x half> poison, half %4059, i64 0, !dbg !93
  %4061 = insertelement <4 x half> %4060, half %4058, i64 1, !dbg !93
  %4062 = insertelement <4 x half> %4061, half %4057, i64 2, !dbg !93
  %4063 = insertelement <4 x half> %4062, half %4056, i64 3, !dbg !93
  %4064 = insertelement <4 x half> poison, half %4055, i64 0, !dbg !93
  %4065 = insertelement <4 x half> %4064, half %4054, i64 1, !dbg !93
  %4066 = insertelement <4 x half> %4065, half %4053, i64 2, !dbg !93
  %4067 = insertelement <4 x half> %4066, half %4052, i64 3, !dbg !93
  %4068 = insertelement <4 x half> poison, half %4051, i64 0, !dbg !93
  %4069 = insertelement <4 x half> %4068, half %4050, i64 1, !dbg !93
  %4070 = insertelement <4 x half> %4069, half %4049, i64 2, !dbg !93
  %4071 = insertelement <4 x half> %4070, half %4048, i64 3, !dbg !93
  %4072 = insertelement <4 x half> poison, half %4047, i64 0, !dbg !93
  %4073 = insertelement <4 x half> %4072, half %4046, i64 1, !dbg !93
  %4074 = insertelement <4 x half> %4073, half %4045, i64 2, !dbg !93
  %4075 = insertelement <4 x half> %4074, half %4044, i64 3, !dbg !93
  %4076 = shufflevector <1 x half> %4043, <1 x half> %4042, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4077 = shufflevector <4 x half> %4076, <4 x half> %4041, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4078 = shufflevector <4 x half> %4077, <4 x half> %4039, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4079 = shufflevector <1 x half> %4037, <1 x half> %4036, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4080 = shufflevector <4 x half> %4079, <4 x half> %4035, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4081 = shufflevector <4 x half> %4080, <4 x half> %4033, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4082 = shufflevector <1 x half> %4031, <1 x half> %4030, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4083 = shufflevector <4 x half> %4082, <4 x half> %4029, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4084 = shufflevector <4 x half> %4083, <4 x half> %4027, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4085 = shufflevector <1 x half> %4025, <1 x half> %4024, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4086 = shufflevector <4 x half> %4085, <4 x half> %4023, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4087 = shufflevector <4 x half> %4086, <4 x half> %4021, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4088 = shufflevector <1 x half> %4019, <1 x half> %4018, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4089 = shufflevector <4 x half> %4088, <4 x half> %4017, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4090 = shufflevector <4 x half> %4089, <4 x half> %4015, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4091 = shufflevector <1 x half> %4013, <1 x half> %4012, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4092 = shufflevector <4 x half> %4091, <4 x half> %4011, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4093 = shufflevector <4 x half> %4092, <4 x half> %4009, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4094 = shufflevector <1 x half> %4007, <1 x half> %4006, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4095 = shufflevector <4 x half> %4094, <4 x half> %4005, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4096 = shufflevector <4 x half> %4095, <4 x half> %4003, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4097 = shufflevector <1 x half> %4001, <1 x half> %4000, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4098 = shufflevector <4 x half> %4097, <4 x half> %3999, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4099 = shufflevector <4 x half> %4098, <4 x half> %3997, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4100 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3897, i64 0, !dbg !93
  %4101 = insertelement <16 x float> %4100, float %3896, i64 1, !dbg !93
  %4102 = insertelement <16 x float> %4101, float %3895, i64 2, !dbg !93
  %4103 = insertelement <16 x float> %4102, float %3894, i64 3, !dbg !93
  %4104 = insertelement <16 x float> %4103, float %3893, i64 4, !dbg !93
  %4105 = insertelement <16 x float> %4104, float %3892, i64 5, !dbg !93
  %4106 = insertelement <16 x float> %4105, float %3891, i64 6, !dbg !93
  %4107 = insertelement <16 x float> %4106, float %3890, i64 7, !dbg !93
  %4108 = insertelement <16 x float> %4107, float %3889, i64 8, !dbg !93
  %4109 = insertelement <16 x float> %4108, float %3888, i64 9, !dbg !93
  %4110 = insertelement <16 x float> %4109, float %3887, i64 10, !dbg !93
  %4111 = insertelement <16 x float> %4110, float %3886, i64 11, !dbg !93
  %4112 = insertelement <16 x float> %4111, float %3885, i64 12, !dbg !93
  %4113 = insertelement <16 x float> %4112, float %3884, i64 13, !dbg !93
  %4114 = insertelement <16 x float> %4113, float %3883, i64 14, !dbg !93
  %4115 = insertelement <16 x float> %4114, float %3882, i64 15, !dbg !93
  %4116 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4078, <4 x half> %4063, <16 x float> %4115, i32 0, i32 0, i32 0), !dbg !93
  %4117 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4081, <4 x half> %4067, <16 x float> %4116, i32 0, i32 0, i32 0), !dbg !93
  %4118 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4084, <4 x half> %4071, <16 x float> %4117, i32 0, i32 0, i32 0), !dbg !93
  %4119 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4087, <4 x half> %4075, <16 x float> %4118, i32 0, i32 0, i32 0), !dbg !93
  %4120 = extractelement <16 x float> %4119, i64 0, !dbg !93
  %4121 = extractelement <16 x float> %4119, i64 1, !dbg !93
  %4122 = extractelement <16 x float> %4119, i64 2, !dbg !93
  %4123 = extractelement <16 x float> %4119, i64 3, !dbg !93
  %4124 = extractelement <16 x float> %4119, i64 4, !dbg !93
  %4125 = extractelement <16 x float> %4119, i64 5, !dbg !93
  %4126 = extractelement <16 x float> %4119, i64 6, !dbg !93
  %4127 = extractelement <16 x float> %4119, i64 7, !dbg !93
  %4128 = extractelement <16 x float> %4119, i64 8, !dbg !93
  %4129 = extractelement <16 x float> %4119, i64 9, !dbg !93
  %4130 = extractelement <16 x float> %4119, i64 10, !dbg !93
  %4131 = extractelement <16 x float> %4119, i64 11, !dbg !93
  %4132 = extractelement <16 x float> %4119, i64 12, !dbg !93
  %4133 = extractelement <16 x float> %4119, i64 13, !dbg !93
  %4134 = extractelement <16 x float> %4119, i64 14, !dbg !93
  %4135 = extractelement <16 x float> %4119, i64 15, !dbg !93
  %4136 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3881, i64 0, !dbg !93
  %4137 = insertelement <16 x float> %4136, float %3880, i64 1, !dbg !93
  %4138 = insertelement <16 x float> %4137, float %3879, i64 2, !dbg !93
  %4139 = insertelement <16 x float> %4138, float %3878, i64 3, !dbg !93
  %4140 = insertelement <16 x float> %4139, float %3877, i64 4, !dbg !93
  %4141 = insertelement <16 x float> %4140, float %3876, i64 5, !dbg !93
  %4142 = insertelement <16 x float> %4141, float %3875, i64 6, !dbg !93
  %4143 = insertelement <16 x float> %4142, float %3874, i64 7, !dbg !93
  %4144 = insertelement <16 x float> %4143, float %3873, i64 8, !dbg !93
  %4145 = insertelement <16 x float> %4144, float %3872, i64 9, !dbg !93
  %4146 = insertelement <16 x float> %4145, float %3871, i64 10, !dbg !93
  %4147 = insertelement <16 x float> %4146, float %3870, i64 11, !dbg !93
  %4148 = insertelement <16 x float> %4147, float %3869, i64 12, !dbg !93
  %4149 = insertelement <16 x float> %4148, float %3868, i64 13, !dbg !93
  %4150 = insertelement <16 x float> %4149, float %3867, i64 14, !dbg !93
  %4151 = insertelement <16 x float> %4150, float %3866, i64 15, !dbg !93
  %4152 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4090, <4 x half> %4063, <16 x float> %4151, i32 0, i32 0, i32 0), !dbg !93
  %4153 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4093, <4 x half> %4067, <16 x float> %4152, i32 0, i32 0, i32 0), !dbg !93
  %4154 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4096, <4 x half> %4071, <16 x float> %4153, i32 0, i32 0, i32 0), !dbg !93
  %4155 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4099, <4 x half> %4075, <16 x float> %4154, i32 0, i32 0, i32 0), !dbg !93
  %4156 = extractelement <16 x float> %4155, i64 0, !dbg !93
  %4157 = extractelement <16 x float> %4155, i64 1, !dbg !93
  %4158 = extractelement <16 x float> %4155, i64 2, !dbg !93
  %4159 = extractelement <16 x float> %4155, i64 3, !dbg !93
  %4160 = extractelement <16 x float> %4155, i64 4, !dbg !93
  %4161 = extractelement <16 x float> %4155, i64 5, !dbg !93
  %4162 = extractelement <16 x float> %4155, i64 6, !dbg !93
  %4163 = extractelement <16 x float> %4155, i64 7, !dbg !93
  %4164 = extractelement <16 x float> %4155, i64 8, !dbg !93
  %4165 = extractelement <16 x float> %4155, i64 9, !dbg !93
  %4166 = extractelement <16 x float> %4155, i64 10, !dbg !93
  %4167 = extractelement <16 x float> %4155, i64 11, !dbg !93
  %4168 = extractelement <16 x float> %4155, i64 12, !dbg !93
  %4169 = extractelement <16 x float> %4155, i64 13, !dbg !93
  %4170 = extractelement <16 x float> %4155, i64 14, !dbg !93
  %4171 = extractelement <16 x float> %4155, i64 15, !dbg !93
  br label %4172, !dbg !93

4172:                                             ; preds = %3995, %3941
  %.pn536 = phi float [ %4120, %3995 ], [ %3897, %3941 ]
  %.pn534 = phi float [ %4121, %3995 ], [ %3896, %3941 ]
  %.pn532 = phi float [ %4122, %3995 ], [ %3895, %3941 ]
  %.pn530 = phi float [ %4123, %3995 ], [ %3894, %3941 ]
  %.pn528 = phi float [ %4124, %3995 ], [ %3893, %3941 ]
  %.pn526 = phi float [ %4125, %3995 ], [ %3892, %3941 ]
  %.pn524 = phi float [ %4126, %3995 ], [ %3891, %3941 ]
  %.pn522 = phi float [ %4127, %3995 ], [ %3890, %3941 ]
  %.pn520 = phi float [ %4128, %3995 ], [ %3889, %3941 ]
  %.pn518 = phi float [ %4129, %3995 ], [ %3888, %3941 ]
  %.pn516 = phi float [ %4130, %3995 ], [ %3887, %3941 ]
  %.pn514 = phi float [ %4131, %3995 ], [ %3886, %3941 ]
  %.pn512 = phi float [ %4132, %3995 ], [ %3885, %3941 ]
  %.pn510 = phi float [ %4133, %3995 ], [ %3884, %3941 ]
  %.pn508 = phi float [ %4134, %3995 ], [ %3883, %3941 ]
  %.pn506 = phi float [ %4135, %3995 ], [ %3882, %3941 ]
  %.pn504 = phi float [ %4156, %3995 ], [ %3881, %3941 ]
  %.pn502 = phi float [ %4157, %3995 ], [ %3880, %3941 ]
  %.pn500 = phi float [ %4158, %3995 ], [ %3879, %3941 ]
  %.pn498 = phi float [ %4159, %3995 ], [ %3878, %3941 ]
  %.pn496 = phi float [ %4160, %3995 ], [ %3877, %3941 ]
  %.pn494 = phi float [ %4161, %3995 ], [ %3876, %3941 ]
  %.pn492 = phi float [ %4162, %3995 ], [ %3875, %3941 ]
  %.pn490 = phi float [ %4163, %3995 ], [ %3874, %3941 ]
  %.pn488 = phi float [ %4164, %3995 ], [ %3873, %3941 ]
  %.pn486 = phi float [ %4165, %3995 ], [ %3872, %3941 ]
  %.pn484 = phi float [ %4166, %3995 ], [ %3871, %3941 ]
  %.pn482 = phi float [ %4167, %3995 ], [ %3870, %3941 ]
  %.pn480 = phi float [ %4168, %3995 ], [ %3869, %3941 ]
  %.pn478 = phi float [ %4169, %3995 ], [ %3868, %3941 ]
  %.pn476 = phi float [ %4170, %3995 ], [ %3867, %3941 ]
  %.pn474 = phi float [ %4171, %3995 ], [ %3866, %3941 ]
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %4173 = shufflevector <2 x half> %2717, <2 x half> %2718, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %4173, ptr addrspace(3) %185, align 8, !dbg !94
  %4174 = shufflevector <2 x half> %2719, <2 x half> %2720, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %4174, ptr addrspace(3) %192, align 8, !dbg !94
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  br i1 %958, label %4175, label %4200, !dbg !95

4175:                                             ; preds = %4172
  %4176 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !94
  %4177 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !94
  %4178 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !94
  %4179 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !94
  %4180 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !94
  %4181 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !94
  %4182 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !94
  %4183 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !94
  %4184 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4183, <4 x half> %309, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !95
  %4185 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4182, <4 x half> %310, <16 x float> %4184, i32 0, i32 0, i32 0), !dbg !95
  %4186 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4181, <4 x half> %311, <16 x float> %4185, i32 0, i32 0, i32 0), !dbg !95
  %4187 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4180, <4 x half> %312, <16 x float> %4186, i32 0, i32 0, i32 0), !dbg !95
  %4188 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4179, <4 x half> %313, <16 x float> %4187, i32 0, i32 0, i32 0), !dbg !95
  %4189 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4178, <4 x half> %314, <16 x float> %4188, i32 0, i32 0, i32 0), !dbg !95
  %4190 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4177, <4 x half> %315, <16 x float> %4189, i32 0, i32 0, i32 0), !dbg !95
  %4191 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4176, <4 x half> %316, <16 x float> %4190, i32 0, i32 0, i32 0), !dbg !95
  %4192 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !74
  %4193 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !74
  %4194 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !74
  %4195 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !74
  %4196 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !74
  %4197 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !74
  %4198 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !74
  %4199 = shufflevector <16 x float> %4191, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !74
  br label %4200, !dbg !95

4200:                                             ; preds = %4175, %4172
  %4201 = phi <2 x float> [ %4192, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4202 = phi <2 x float> [ %4193, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4203 = phi <2 x float> [ %4194, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4204 = phi <2 x float> [ %4195, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4205 = phi <2 x float> [ %4196, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4206 = phi <2 x float> [ %4197, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4207 = phi <2 x float> [ %4198, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  %4208 = phi <2 x float> [ %4199, %4175 ], [ zeroinitializer, %4172 ], !dbg !74
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %4209 = shufflevector <2 x half> %2713, <2 x half> %2714, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4210 = shufflevector <2 x half> %2715, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4211 = shufflevector <8 x half> %4209, <8 x half> %4210, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !99
  %4212 = shufflevector <2 x half> %2716, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4213 = shufflevector <8 x half> %4211, <8 x half> %4212, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !99
  store <8 x half> %4213, ptr addrspace(3) %2880, align 16, !dbg !99
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  br i1 %958, label %4214, label %4395, !dbg !100

4214:                                             ; preds = %4200
  %4215 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !99
  %4216 = shufflevector <1 x half> %4215, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4217 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !99
  %4218 = shufflevector <1 x half> %4217, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4219 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !99
  %4220 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !99
  %4221 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !99
  %4222 = shufflevector <1 x half> %4221, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4223 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !99
  %4224 = shufflevector <1 x half> %4223, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4225 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !99
  %4226 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !99
  %4227 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !99
  %4228 = shufflevector <1 x half> %4227, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4229 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !99
  %4230 = shufflevector <1 x half> %4229, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4231 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !99
  %4232 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !99
  %4233 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !99
  %4234 = shufflevector <1 x half> %4233, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4235 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !99
  %4236 = shufflevector <1 x half> %4235, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4237 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !99
  %4238 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !99
  %4239 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !99
  %4240 = shufflevector <1 x half> %4239, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4241 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !99
  %4242 = shufflevector <1 x half> %4241, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4243 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !99
  %4244 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !99
  %4245 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !99
  %4246 = shufflevector <1 x half> %4245, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4247 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !99
  %4248 = shufflevector <1 x half> %4247, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4249 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !99
  %4250 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !99
  %4251 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !99
  %4252 = shufflevector <1 x half> %4251, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4253 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !99
  %4254 = shufflevector <1 x half> %4253, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4255 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !99
  %4256 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !99
  %4257 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !99
  %4258 = shufflevector <1 x half> %4257, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4259 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !99
  %4260 = shufflevector <1 x half> %4259, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4261 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !99
  %4262 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !99
  %4263 = fsub <2 x float> %4202, %2706, !dbg !96
  %4264 = insertelement <2 x float> poison, float %3988, i64 0, !dbg !97
  %4265 = insertelement <2 x float> %4264, float %3989, i64 1, !dbg !97
  %4266 = fmul <2 x float> %4265, %4263, !dbg !97
  %4267 = fptrunc <2 x float> %4266 to <2 x half>, !dbg !98
  %4268 = fsub <2 x float> %4201, %2705, !dbg !96
  %4269 = insertelement <2 x float> poison, float %3986, i64 0, !dbg !97
  %4270 = insertelement <2 x float> %4269, float %3987, i64 1, !dbg !97
  %4271 = fmul <2 x float> %4270, %4268, !dbg !97
  %4272 = fptrunc <2 x float> %4271 to <2 x half>, !dbg !98
  %4273 = fsub <2 x float> %4204, %2708, !dbg !96
  %4274 = insertelement <2 x float> poison, float %3984, i64 0, !dbg !97
  %4275 = insertelement <2 x float> %4274, float %3985, i64 1, !dbg !97
  %4276 = fmul <2 x float> %4275, %4273, !dbg !97
  %4277 = fptrunc <2 x float> %4276 to <2 x half>, !dbg !98
  %4278 = fsub <2 x float> %4203, %2707, !dbg !96
  %4279 = insertelement <2 x float> poison, float %3982, i64 0, !dbg !97
  %4280 = insertelement <2 x float> %4279, float %3983, i64 1, !dbg !97
  %4281 = fmul <2 x float> %4280, %4278, !dbg !97
  %4282 = fptrunc <2 x float> %4281 to <2 x half>, !dbg !98
  %4283 = fsub <2 x float> %4206, %2710, !dbg !96
  %4284 = insertelement <2 x float> poison, float %3980, i64 0, !dbg !97
  %4285 = insertelement <2 x float> %4284, float %3981, i64 1, !dbg !97
  %4286 = fmul <2 x float> %4285, %4283, !dbg !97
  %4287 = fptrunc <2 x float> %4286 to <2 x half>, !dbg !98
  %4288 = fsub <2 x float> %4205, %2709, !dbg !96
  %4289 = insertelement <2 x float> poison, float %3978, i64 0, !dbg !97
  %4290 = insertelement <2 x float> %4289, float %3979, i64 1, !dbg !97
  %4291 = fmul <2 x float> %4290, %4288, !dbg !97
  %4292 = fptrunc <2 x float> %4291 to <2 x half>, !dbg !98
  %4293 = fsub <2 x float> %4208, %2712, !dbg !96
  %4294 = insertelement <2 x float> poison, float %3976, i64 0, !dbg !97
  %4295 = insertelement <2 x float> %4294, float %3977, i64 1, !dbg !97
  %4296 = fmul <2 x float> %4295, %4293, !dbg !97
  %4297 = fptrunc <2 x float> %4296 to <2 x half>, !dbg !98
  %4298 = fsub <2 x float> %4207, %2711, !dbg !96
  %4299 = insertelement <2 x float> poison, float %3974, i64 0, !dbg !97
  %4300 = insertelement <2 x float> %4299, float %3975, i64 1, !dbg !97
  %4301 = fmul <2 x float> %4300, %4298, !dbg !97
  %4302 = fptrunc <2 x float> %4301 to <2 x half>, !dbg !98
  %4303 = shufflevector <2 x half> %4302, <2 x half> %4297, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4304 = shufflevector <2 x half> %4292, <2 x half> %4287, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4305 = shufflevector <2 x half> %4282, <2 x half> %4277, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4306 = shufflevector <2 x half> %4272, <2 x half> %4267, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4307 = shufflevector <1 x half> %4262, <1 x half> %4261, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4308 = shufflevector <4 x half> %4307, <4 x half> %4260, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4309 = shufflevector <4 x half> %4308, <4 x half> %4258, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4310 = shufflevector <1 x half> %4256, <1 x half> %4255, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4311 = shufflevector <4 x half> %4310, <4 x half> %4254, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4312 = shufflevector <4 x half> %4311, <4 x half> %4252, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4313 = shufflevector <1 x half> %4250, <1 x half> %4249, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4314 = shufflevector <4 x half> %4313, <4 x half> %4248, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4315 = shufflevector <4 x half> %4314, <4 x half> %4246, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4316 = shufflevector <1 x half> %4244, <1 x half> %4243, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4317 = shufflevector <4 x half> %4316, <4 x half> %4242, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4318 = shufflevector <4 x half> %4317, <4 x half> %4240, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4319 = shufflevector <1 x half> %4238, <1 x half> %4237, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4320 = shufflevector <4 x half> %4319, <4 x half> %4236, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4321 = shufflevector <4 x half> %4320, <4 x half> %4234, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4322 = shufflevector <1 x half> %4232, <1 x half> %4231, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4323 = shufflevector <4 x half> %4322, <4 x half> %4230, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4324 = shufflevector <4 x half> %4323, <4 x half> %4228, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4325 = shufflevector <1 x half> %4226, <1 x half> %4225, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4326 = shufflevector <4 x half> %4325, <4 x half> %4224, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4327 = shufflevector <4 x half> %4326, <4 x half> %4222, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4328 = shufflevector <1 x half> %4220, <1 x half> %4219, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4329 = shufflevector <4 x half> %4328, <4 x half> %4218, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4330 = shufflevector <4 x half> %4329, <4 x half> %4216, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4331 = insertelement <16 x float> poison, float %3865, i64 0, !dbg !100
  %4332 = shufflevector <2 x float> %3898, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4333 = shufflevector <16 x float> %4331, <16 x float> %4332, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4334 = insertelement <16 x float> %4333, float %3864, i64 3, !dbg !100
  %4335 = insertelement <16 x float> %4334, float %3863, i64 4, !dbg !100
  %4336 = shufflevector <2 x float> %3899, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4337 = shufflevector <16 x float> %4335, <16 x float> %4336, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4338 = insertelement <16 x float> %4337, float %3862, i64 7, !dbg !100
  %4339 = insertelement <16 x float> %4338, float %3861, i64 8, !dbg !100
  %4340 = shufflevector <2 x float> %3900, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4341 = shufflevector <16 x float> %4339, <16 x float> %4340, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4342 = insertelement <16 x float> %4341, float %3860, i64 11, !dbg !100
  %4343 = insertelement <16 x float> %4342, float %3859, i64 12, !dbg !100
  %4344 = shufflevector <2 x float> %3901, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4345 = shufflevector <16 x float> %4343, <16 x float> %4344, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %4346 = insertelement <16 x float> %4345, float %3858, i64 15, !dbg !100
  %4347 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4309, <4 x half> %4303, <16 x float> %4346, i32 0, i32 0, i32 0), !dbg !100
  %4348 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4312, <4 x half> %4304, <16 x float> %4347, i32 0, i32 0, i32 0), !dbg !100
  %4349 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4315, <4 x half> %4305, <16 x float> %4348, i32 0, i32 0, i32 0), !dbg !100
  %4350 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4318, <4 x half> %4306, <16 x float> %4349, i32 0, i32 0, i32 0), !dbg !100
  %4351 = extractelement <16 x float> %4350, i64 0, !dbg !100
  %4352 = extractelement <16 x float> %4350, i64 3, !dbg !100
  %4353 = extractelement <16 x float> %4350, i64 4, !dbg !100
  %4354 = extractelement <16 x float> %4350, i64 7, !dbg !100
  %4355 = extractelement <16 x float> %4350, i64 8, !dbg !100
  %4356 = extractelement <16 x float> %4350, i64 11, !dbg !100
  %4357 = extractelement <16 x float> %4350, i64 12, !dbg !100
  %4358 = extractelement <16 x float> %4350, i64 15, !dbg !100
  %4359 = insertelement <16 x float> poison, float %3857, i64 0, !dbg !100
  %4360 = shufflevector <2 x float> %3902, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4361 = shufflevector <16 x float> %4359, <16 x float> %4360, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4362 = insertelement <16 x float> %4361, float %3856, i64 3, !dbg !100
  %4363 = insertelement <16 x float> %4362, float %3855, i64 4, !dbg !100
  %4364 = shufflevector <2 x float> %3903, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4365 = shufflevector <16 x float> %4363, <16 x float> %4364, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4366 = insertelement <16 x float> %4365, float %3854, i64 7, !dbg !100
  %4367 = insertelement <16 x float> %4366, float %3853, i64 8, !dbg !100
  %4368 = shufflevector <2 x float> %3904, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4369 = shufflevector <16 x float> %4367, <16 x float> %4368, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4370 = insertelement <16 x float> %4369, float %3852, i64 11, !dbg !100
  %4371 = insertelement <16 x float> %4370, float %3851, i64 12, !dbg !100
  %4372 = shufflevector <2 x float> %3905, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4373 = shufflevector <16 x float> %4371, <16 x float> %4372, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %4374 = insertelement <16 x float> %4373, float %3850, i64 15, !dbg !100
  %4375 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4321, <4 x half> %4303, <16 x float> %4374, i32 0, i32 0, i32 0), !dbg !100
  %4376 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4324, <4 x half> %4304, <16 x float> %4375, i32 0, i32 0, i32 0), !dbg !100
  %4377 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4327, <4 x half> %4305, <16 x float> %4376, i32 0, i32 0, i32 0), !dbg !100
  %4378 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4330, <4 x half> %4306, <16 x float> %4377, i32 0, i32 0, i32 0), !dbg !100
  %4379 = extractelement <16 x float> %4378, i64 0, !dbg !100
  %4380 = extractelement <16 x float> %4378, i64 3, !dbg !100
  %4381 = extractelement <16 x float> %4378, i64 4, !dbg !100
  %4382 = extractelement <16 x float> %4378, i64 7, !dbg !100
  %4383 = extractelement <16 x float> %4378, i64 8, !dbg !100
  %4384 = extractelement <16 x float> %4378, i64 11, !dbg !100
  %4385 = extractelement <16 x float> %4378, i64 12, !dbg !100
  %4386 = extractelement <16 x float> %4378, i64 15, !dbg !100
  %4387 = shufflevector <16 x float> %4350, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %4388 = shufflevector <16 x float> %4350, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %4389 = shufflevector <16 x float> %4350, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %4390 = shufflevector <16 x float> %4350, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %4391 = shufflevector <16 x float> %4378, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %4392 = shufflevector <16 x float> %4378, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %4393 = shufflevector <16 x float> %4378, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %4394 = shufflevector <16 x float> %4378, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %4395, !dbg !100

4395:                                             ; preds = %4214, %4200
  %4396 = phi float [ %4386, %4214 ], [ %3850, %4200 ]
  %4397 = phi float [ %4385, %4214 ], [ %3851, %4200 ]
  %4398 = phi float [ %4384, %4214 ], [ %3852, %4200 ]
  %4399 = phi float [ %4383, %4214 ], [ %3853, %4200 ]
  %4400 = phi float [ %4382, %4214 ], [ %3854, %4200 ]
  %4401 = phi float [ %4381, %4214 ], [ %3855, %4200 ]
  %4402 = phi float [ %4380, %4214 ], [ %3856, %4200 ]
  %4403 = phi float [ %4379, %4214 ], [ %3857, %4200 ]
  %4404 = phi float [ %4358, %4214 ], [ %3858, %4200 ]
  %4405 = phi float [ %4357, %4214 ], [ %3859, %4200 ]
  %4406 = phi float [ %4356, %4214 ], [ %3860, %4200 ]
  %4407 = phi float [ %4355, %4214 ], [ %3861, %4200 ]
  %4408 = phi float [ %4354, %4214 ], [ %3862, %4200 ]
  %4409 = phi float [ %4353, %4214 ], [ %3863, %4200 ]
  %4410 = phi float [ %4352, %4214 ], [ %3864, %4200 ]
  %4411 = phi float [ %4351, %4214 ], [ %3865, %4200 ]
  %4412 = phi float [ %.pn474, %4214 ], [ %3866, %4200 ]
  %4413 = phi float [ %.pn476, %4214 ], [ %3867, %4200 ]
  %4414 = phi float [ %.pn478, %4214 ], [ %3868, %4200 ]
  %4415 = phi float [ %.pn480, %4214 ], [ %3869, %4200 ]
  %4416 = phi float [ %.pn482, %4214 ], [ %3870, %4200 ]
  %4417 = phi float [ %.pn484, %4214 ], [ %3871, %4200 ]
  %4418 = phi float [ %.pn486, %4214 ], [ %3872, %4200 ]
  %4419 = phi float [ %.pn488, %4214 ], [ %3873, %4200 ]
  %4420 = phi float [ %.pn490, %4214 ], [ %3874, %4200 ]
  %4421 = phi float [ %.pn492, %4214 ], [ %3875, %4200 ]
  %4422 = phi float [ %.pn494, %4214 ], [ %3876, %4200 ]
  %4423 = phi float [ %.pn496, %4214 ], [ %3877, %4200 ]
  %4424 = phi float [ %.pn498, %4214 ], [ %3878, %4200 ]
  %4425 = phi float [ %.pn500, %4214 ], [ %3879, %4200 ]
  %4426 = phi float [ %.pn502, %4214 ], [ %3880, %4200 ]
  %4427 = phi float [ %.pn504, %4214 ], [ %3881, %4200 ]
  %4428 = phi float [ %.pn506, %4214 ], [ %3882, %4200 ]
  %4429 = phi float [ %.pn508, %4214 ], [ %3883, %4200 ]
  %4430 = phi float [ %.pn510, %4214 ], [ %3884, %4200 ]
  %4431 = phi float [ %.pn512, %4214 ], [ %3885, %4200 ]
  %4432 = phi float [ %.pn514, %4214 ], [ %3886, %4200 ]
  %4433 = phi float [ %.pn516, %4214 ], [ %3887, %4200 ]
  %4434 = phi float [ %.pn518, %4214 ], [ %3888, %4200 ]
  %4435 = phi float [ %.pn520, %4214 ], [ %3889, %4200 ]
  %4436 = phi float [ %.pn522, %4214 ], [ %3890, %4200 ]
  %4437 = phi float [ %.pn524, %4214 ], [ %3891, %4200 ]
  %4438 = phi float [ %.pn526, %4214 ], [ %3892, %4200 ]
  %4439 = phi float [ %.pn528, %4214 ], [ %3893, %4200 ]
  %4440 = phi float [ %.pn530, %4214 ], [ %3894, %4200 ]
  %4441 = phi float [ %.pn532, %4214 ], [ %3895, %4200 ]
  %4442 = phi float [ %.pn534, %4214 ], [ %3896, %4200 ]
  %4443 = phi float [ %.pn536, %4214 ], [ %3897, %4200 ]
  %4444 = phi <2 x float> [ %4387, %4214 ], [ %3898, %4200 ]
  %4445 = phi <2 x float> [ %4388, %4214 ], [ %3899, %4200 ]
  %4446 = phi <2 x float> [ %4389, %4214 ], [ %3900, %4200 ]
  %4447 = phi <2 x float> [ %4390, %4214 ], [ %3901, %4200 ]
  %4448 = phi <2 x float> [ %4391, %4214 ], [ %3902, %4200 ]
  %4449 = phi <2 x float> [ %4392, %4214 ], [ %3903, %4200 ]
  %4450 = phi <2 x float> [ %4393, %4214 ], [ %3904, %4200 ]
  %4451 = phi <2 x float> [ %4394, %4214 ], [ %3905, %4200 ]
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %4452 = shufflevector <2 x half> %2697, <2 x half> %2698, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %4452, ptr addrspace(3) %185, align 8, !dbg !84
  %4453 = shufflevector <2 x half> %2699, <2 x half> %2700, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !84
  store <4 x half> %4453, ptr addrspace(3) %192, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  br i1 %1014, label %4454, label %4487, !dbg !89

4454:                                             ; preds = %4395
  %4455 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !84
  %4456 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !84
  %4457 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !84
  %4458 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !84
  %4459 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !84
  %4460 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !84
  %4461 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !84
  %4462 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !84
  %4463 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4462, <4 x half> %250, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !89
  %4464 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4461, <4 x half> %252, <16 x float> %4463, i32 0, i32 0, i32 0), !dbg !89
  %4465 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4460, <4 x half> %254, <16 x float> %4464, i32 0, i32 0, i32 0), !dbg !89
  %4466 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4459, <4 x half> %256, <16 x float> %4465, i32 0, i32 0, i32 0), !dbg !89
  %4467 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4458, <4 x half> %258, <16 x float> %4466, i32 0, i32 0, i32 0), !dbg !89
  %4468 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4457, <4 x half> %260, <16 x float> %4467, i32 0, i32 0, i32 0), !dbg !89
  %4469 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4456, <4 x half> %262, <16 x float> %4468, i32 0, i32 0, i32 0), !dbg !89
  %4470 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4455, <4 x half> %264, <16 x float> %4469, i32 0, i32 0, i32 0), !dbg !89
  %4471 = extractelement <16 x float> %4470, i64 0, !dbg !89
  %4472 = extractelement <16 x float> %4470, i64 1, !dbg !89
  %4473 = extractelement <16 x float> %4470, i64 2, !dbg !89
  %4474 = extractelement <16 x float> %4470, i64 3, !dbg !89
  %4475 = extractelement <16 x float> %4470, i64 4, !dbg !89
  %4476 = extractelement <16 x float> %4470, i64 5, !dbg !89
  %4477 = extractelement <16 x float> %4470, i64 6, !dbg !89
  %4478 = extractelement <16 x float> %4470, i64 7, !dbg !89
  %4479 = extractelement <16 x float> %4470, i64 8, !dbg !89
  %4480 = extractelement <16 x float> %4470, i64 9, !dbg !89
  %4481 = extractelement <16 x float> %4470, i64 10, !dbg !89
  %4482 = extractelement <16 x float> %4470, i64 11, !dbg !89
  %4483 = extractelement <16 x float> %4470, i64 12, !dbg !89
  %4484 = extractelement <16 x float> %4470, i64 13, !dbg !89
  %4485 = extractelement <16 x float> %4470, i64 14, !dbg !89
  %4486 = extractelement <16 x float> %4470, i64 15, !dbg !89
  br label %4487, !dbg !89

4487:                                             ; preds = %4454, %4395
  %4488 = phi float [ %4471, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4489 = phi float [ %4472, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4490 = phi float [ %4473, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4491 = phi float [ %4474, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4492 = phi float [ %4475, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4493 = phi float [ %4476, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4494 = phi float [ %4477, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4495 = phi float [ %4478, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4496 = phi float [ %4479, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4497 = phi float [ %4480, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4498 = phi float [ %4481, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4499 = phi float [ %4482, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4500 = phi float [ %4483, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4501 = phi float [ %4484, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4502 = phi float [ %4485, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4503 = phi float [ %4486, %4454 ], [ 0.000000e+00, %4395 ], !dbg !74
  %4504 = fsub float %4488, %.pn274.lcssa, !dbg !90
  %4505 = fsub float %4489, %.pn272.lcssa, !dbg !90
  %4506 = fsub float %4490, %.pn270.lcssa, !dbg !90
  %4507 = fsub float %4491, %.pn268.lcssa, !dbg !90
  %4508 = fsub float %4492, %.pn266.lcssa, !dbg !90
  %4509 = fsub float %4493, %.pn264.lcssa, !dbg !90
  %4510 = fsub float %4494, %.pn262.lcssa, !dbg !90
  %4511 = fsub float %4495, %.pn260.lcssa, !dbg !90
  %4512 = fsub float %4496, %.pn258.lcssa, !dbg !90
  %4513 = fsub float %4497, %.pn256.lcssa, !dbg !90
  %4514 = fsub float %4498, %.pn254.lcssa, !dbg !90
  %4515 = fsub float %4499, %.pn252.lcssa, !dbg !90
  %4516 = fsub float %4500, %.pn250.lcssa, !dbg !90
  %4517 = fsub float %4501, %.pn248.lcssa, !dbg !90
  %4518 = fsub float %4502, %.pn246.lcssa, !dbg !90
  %4519 = fsub float %4503, %.pn244.lcssa, !dbg !90
  %4520 = tail call float @llvm.amdgcn.exp2.f32(float %4504), !dbg !91
  %4521 = tail call float @llvm.amdgcn.exp2.f32(float %4505), !dbg !91
  %4522 = tail call float @llvm.amdgcn.exp2.f32(float %4506), !dbg !91
  %4523 = tail call float @llvm.amdgcn.exp2.f32(float %4507), !dbg !91
  %4524 = tail call float @llvm.amdgcn.exp2.f32(float %4508), !dbg !91
  %4525 = tail call float @llvm.amdgcn.exp2.f32(float %4509), !dbg !91
  %4526 = tail call float @llvm.amdgcn.exp2.f32(float %4510), !dbg !91
  %4527 = tail call float @llvm.amdgcn.exp2.f32(float %4511), !dbg !91
  %4528 = tail call float @llvm.amdgcn.exp2.f32(float %4512), !dbg !91
  %4529 = tail call float @llvm.amdgcn.exp2.f32(float %4513), !dbg !91
  %4530 = tail call float @llvm.amdgcn.exp2.f32(float %4514), !dbg !91
  %4531 = tail call float @llvm.amdgcn.exp2.f32(float %4515), !dbg !91
  %4532 = tail call float @llvm.amdgcn.exp2.f32(float %4516), !dbg !91
  %4533 = tail call float @llvm.amdgcn.exp2.f32(float %4517), !dbg !91
  %4534 = tail call float @llvm.amdgcn.exp2.f32(float %4518), !dbg !91
  %4535 = tail call float @llvm.amdgcn.exp2.f32(float %4519), !dbg !91
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  %4536 = shufflevector <2 x half> %2701, <2 x half> %2703, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %4537 = shufflevector <2 x half> %2704, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %4538 = shufflevector <8 x half> %4536, <8 x half> %4537, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !87
  %4539 = shufflevector <2 x half> %2702, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !87
  %4540 = shufflevector <8 x half> %4538, <8 x half> %4539, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !87
  store <8 x half> %4540, ptr addrspace(3) %2880, align 16, !dbg !87
  fence syncscope("workgroup") release, !dbg !87
  tail call void @llvm.amdgcn.s.barrier(), !dbg !87
  fence syncscope("workgroup") acquire, !dbg !87
  br i1 %1014, label %4541, label %4718, !dbg !93

4541:                                             ; preds = %4487
  %4542 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !87
  %4543 = shufflevector <1 x half> %4542, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4544 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !87
  %4545 = shufflevector <1 x half> %4544, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4546 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !87
  %4547 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !87
  %4548 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !87
  %4549 = shufflevector <1 x half> %4548, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4550 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !87
  %4551 = shufflevector <1 x half> %4550, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4552 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !87
  %4553 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !87
  %4554 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !87
  %4555 = shufflevector <1 x half> %4554, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4556 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !87
  %4557 = shufflevector <1 x half> %4556, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4558 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !87
  %4559 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !87
  %4560 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !87
  %4561 = shufflevector <1 x half> %4560, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4562 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !87
  %4563 = shufflevector <1 x half> %4562, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4564 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !87
  %4565 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !87
  %4566 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !87
  %4567 = shufflevector <1 x half> %4566, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4568 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !87
  %4569 = shufflevector <1 x half> %4568, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4570 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !87
  %4571 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !87
  %4572 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !87
  %4573 = shufflevector <1 x half> %4572, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4574 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !87
  %4575 = shufflevector <1 x half> %4574, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4576 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !87
  %4577 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !87
  %4578 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !87
  %4579 = shufflevector <1 x half> %4578, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4580 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !87
  %4581 = shufflevector <1 x half> %4580, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4582 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !87
  %4583 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !87
  %4584 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !87
  %4585 = shufflevector <1 x half> %4584, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4586 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !87
  %4587 = shufflevector <1 x half> %4586, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4588 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !87
  %4589 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !87
  %4590 = fptrunc float %4535 to half, !dbg !92
  %4591 = fptrunc float %4534 to half, !dbg !92
  %4592 = fptrunc float %4533 to half, !dbg !92
  %4593 = fptrunc float %4532 to half, !dbg !92
  %4594 = fptrunc float %4531 to half, !dbg !92
  %4595 = fptrunc float %4530 to half, !dbg !92
  %4596 = fptrunc float %4529 to half, !dbg !92
  %4597 = fptrunc float %4528 to half, !dbg !92
  %4598 = fptrunc float %4527 to half, !dbg !92
  %4599 = fptrunc float %4526 to half, !dbg !92
  %4600 = fptrunc float %4525 to half, !dbg !92
  %4601 = fptrunc float %4524 to half, !dbg !92
  %4602 = fptrunc float %4523 to half, !dbg !92
  %4603 = fptrunc float %4522 to half, !dbg !92
  %4604 = fptrunc float %4521 to half, !dbg !92
  %4605 = fptrunc float %4520 to half, !dbg !92
  %4606 = insertelement <4 x half> poison, half %4605, i64 0, !dbg !93
  %4607 = insertelement <4 x half> %4606, half %4604, i64 1, !dbg !93
  %4608 = insertelement <4 x half> %4607, half %4603, i64 2, !dbg !93
  %4609 = insertelement <4 x half> %4608, half %4602, i64 3, !dbg !93
  %4610 = insertelement <4 x half> poison, half %4601, i64 0, !dbg !93
  %4611 = insertelement <4 x half> %4610, half %4600, i64 1, !dbg !93
  %4612 = insertelement <4 x half> %4611, half %4599, i64 2, !dbg !93
  %4613 = insertelement <4 x half> %4612, half %4598, i64 3, !dbg !93
  %4614 = insertelement <4 x half> poison, half %4597, i64 0, !dbg !93
  %4615 = insertelement <4 x half> %4614, half %4596, i64 1, !dbg !93
  %4616 = insertelement <4 x half> %4615, half %4595, i64 2, !dbg !93
  %4617 = insertelement <4 x half> %4616, half %4594, i64 3, !dbg !93
  %4618 = insertelement <4 x half> poison, half %4593, i64 0, !dbg !93
  %4619 = insertelement <4 x half> %4618, half %4592, i64 1, !dbg !93
  %4620 = insertelement <4 x half> %4619, half %4591, i64 2, !dbg !93
  %4621 = insertelement <4 x half> %4620, half %4590, i64 3, !dbg !93
  %4622 = shufflevector <1 x half> %4589, <1 x half> %4588, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4623 = shufflevector <4 x half> %4622, <4 x half> %4587, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4624 = shufflevector <4 x half> %4623, <4 x half> %4585, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4625 = shufflevector <1 x half> %4583, <1 x half> %4582, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4626 = shufflevector <4 x half> %4625, <4 x half> %4581, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4627 = shufflevector <4 x half> %4626, <4 x half> %4579, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4628 = shufflevector <1 x half> %4577, <1 x half> %4576, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4629 = shufflevector <4 x half> %4628, <4 x half> %4575, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4630 = shufflevector <4 x half> %4629, <4 x half> %4573, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4631 = shufflevector <1 x half> %4571, <1 x half> %4570, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4632 = shufflevector <4 x half> %4631, <4 x half> %4569, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4633 = shufflevector <4 x half> %4632, <4 x half> %4567, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4634 = shufflevector <1 x half> %4565, <1 x half> %4564, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4635 = shufflevector <4 x half> %4634, <4 x half> %4563, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4636 = shufflevector <4 x half> %4635, <4 x half> %4561, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4637 = shufflevector <1 x half> %4559, <1 x half> %4558, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4638 = shufflevector <4 x half> %4637, <4 x half> %4557, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4639 = shufflevector <4 x half> %4638, <4 x half> %4555, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4640 = shufflevector <1 x half> %4553, <1 x half> %4552, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4641 = shufflevector <4 x half> %4640, <4 x half> %4551, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4642 = shufflevector <4 x half> %4641, <4 x half> %4549, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4643 = shufflevector <1 x half> %4547, <1 x half> %4546, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !93
  %4644 = shufflevector <4 x half> %4643, <4 x half> %4545, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !93
  %4645 = shufflevector <4 x half> %4644, <4 x half> %4543, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !93
  %4646 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %4443, i64 0, !dbg !93
  %4647 = insertelement <16 x float> %4646, float %4442, i64 1, !dbg !93
  %4648 = insertelement <16 x float> %4647, float %4441, i64 2, !dbg !93
  %4649 = insertelement <16 x float> %4648, float %4440, i64 3, !dbg !93
  %4650 = insertelement <16 x float> %4649, float %4439, i64 4, !dbg !93
  %4651 = insertelement <16 x float> %4650, float %4438, i64 5, !dbg !93
  %4652 = insertelement <16 x float> %4651, float %4437, i64 6, !dbg !93
  %4653 = insertelement <16 x float> %4652, float %4436, i64 7, !dbg !93
  %4654 = insertelement <16 x float> %4653, float %4435, i64 8, !dbg !93
  %4655 = insertelement <16 x float> %4654, float %4434, i64 9, !dbg !93
  %4656 = insertelement <16 x float> %4655, float %4433, i64 10, !dbg !93
  %4657 = insertelement <16 x float> %4656, float %4432, i64 11, !dbg !93
  %4658 = insertelement <16 x float> %4657, float %4431, i64 12, !dbg !93
  %4659 = insertelement <16 x float> %4658, float %4430, i64 13, !dbg !93
  %4660 = insertelement <16 x float> %4659, float %4429, i64 14, !dbg !93
  %4661 = insertelement <16 x float> %4660, float %4428, i64 15, !dbg !93
  %4662 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4624, <4 x half> %4609, <16 x float> %4661, i32 0, i32 0, i32 0), !dbg !93
  %4663 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4627, <4 x half> %4613, <16 x float> %4662, i32 0, i32 0, i32 0), !dbg !93
  %4664 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4630, <4 x half> %4617, <16 x float> %4663, i32 0, i32 0, i32 0), !dbg !93
  %4665 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4633, <4 x half> %4621, <16 x float> %4664, i32 0, i32 0, i32 0), !dbg !93
  %4666 = extractelement <16 x float> %4665, i64 0, !dbg !93
  %4667 = extractelement <16 x float> %4665, i64 1, !dbg !93
  %4668 = extractelement <16 x float> %4665, i64 2, !dbg !93
  %4669 = extractelement <16 x float> %4665, i64 3, !dbg !93
  %4670 = extractelement <16 x float> %4665, i64 4, !dbg !93
  %4671 = extractelement <16 x float> %4665, i64 5, !dbg !93
  %4672 = extractelement <16 x float> %4665, i64 6, !dbg !93
  %4673 = extractelement <16 x float> %4665, i64 7, !dbg !93
  %4674 = extractelement <16 x float> %4665, i64 8, !dbg !93
  %4675 = extractelement <16 x float> %4665, i64 9, !dbg !93
  %4676 = extractelement <16 x float> %4665, i64 10, !dbg !93
  %4677 = extractelement <16 x float> %4665, i64 11, !dbg !93
  %4678 = extractelement <16 x float> %4665, i64 12, !dbg !93
  %4679 = extractelement <16 x float> %4665, i64 13, !dbg !93
  %4680 = extractelement <16 x float> %4665, i64 14, !dbg !93
  %4681 = extractelement <16 x float> %4665, i64 15, !dbg !93
  %4682 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %4427, i64 0, !dbg !93
  %4683 = insertelement <16 x float> %4682, float %4426, i64 1, !dbg !93
  %4684 = insertelement <16 x float> %4683, float %4425, i64 2, !dbg !93
  %4685 = insertelement <16 x float> %4684, float %4424, i64 3, !dbg !93
  %4686 = insertelement <16 x float> %4685, float %4423, i64 4, !dbg !93
  %4687 = insertelement <16 x float> %4686, float %4422, i64 5, !dbg !93
  %4688 = insertelement <16 x float> %4687, float %4421, i64 6, !dbg !93
  %4689 = insertelement <16 x float> %4688, float %4420, i64 7, !dbg !93
  %4690 = insertelement <16 x float> %4689, float %4419, i64 8, !dbg !93
  %4691 = insertelement <16 x float> %4690, float %4418, i64 9, !dbg !93
  %4692 = insertelement <16 x float> %4691, float %4417, i64 10, !dbg !93
  %4693 = insertelement <16 x float> %4692, float %4416, i64 11, !dbg !93
  %4694 = insertelement <16 x float> %4693, float %4415, i64 12, !dbg !93
  %4695 = insertelement <16 x float> %4694, float %4414, i64 13, !dbg !93
  %4696 = insertelement <16 x float> %4695, float %4413, i64 14, !dbg !93
  %4697 = insertelement <16 x float> %4696, float %4412, i64 15, !dbg !93
  %4698 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4636, <4 x half> %4609, <16 x float> %4697, i32 0, i32 0, i32 0), !dbg !93
  %4699 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4639, <4 x half> %4613, <16 x float> %4698, i32 0, i32 0, i32 0), !dbg !93
  %4700 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4642, <4 x half> %4617, <16 x float> %4699, i32 0, i32 0, i32 0), !dbg !93
  %4701 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4645, <4 x half> %4621, <16 x float> %4700, i32 0, i32 0, i32 0), !dbg !93
  %4702 = extractelement <16 x float> %4701, i64 0, !dbg !93
  %4703 = extractelement <16 x float> %4701, i64 1, !dbg !93
  %4704 = extractelement <16 x float> %4701, i64 2, !dbg !93
  %4705 = extractelement <16 x float> %4701, i64 3, !dbg !93
  %4706 = extractelement <16 x float> %4701, i64 4, !dbg !93
  %4707 = extractelement <16 x float> %4701, i64 5, !dbg !93
  %4708 = extractelement <16 x float> %4701, i64 6, !dbg !93
  %4709 = extractelement <16 x float> %4701, i64 7, !dbg !93
  %4710 = extractelement <16 x float> %4701, i64 8, !dbg !93
  %4711 = extractelement <16 x float> %4701, i64 9, !dbg !93
  %4712 = extractelement <16 x float> %4701, i64 10, !dbg !93
  %4713 = extractelement <16 x float> %4701, i64 11, !dbg !93
  %4714 = extractelement <16 x float> %4701, i64 12, !dbg !93
  %4715 = extractelement <16 x float> %4701, i64 13, !dbg !93
  %4716 = extractelement <16 x float> %4701, i64 14, !dbg !93
  %4717 = extractelement <16 x float> %4701, i64 15, !dbg !93
  br label %4718, !dbg !93

4718:                                             ; preds = %4541, %4487
  %.pn673 = phi float [ %4666, %4541 ], [ %4443, %4487 ]
  %.pn671 = phi float [ %4667, %4541 ], [ %4442, %4487 ]
  %.pn669 = phi float [ %4668, %4541 ], [ %4441, %4487 ]
  %.pn667 = phi float [ %4669, %4541 ], [ %4440, %4487 ]
  %.pn665 = phi float [ %4670, %4541 ], [ %4439, %4487 ]
  %.pn663 = phi float [ %4671, %4541 ], [ %4438, %4487 ]
  %.pn661 = phi float [ %4672, %4541 ], [ %4437, %4487 ]
  %.pn659 = phi float [ %4673, %4541 ], [ %4436, %4487 ]
  %.pn657 = phi float [ %4674, %4541 ], [ %4435, %4487 ]
  %.pn655 = phi float [ %4675, %4541 ], [ %4434, %4487 ]
  %.pn653 = phi float [ %4676, %4541 ], [ %4433, %4487 ]
  %.pn651 = phi float [ %4677, %4541 ], [ %4432, %4487 ]
  %.pn649 = phi float [ %4678, %4541 ], [ %4431, %4487 ]
  %.pn647 = phi float [ %4679, %4541 ], [ %4430, %4487 ]
  %.pn645 = phi float [ %4680, %4541 ], [ %4429, %4487 ]
  %.pn643 = phi float [ %4681, %4541 ], [ %4428, %4487 ]
  %.pn641 = phi float [ %4702, %4541 ], [ %4427, %4487 ]
  %.pn639 = phi float [ %4703, %4541 ], [ %4426, %4487 ]
  %.pn637 = phi float [ %4704, %4541 ], [ %4425, %4487 ]
  %.pn635 = phi float [ %4705, %4541 ], [ %4424, %4487 ]
  %.pn633 = phi float [ %4706, %4541 ], [ %4423, %4487 ]
  %.pn631 = phi float [ %4707, %4541 ], [ %4422, %4487 ]
  %.pn629 = phi float [ %4708, %4541 ], [ %4421, %4487 ]
  %.pn627 = phi float [ %4709, %4541 ], [ %4420, %4487 ]
  %.pn625 = phi float [ %4710, %4541 ], [ %4419, %4487 ]
  %.pn623 = phi float [ %4711, %4541 ], [ %4418, %4487 ]
  %.pn621 = phi float [ %4712, %4541 ], [ %4417, %4487 ]
  %.pn619 = phi float [ %4713, %4541 ], [ %4416, %4487 ]
  %.pn617 = phi float [ %4714, %4541 ], [ %4415, %4487 ]
  %.pn615 = phi float [ %4715, %4541 ], [ %4414, %4487 ]
  %.pn613 = phi float [ %4716, %4541 ], [ %4413, %4487 ]
  %.pn611 = phi float [ %4717, %4541 ], [ %4412, %4487 ]
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  %4719 = shufflevector <2 x half> %2701, <2 x half> %2703, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %4719, ptr addrspace(3) %185, align 8, !dbg !94
  %4720 = shufflevector <2 x half> %2704, <2 x half> %2702, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !94
  store <4 x half> %4720, ptr addrspace(3) %192, align 8, !dbg !94
  fence syncscope("workgroup") release, !dbg !94
  tail call void @llvm.amdgcn.s.barrier(), !dbg !94
  fence syncscope("workgroup") acquire, !dbg !94
  br i1 %1014, label %4721, label %4746, !dbg !95

4721:                                             ; preds = %4718
  %4722 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !94
  %4723 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !94
  %4724 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !94
  %4725 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !94
  %4726 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !94
  %4727 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !94
  %4728 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !94
  %4729 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !94
  %4730 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4729, <4 x half> %309, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !95
  %4731 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4728, <4 x half> %310, <16 x float> %4730, i32 0, i32 0, i32 0), !dbg !95
  %4732 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4727, <4 x half> %311, <16 x float> %4731, i32 0, i32 0, i32 0), !dbg !95
  %4733 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4726, <4 x half> %312, <16 x float> %4732, i32 0, i32 0, i32 0), !dbg !95
  %4734 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4725, <4 x half> %313, <16 x float> %4733, i32 0, i32 0, i32 0), !dbg !95
  %4735 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4724, <4 x half> %314, <16 x float> %4734, i32 0, i32 0, i32 0), !dbg !95
  %4736 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4723, <4 x half> %315, <16 x float> %4735, i32 0, i32 0, i32 0), !dbg !95
  %4737 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4722, <4 x half> %316, <16 x float> %4736, i32 0, i32 0, i32 0), !dbg !95
  %4738 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !74
  %4739 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !74
  %4740 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !74
  %4741 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !74
  %4742 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !74
  %4743 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !74
  %4744 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !74
  %4745 = shufflevector <16 x float> %4737, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !74
  br label %4746, !dbg !95

4746:                                             ; preds = %4721, %4718
  %4747 = phi <2 x float> [ %4738, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4748 = phi <2 x float> [ %4739, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4749 = phi <2 x float> [ %4740, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4750 = phi <2 x float> [ %4741, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4751 = phi <2 x float> [ %4742, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4752 = phi <2 x float> [ %4743, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4753 = phi <2 x float> [ %4744, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  %4754 = phi <2 x float> [ %4745, %4721 ], [ zeroinitializer, %4718 ], !dbg !74
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  %4755 = shufflevector <2 x half> %2697, <2 x half> %2698, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4756 = shufflevector <2 x half> %2699, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4757 = shufflevector <8 x half> %4755, <8 x half> %4756, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !99
  %4758 = shufflevector <2 x half> %2700, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !99
  %4759 = shufflevector <8 x half> %4757, <8 x half> %4758, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !99
  store <8 x half> %4759, ptr addrspace(3) %2880, align 16, !dbg !99
  fence syncscope("workgroup") release, !dbg !99
  tail call void @llvm.amdgcn.s.barrier(), !dbg !99
  fence syncscope("workgroup") acquire, !dbg !99
  br i1 %1014, label %4760, label %4941, !dbg !100

4760:                                             ; preds = %4746
  %4761 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !99
  %4762 = shufflevector <1 x half> %4761, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4763 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !99
  %4764 = shufflevector <1 x half> %4763, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4765 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !99
  %4766 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !99
  %4767 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !99
  %4768 = shufflevector <1 x half> %4767, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4769 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !99
  %4770 = shufflevector <1 x half> %4769, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4771 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !99
  %4772 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !99
  %4773 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !99
  %4774 = shufflevector <1 x half> %4773, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4775 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !99
  %4776 = shufflevector <1 x half> %4775, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4777 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !99
  %4778 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !99
  %4779 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !99
  %4780 = shufflevector <1 x half> %4779, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4781 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !99
  %4782 = shufflevector <1 x half> %4781, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4783 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !99
  %4784 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !99
  %4785 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !99
  %4786 = shufflevector <1 x half> %4785, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4787 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !99
  %4788 = shufflevector <1 x half> %4787, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4789 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !99
  %4790 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !99
  %4791 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !99
  %4792 = shufflevector <1 x half> %4791, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4793 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !99
  %4794 = shufflevector <1 x half> %4793, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4795 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !99
  %4796 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !99
  %4797 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !99
  %4798 = shufflevector <1 x half> %4797, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4799 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !99
  %4800 = shufflevector <1 x half> %4799, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4801 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !99
  %4802 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !99
  %4803 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !99
  %4804 = shufflevector <1 x half> %4803, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4805 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !99
  %4806 = shufflevector <1 x half> %4805, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %4807 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !99
  %4808 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !99
  %4809 = fsub <2 x float> %4748, %2690, !dbg !96
  %4810 = insertelement <2 x float> poison, float %4534, i64 0, !dbg !97
  %4811 = insertelement <2 x float> %4810, float %4535, i64 1, !dbg !97
  %4812 = fmul <2 x float> %4811, %4809, !dbg !97
  %4813 = fptrunc <2 x float> %4812 to <2 x half>, !dbg !98
  %4814 = fsub <2 x float> %4747, %2689, !dbg !96
  %4815 = insertelement <2 x float> poison, float %4532, i64 0, !dbg !97
  %4816 = insertelement <2 x float> %4815, float %4533, i64 1, !dbg !97
  %4817 = fmul <2 x float> %4816, %4814, !dbg !97
  %4818 = fptrunc <2 x float> %4817 to <2 x half>, !dbg !98
  %4819 = fsub <2 x float> %4750, %2692, !dbg !96
  %4820 = insertelement <2 x float> poison, float %4530, i64 0, !dbg !97
  %4821 = insertelement <2 x float> %4820, float %4531, i64 1, !dbg !97
  %4822 = fmul <2 x float> %4821, %4819, !dbg !97
  %4823 = fptrunc <2 x float> %4822 to <2 x half>, !dbg !98
  %4824 = fsub <2 x float> %4749, %2691, !dbg !96
  %4825 = insertelement <2 x float> poison, float %4528, i64 0, !dbg !97
  %4826 = insertelement <2 x float> %4825, float %4529, i64 1, !dbg !97
  %4827 = fmul <2 x float> %4826, %4824, !dbg !97
  %4828 = fptrunc <2 x float> %4827 to <2 x half>, !dbg !98
  %4829 = fsub <2 x float> %4752, %2694, !dbg !96
  %4830 = insertelement <2 x float> poison, float %4526, i64 0, !dbg !97
  %4831 = insertelement <2 x float> %4830, float %4527, i64 1, !dbg !97
  %4832 = fmul <2 x float> %4831, %4829, !dbg !97
  %4833 = fptrunc <2 x float> %4832 to <2 x half>, !dbg !98
  %4834 = fsub <2 x float> %4751, %2693, !dbg !96
  %4835 = insertelement <2 x float> poison, float %4524, i64 0, !dbg !97
  %4836 = insertelement <2 x float> %4835, float %4525, i64 1, !dbg !97
  %4837 = fmul <2 x float> %4836, %4834, !dbg !97
  %4838 = fptrunc <2 x float> %4837 to <2 x half>, !dbg !98
  %4839 = fsub <2 x float> %4754, %2696, !dbg !96
  %4840 = insertelement <2 x float> poison, float %4522, i64 0, !dbg !97
  %4841 = insertelement <2 x float> %4840, float %4523, i64 1, !dbg !97
  %4842 = fmul <2 x float> %4841, %4839, !dbg !97
  %4843 = fptrunc <2 x float> %4842 to <2 x half>, !dbg !98
  %4844 = fsub <2 x float> %4753, %2695, !dbg !96
  %4845 = insertelement <2 x float> poison, float %4520, i64 0, !dbg !97
  %4846 = insertelement <2 x float> %4845, float %4521, i64 1, !dbg !97
  %4847 = fmul <2 x float> %4846, %4844, !dbg !97
  %4848 = fptrunc <2 x float> %4847 to <2 x half>, !dbg !98
  %4849 = shufflevector <2 x half> %4848, <2 x half> %4843, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4850 = shufflevector <2 x half> %4838, <2 x half> %4833, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4851 = shufflevector <2 x half> %4828, <2 x half> %4823, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4852 = shufflevector <2 x half> %4818, <2 x half> %4813, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !100
  %4853 = shufflevector <1 x half> %4808, <1 x half> %4807, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4854 = shufflevector <4 x half> %4853, <4 x half> %4806, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4855 = shufflevector <4 x half> %4854, <4 x half> %4804, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4856 = shufflevector <1 x half> %4802, <1 x half> %4801, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4857 = shufflevector <4 x half> %4856, <4 x half> %4800, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4858 = shufflevector <4 x half> %4857, <4 x half> %4798, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4859 = shufflevector <1 x half> %4796, <1 x half> %4795, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4860 = shufflevector <4 x half> %4859, <4 x half> %4794, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4861 = shufflevector <4 x half> %4860, <4 x half> %4792, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4862 = shufflevector <1 x half> %4790, <1 x half> %4789, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4863 = shufflevector <4 x half> %4862, <4 x half> %4788, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4864 = shufflevector <4 x half> %4863, <4 x half> %4786, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4865 = shufflevector <1 x half> %4784, <1 x half> %4783, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4866 = shufflevector <4 x half> %4865, <4 x half> %4782, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4867 = shufflevector <4 x half> %4866, <4 x half> %4780, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4868 = shufflevector <1 x half> %4778, <1 x half> %4777, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4869 = shufflevector <4 x half> %4868, <4 x half> %4776, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4870 = shufflevector <4 x half> %4869, <4 x half> %4774, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4871 = shufflevector <1 x half> %4772, <1 x half> %4771, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4872 = shufflevector <4 x half> %4871, <4 x half> %4770, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4873 = shufflevector <4 x half> %4872, <4 x half> %4768, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4874 = shufflevector <1 x half> %4766, <1 x half> %4765, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !100
  %4875 = shufflevector <4 x half> %4874, <4 x half> %4764, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !100
  %4876 = shufflevector <4 x half> %4875, <4 x half> %4762, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !100
  %4877 = insertelement <16 x float> poison, float %4411, i64 0, !dbg !100
  %4878 = shufflevector <2 x float> %4444, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4879 = shufflevector <16 x float> %4877, <16 x float> %4878, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4880 = insertelement <16 x float> %4879, float %4410, i64 3, !dbg !100
  %4881 = insertelement <16 x float> %4880, float %4409, i64 4, !dbg !100
  %4882 = shufflevector <2 x float> %4445, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4883 = shufflevector <16 x float> %4881, <16 x float> %4882, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4884 = insertelement <16 x float> %4883, float %4408, i64 7, !dbg !100
  %4885 = insertelement <16 x float> %4884, float %4407, i64 8, !dbg !100
  %4886 = shufflevector <2 x float> %4446, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4887 = shufflevector <16 x float> %4885, <16 x float> %4886, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4888 = insertelement <16 x float> %4887, float %4406, i64 11, !dbg !100
  %4889 = insertelement <16 x float> %4888, float %4405, i64 12, !dbg !100
  %4890 = shufflevector <2 x float> %4447, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4891 = shufflevector <16 x float> %4889, <16 x float> %4890, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %4892 = insertelement <16 x float> %4891, float %4404, i64 15, !dbg !100
  %4893 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4855, <4 x half> %4849, <16 x float> %4892, i32 0, i32 0, i32 0), !dbg !100
  %4894 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4858, <4 x half> %4850, <16 x float> %4893, i32 0, i32 0, i32 0), !dbg !100
  %4895 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4861, <4 x half> %4851, <16 x float> %4894, i32 0, i32 0, i32 0), !dbg !100
  %4896 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4864, <4 x half> %4852, <16 x float> %4895, i32 0, i32 0, i32 0), !dbg !100
  %4897 = extractelement <16 x float> %4896, i64 0, !dbg !100
  %4898 = extractelement <16 x float> %4896, i64 3, !dbg !100
  %4899 = extractelement <16 x float> %4896, i64 4, !dbg !100
  %4900 = extractelement <16 x float> %4896, i64 7, !dbg !100
  %4901 = extractelement <16 x float> %4896, i64 8, !dbg !100
  %4902 = extractelement <16 x float> %4896, i64 11, !dbg !100
  %4903 = extractelement <16 x float> %4896, i64 12, !dbg !100
  %4904 = extractelement <16 x float> %4896, i64 15, !dbg !100
  %4905 = insertelement <16 x float> poison, float %4403, i64 0, !dbg !100
  %4906 = shufflevector <2 x float> %4448, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4907 = shufflevector <16 x float> %4905, <16 x float> %4906, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4908 = insertelement <16 x float> %4907, float %4402, i64 3, !dbg !100
  %4909 = insertelement <16 x float> %4908, float %4401, i64 4, !dbg !100
  %4910 = shufflevector <2 x float> %4449, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4911 = shufflevector <16 x float> %4909, <16 x float> %4910, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4912 = insertelement <16 x float> %4911, float %4400, i64 7, !dbg !100
  %4913 = insertelement <16 x float> %4912, float %4399, i64 8, !dbg !100
  %4914 = shufflevector <2 x float> %4450, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4915 = shufflevector <16 x float> %4913, <16 x float> %4914, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4916 = insertelement <16 x float> %4915, float %4398, i64 11, !dbg !100
  %4917 = insertelement <16 x float> %4916, float %4397, i64 12, !dbg !100
  %4918 = shufflevector <2 x float> %4451, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !100
  %4919 = shufflevector <16 x float> %4917, <16 x float> %4918, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !100
  %4920 = insertelement <16 x float> %4919, float %4396, i64 15, !dbg !100
  %4921 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4867, <4 x half> %4849, <16 x float> %4920, i32 0, i32 0, i32 0), !dbg !100
  %4922 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4870, <4 x half> %4850, <16 x float> %4921, i32 0, i32 0, i32 0), !dbg !100
  %4923 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4873, <4 x half> %4851, <16 x float> %4922, i32 0, i32 0, i32 0), !dbg !100
  %4924 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %4876, <4 x half> %4852, <16 x float> %4923, i32 0, i32 0, i32 0), !dbg !100
  %4925 = extractelement <16 x float> %4924, i64 0, !dbg !100
  %4926 = extractelement <16 x float> %4924, i64 3, !dbg !100
  %4927 = extractelement <16 x float> %4924, i64 4, !dbg !100
  %4928 = extractelement <16 x float> %4924, i64 7, !dbg !100
  %4929 = extractelement <16 x float> %4924, i64 8, !dbg !100
  %4930 = extractelement <16 x float> %4924, i64 11, !dbg !100
  %4931 = extractelement <16 x float> %4924, i64 12, !dbg !100
  %4932 = extractelement <16 x float> %4924, i64 15, !dbg !100
  %4933 = shufflevector <16 x float> %4896, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %4934 = shufflevector <16 x float> %4896, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %4935 = shufflevector <16 x float> %4896, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %4936 = shufflevector <16 x float> %4896, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %4937 = shufflevector <16 x float> %4924, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %4938 = shufflevector <16 x float> %4924, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %4939 = shufflevector <16 x float> %4924, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %4940 = shufflevector <16 x float> %4924, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %4941, !dbg !100

4941:                                             ; preds = %4760, %4746
  %4942 = phi float [ %4932, %4760 ], [ %4396, %4746 ]
  %4943 = phi float [ %4931, %4760 ], [ %4397, %4746 ]
  %4944 = phi float [ %4930, %4760 ], [ %4398, %4746 ]
  %4945 = phi float [ %4929, %4760 ], [ %4399, %4746 ]
  %4946 = phi float [ %4928, %4760 ], [ %4400, %4746 ]
  %4947 = phi float [ %4927, %4760 ], [ %4401, %4746 ]
  %4948 = phi float [ %4926, %4760 ], [ %4402, %4746 ]
  %4949 = phi float [ %4925, %4760 ], [ %4403, %4746 ]
  %4950 = phi float [ %4904, %4760 ], [ %4404, %4746 ]
  %4951 = phi float [ %4903, %4760 ], [ %4405, %4746 ]
  %4952 = phi float [ %4902, %4760 ], [ %4406, %4746 ]
  %4953 = phi float [ %4901, %4760 ], [ %4407, %4746 ]
  %4954 = phi float [ %4900, %4760 ], [ %4408, %4746 ]
  %4955 = phi float [ %4899, %4760 ], [ %4409, %4746 ]
  %4956 = phi float [ %4898, %4760 ], [ %4410, %4746 ]
  %4957 = phi float [ %4897, %4760 ], [ %4411, %4746 ]
  %4958 = phi float [ %.pn611, %4760 ], [ %4412, %4746 ]
  %4959 = phi float [ %.pn613, %4760 ], [ %4413, %4746 ]
  %4960 = phi float [ %.pn615, %4760 ], [ %4414, %4746 ]
  %4961 = phi float [ %.pn617, %4760 ], [ %4415, %4746 ]
  %4962 = phi float [ %.pn619, %4760 ], [ %4416, %4746 ]
  %4963 = phi float [ %.pn621, %4760 ], [ %4417, %4746 ]
  %4964 = phi float [ %.pn623, %4760 ], [ %4418, %4746 ]
  %4965 = phi float [ %.pn625, %4760 ], [ %4419, %4746 ]
  %4966 = phi float [ %.pn627, %4760 ], [ %4420, %4746 ]
  %4967 = phi float [ %.pn629, %4760 ], [ %4421, %4746 ]
  %4968 = phi float [ %.pn631, %4760 ], [ %4422, %4746 ]
  %4969 = phi float [ %.pn633, %4760 ], [ %4423, %4746 ]
  %4970 = phi float [ %.pn635, %4760 ], [ %4424, %4746 ]
  %4971 = phi float [ %.pn637, %4760 ], [ %4425, %4746 ]
  %4972 = phi float [ %.pn639, %4760 ], [ %4426, %4746 ]
  %4973 = phi float [ %.pn641, %4760 ], [ %4427, %4746 ]
  %4974 = phi float [ %.pn643, %4760 ], [ %4428, %4746 ]
  %4975 = phi float [ %.pn645, %4760 ], [ %4429, %4746 ]
  %4976 = phi float [ %.pn647, %4760 ], [ %4430, %4746 ]
  %4977 = phi float [ %.pn649, %4760 ], [ %4431, %4746 ]
  %4978 = phi float [ %.pn651, %4760 ], [ %4432, %4746 ]
  %4979 = phi float [ %.pn653, %4760 ], [ %4433, %4746 ]
  %4980 = phi float [ %.pn655, %4760 ], [ %4434, %4746 ]
  %4981 = phi float [ %.pn657, %4760 ], [ %4435, %4746 ]
  %4982 = phi float [ %.pn659, %4760 ], [ %4436, %4746 ]
  %4983 = phi float [ %.pn661, %4760 ], [ %4437, %4746 ]
  %4984 = phi float [ %.pn663, %4760 ], [ %4438, %4746 ]
  %4985 = phi float [ %.pn665, %4760 ], [ %4439, %4746 ]
  %4986 = phi float [ %.pn667, %4760 ], [ %4440, %4746 ]
  %4987 = phi float [ %.pn669, %4760 ], [ %4441, %4746 ]
  %4988 = phi float [ %.pn671, %4760 ], [ %4442, %4746 ]
  %4989 = phi float [ %.pn673, %4760 ], [ %4443, %4746 ]
  %4990 = phi <2 x float> [ %4933, %4760 ], [ %4444, %4746 ]
  %4991 = phi <2 x float> [ %4934, %4760 ], [ %4445, %4746 ]
  %4992 = phi <2 x float> [ %4935, %4760 ], [ %4446, %4746 ]
  %4993 = phi <2 x float> [ %4936, %4760 ], [ %4447, %4746 ]
  %4994 = phi <2 x float> [ %4937, %4760 ], [ %4448, %4746 ]
  %4995 = phi <2 x float> [ %4938, %4760 ], [ %4449, %4746 ]
  %4996 = phi <2 x float> [ %4939, %4760 ], [ %4450, %4746 ]
  %4997 = phi <2 x float> [ %4940, %4760 ], [ %4451, %4746 ]
  %4998 = getelementptr half, ptr addrspace(1) %867, i64 %44, !dbg !55
  %4999 = sext i32 %172 to i64, !dbg !55
  %5000 = zext nneg i32 %174 to i64, !dbg !109
  %5001 = zext nneg i32 %870 to i64, !dbg !109
  %5002 = zext nneg i32 %175 to i64, !dbg !109
  %5003 = zext nneg i32 %871 to i64, !dbg !109
  %5004 = add nsw i64 %4999, %877, !dbg !109
  %5005 = add nsw i64 %4999, %879, !dbg !109
  %5006 = add nsw i64 %4999, %881, !dbg !109
  %5007 = add nsw i64 %4999, %883, !dbg !109
  %5008 = add nsw i64 %4999, %5000, !dbg !109
  %5009 = add nsw i64 %4999, %5001, !dbg !109
  %5010 = add nsw i64 %4999, %5002, !dbg !109
  %5011 = add nsw i64 %4999, %5003, !dbg !109
  %5012 = fptrunc float %4989 to half, !dbg !110
  %5013 = fptrunc float %4988 to half, !dbg !110
  %5014 = fptrunc float %4987 to half, !dbg !110
  %5015 = fptrunc float %4986 to half, !dbg !110
  %5016 = fptrunc float %4985 to half, !dbg !110
  %5017 = fptrunc float %4984 to half, !dbg !110
  %5018 = fptrunc float %4983 to half, !dbg !110
  %5019 = fptrunc float %4982 to half, !dbg !110
  %5020 = fptrunc float %4981 to half, !dbg !110
  %5021 = fptrunc float %4980 to half, !dbg !110
  %5022 = fptrunc float %4979 to half, !dbg !110
  %5023 = fptrunc float %4978 to half, !dbg !110
  %5024 = fptrunc float %4977 to half, !dbg !110
  %5025 = fptrunc float %4976 to half, !dbg !110
  %5026 = fptrunc float %4975 to half, !dbg !110
  %5027 = fptrunc float %4974 to half, !dbg !110
  %5028 = fptrunc float %4973 to half, !dbg !110
  %5029 = fptrunc float %4972 to half, !dbg !110
  %5030 = fptrunc float %4971 to half, !dbg !110
  %5031 = fptrunc float %4970 to half, !dbg !110
  %5032 = fptrunc float %4969 to half, !dbg !110
  %5033 = fptrunc float %4968 to half, !dbg !110
  %5034 = fptrunc float %4967 to half, !dbg !110
  %5035 = fptrunc float %4966 to half, !dbg !110
  %5036 = fptrunc float %4965 to half, !dbg !110
  %5037 = fptrunc float %4964 to half, !dbg !110
  %5038 = fptrunc float %4963 to half, !dbg !110
  %5039 = fptrunc float %4962 to half, !dbg !110
  %5040 = fptrunc float %4961 to half, !dbg !110
  %5041 = fptrunc float %4960 to half, !dbg !110
  %5042 = fptrunc float %4959 to half, !dbg !110
  %5043 = fptrunc float %4958 to half, !dbg !110
  %5044 = getelementptr half, ptr addrspace(1) %4998, i64 %5004, !dbg !110
  %5045 = getelementptr half, ptr addrspace(1) %4998, i64 %5005, !dbg !110
  %5046 = getelementptr half, ptr addrspace(1) %4998, i64 %5006, !dbg !110
  %5047 = getelementptr half, ptr addrspace(1) %4998, i64 %5007, !dbg !110
  %5048 = getelementptr half, ptr addrspace(1) %4998, i64 %5008, !dbg !110
  %5049 = getelementptr half, ptr addrspace(1) %4998, i64 %5009, !dbg !110
  %5050 = getelementptr half, ptr addrspace(1) %4998, i64 %5010, !dbg !110
  %5051 = getelementptr half, ptr addrspace(1) %4998, i64 %5011, !dbg !110
  %5052 = insertelement <4 x half> poison, half %5012, i64 0, !dbg !110
  %5053 = insertelement <4 x half> %5052, half %5013, i64 1, !dbg !110
  %5054 = insertelement <4 x half> %5053, half %5014, i64 2, !dbg !110
  %5055 = insertelement <4 x half> %5054, half %5015, i64 3, !dbg !110
  store <4 x half> %5055, ptr addrspace(1) %5044, align 16, !dbg !110
  %5056 = insertelement <4 x half> poison, half %5016, i64 0, !dbg !110
  %5057 = insertelement <4 x half> %5056, half %5017, i64 1, !dbg !110
  %5058 = insertelement <4 x half> %5057, half %5018, i64 2, !dbg !110
  %5059 = insertelement <4 x half> %5058, half %5019, i64 3, !dbg !110
  store <4 x half> %5059, ptr addrspace(1) %5045, align 16, !dbg !110
  %5060 = insertelement <4 x half> poison, half %5020, i64 0, !dbg !110
  %5061 = insertelement <4 x half> %5060, half %5021, i64 1, !dbg !110
  %5062 = insertelement <4 x half> %5061, half %5022, i64 2, !dbg !110
  %5063 = insertelement <4 x half> %5062, half %5023, i64 3, !dbg !110
  store <4 x half> %5063, ptr addrspace(1) %5046, align 16, !dbg !110
  %5064 = insertelement <4 x half> poison, half %5024, i64 0, !dbg !110
  %5065 = insertelement <4 x half> %5064, half %5025, i64 1, !dbg !110
  %5066 = insertelement <4 x half> %5065, half %5026, i64 2, !dbg !110
  %5067 = insertelement <4 x half> %5066, half %5027, i64 3, !dbg !110
  store <4 x half> %5067, ptr addrspace(1) %5047, align 16, !dbg !110
  %5068 = insertelement <4 x half> poison, half %5028, i64 0, !dbg !110
  %5069 = insertelement <4 x half> %5068, half %5029, i64 1, !dbg !110
  %5070 = insertelement <4 x half> %5069, half %5030, i64 2, !dbg !110
  %5071 = insertelement <4 x half> %5070, half %5031, i64 3, !dbg !110
  store <4 x half> %5071, ptr addrspace(1) %5048, align 16, !dbg !110
  %5072 = insertelement <4 x half> poison, half %5032, i64 0, !dbg !110
  %5073 = insertelement <4 x half> %5072, half %5033, i64 1, !dbg !110
  %5074 = insertelement <4 x half> %5073, half %5034, i64 2, !dbg !110
  %5075 = insertelement <4 x half> %5074, half %5035, i64 3, !dbg !110
  store <4 x half> %5075, ptr addrspace(1) %5049, align 16, !dbg !110
  %5076 = insertelement <4 x half> poison, half %5036, i64 0, !dbg !110
  %5077 = insertelement <4 x half> %5076, half %5037, i64 1, !dbg !110
  %5078 = insertelement <4 x half> %5077, half %5038, i64 2, !dbg !110
  %5079 = insertelement <4 x half> %5078, half %5039, i64 3, !dbg !110
  store <4 x half> %5079, ptr addrspace(1) %5050, align 16, !dbg !110
  %5080 = insertelement <4 x half> poison, half %5040, i64 0, !dbg !110
  %5081 = insertelement <4 x half> %5080, half %5041, i64 1, !dbg !110
  %5082 = insertelement <4 x half> %5081, half %5042, i64 2, !dbg !110
  %5083 = insertelement <4 x half> %5082, half %5043, i64 3, !dbg !110
  store <4 x half> %5083, ptr addrspace(1) %5051, align 16, !dbg !110
  %5084 = fmul float %3, %4957, !dbg !111
  %5085 = insertelement <2 x float> poison, float %3, i64 0, !dbg !111
  %5086 = shufflevector <2 x float> %5085, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !111
  %5087 = fmul <2 x float> %5086, %4990, !dbg !111
  %5088 = fmul float %3, %4956, !dbg !111
  %5089 = fmul float %3, %4955, !dbg !111
  %5090 = fmul <2 x float> %5086, %4991, !dbg !111
  %5091 = fmul float %3, %4954, !dbg !111
  %5092 = fmul float %3, %4953, !dbg !111
  %5093 = fmul <2 x float> %5086, %4992, !dbg !111
  %5094 = fmul float %3, %4952, !dbg !111
  %5095 = fmul float %3, %4951, !dbg !111
  %5096 = fmul <2 x float> %5086, %4993, !dbg !111
  %5097 = fmul float %3, %4950, !dbg !111
  %5098 = fmul float %3, %4949, !dbg !111
  %5099 = fmul <2 x float> %5086, %4994, !dbg !111
  %5100 = fmul float %3, %4948, !dbg !111
  %5101 = fmul float %3, %4947, !dbg !111
  %5102 = fmul <2 x float> %5086, %4995, !dbg !111
  %5103 = fmul float %3, %4946, !dbg !111
  %5104 = fmul float %3, %4945, !dbg !111
  %5105 = fmul <2 x float> %5086, %4996, !dbg !111
  %5106 = fmul float %3, %4944, !dbg !111
  %5107 = fmul float %3, %4943, !dbg !111
  %5108 = fmul <2 x float> %5086, %4997, !dbg !111
  %5109 = fmul float %3, %4942, !dbg !111
  %5110 = getelementptr half, ptr addrspace(1) %158, i64 %44, !dbg !112
  %5111 = fptrunc float %5084 to half, !dbg !113
  %5112 = fptrunc <2 x float> %5087 to <2 x half>, !dbg !113
  %5113 = fptrunc float %5088 to half, !dbg !113
  %5114 = fptrunc float %5089 to half, !dbg !113
  %5115 = fptrunc <2 x float> %5090 to <2 x half>, !dbg !113
  %5116 = fptrunc float %5091 to half, !dbg !113
  %5117 = fptrunc float %5092 to half, !dbg !113
  %5118 = fptrunc <2 x float> %5093 to <2 x half>, !dbg !113
  %5119 = fptrunc float %5094 to half, !dbg !113
  %5120 = fptrunc float %5095 to half, !dbg !113
  %5121 = fptrunc <2 x float> %5096 to <2 x half>, !dbg !113
  %5122 = fptrunc float %5097 to half, !dbg !113
  %5123 = fptrunc float %5098 to half, !dbg !113
  %5124 = fptrunc <2 x float> %5099 to <2 x half>, !dbg !113
  %5125 = fptrunc float %5100 to half, !dbg !113
  %5126 = fptrunc float %5101 to half, !dbg !113
  %5127 = fptrunc <2 x float> %5102 to <2 x half>, !dbg !113
  %5128 = fptrunc float %5103 to half, !dbg !113
  %5129 = fptrunc float %5104 to half, !dbg !113
  %5130 = fptrunc <2 x float> %5105 to <2 x half>, !dbg !113
  %5131 = fptrunc float %5106 to half, !dbg !113
  %5132 = fptrunc float %5107 to half, !dbg !113
  %5133 = fptrunc <2 x float> %5108 to <2 x half>, !dbg !113
  %5134 = fptrunc float %5109 to half, !dbg !113
  %5135 = getelementptr half, ptr addrspace(1) %5110, i64 %5004, !dbg !113
  %5136 = getelementptr half, ptr addrspace(1) %5110, i64 %5005, !dbg !113
  %5137 = getelementptr half, ptr addrspace(1) %5110, i64 %5006, !dbg !113
  %5138 = getelementptr half, ptr addrspace(1) %5110, i64 %5007, !dbg !113
  %5139 = getelementptr half, ptr addrspace(1) %5110, i64 %5008, !dbg !113
  %5140 = getelementptr half, ptr addrspace(1) %5110, i64 %5009, !dbg !113
  %5141 = getelementptr half, ptr addrspace(1) %5110, i64 %5010, !dbg !113
  %5142 = getelementptr half, ptr addrspace(1) %5110, i64 %5011, !dbg !113
  %5143 = insertelement <4 x half> poison, half %5111, i64 0, !dbg !113
  %5144 = shufflevector <2 x half> %5112, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5145 = shufflevector <4 x half> %5143, <4 x half> %5144, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5146 = insertelement <4 x half> %5145, half %5113, i64 3, !dbg !113
  store <4 x half> %5146, ptr addrspace(1) %5135, align 16, !dbg !113
  %5147 = insertelement <4 x half> poison, half %5114, i64 0, !dbg !113
  %5148 = shufflevector <2 x half> %5115, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5149 = shufflevector <4 x half> %5147, <4 x half> %5148, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5150 = insertelement <4 x half> %5149, half %5116, i64 3, !dbg !113
  store <4 x half> %5150, ptr addrspace(1) %5136, align 16, !dbg !113
  %5151 = insertelement <4 x half> poison, half %5117, i64 0, !dbg !113
  %5152 = shufflevector <2 x half> %5118, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5153 = shufflevector <4 x half> %5151, <4 x half> %5152, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5154 = insertelement <4 x half> %5153, half %5119, i64 3, !dbg !113
  store <4 x half> %5154, ptr addrspace(1) %5137, align 16, !dbg !113
  %5155 = insertelement <4 x half> poison, half %5120, i64 0, !dbg !113
  %5156 = shufflevector <2 x half> %5121, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5157 = shufflevector <4 x half> %5155, <4 x half> %5156, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5158 = insertelement <4 x half> %5157, half %5122, i64 3, !dbg !113
  store <4 x half> %5158, ptr addrspace(1) %5138, align 16, !dbg !113
  %5159 = insertelement <4 x half> poison, half %5123, i64 0, !dbg !113
  %5160 = shufflevector <2 x half> %5124, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5161 = shufflevector <4 x half> %5159, <4 x half> %5160, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5162 = insertelement <4 x half> %5161, half %5125, i64 3, !dbg !113
  store <4 x half> %5162, ptr addrspace(1) %5139, align 16, !dbg !113
  %5163 = insertelement <4 x half> poison, half %5126, i64 0, !dbg !113
  %5164 = shufflevector <2 x half> %5127, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5165 = shufflevector <4 x half> %5163, <4 x half> %5164, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5166 = insertelement <4 x half> %5165, half %5128, i64 3, !dbg !113
  store <4 x half> %5166, ptr addrspace(1) %5140, align 16, !dbg !113
  %5167 = insertelement <4 x half> poison, half %5129, i64 0, !dbg !113
  %5168 = shufflevector <2 x half> %5130, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5169 = shufflevector <4 x half> %5167, <4 x half> %5168, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5170 = insertelement <4 x half> %5169, half %5131, i64 3, !dbg !113
  store <4 x half> %5170, ptr addrspace(1) %5141, align 16, !dbg !113
  %5171 = insertelement <4 x half> poison, half %5132, i64 0, !dbg !113
  %5172 = shufflevector <2 x half> %5133, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !113
  %5173 = shufflevector <4 x half> %5171, <4 x half> %5172, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !113
  %5174 = insertelement <4 x half> %5173, half %5134, i64 3, !dbg !113
  store <4 x half> %5174, ptr addrspace(1) %5142, align 16, !dbg !113
  fence syncscope("workgroup") release, !dbg !101
  tail call void @llvm.amdgcn.s.barrier(), !dbg !101
  fence syncscope("workgroup") acquire, !dbg !101
  %5175 = shufflevector <8 x half> %unmaskedload323, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !101
  store <4 x half> %5175, ptr addrspace(3) %185, align 8, !dbg !101
  %5176 = shufflevector <8 x half> %unmaskedload323, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !101
  store <4 x half> %5176, ptr addrspace(3) %192, align 8, !dbg !101
  %5177 = shufflevector <8 x half> %unmaskedload324, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !101
  store <4 x half> %5177, ptr addrspace(3) %196, align 8, !dbg !101
  %5178 = shufflevector <8 x half> %unmaskedload324, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !101
  store <4 x half> %5178, ptr addrspace(3) %199, align 8, !dbg !101
  %5179 = shufflevector <8 x half> %unmaskedload325, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !101
  store <4 x half> %5179, ptr addrspace(3) %203, align 8, !dbg !101
  %5180 = shufflevector <8 x half> %unmaskedload325, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !101
  store <4 x half> %5180, ptr addrspace(3) %206, align 8, !dbg !101
  %5181 = shufflevector <8 x half> %unmaskedload326, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !101
  store <4 x half> %5181, ptr addrspace(3) %210, align 8, !dbg !101
  %5182 = shufflevector <8 x half> %unmaskedload326, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !101
  store <4 x half> %5182, ptr addrspace(3) %213, align 8, !dbg !101
  fence syncscope("workgroup") release, !dbg !101
  tail call void @llvm.amdgcn.s.barrier(), !dbg !101
  fence syncscope("workgroup") acquire, !dbg !101
  %5183 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !101
  %5184 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !101
  %5185 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !101
  %5186 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !101
  %5187 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !101
  %5188 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !101
  %5189 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !101
  %5190 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !101
  %5191 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !101
  %5192 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !101
  %5193 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !101
  %5194 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !101
  %5195 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !101
  %5196 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !101
  %5197 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !101
  %5198 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !101
  %5199 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %184, !dbg !102
  %5200 = shufflevector <8 x half> %unmaskedload327, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !102
  store <4 x half> %5200, ptr addrspace(3) %5199, align 8, !dbg !102
  %5201 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %191, !dbg !102
  %5202 = shufflevector <8 x half> %unmaskedload327, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !102
  store <4 x half> %5202, ptr addrspace(3) %5201, align 8, !dbg !102
  %5203 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %195, !dbg !102
  %5204 = shufflevector <8 x half> %unmaskedload328, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !102
  store <4 x half> %5204, ptr addrspace(3) %5203, align 8, !dbg !102
  %5205 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %198, !dbg !102
  %5206 = shufflevector <8 x half> %unmaskedload328, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !102
  store <4 x half> %5206, ptr addrspace(3) %5205, align 8, !dbg !102
  %5207 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %202, !dbg !102
  %5208 = shufflevector <8 x half> %unmaskedload329, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !102
  store <4 x half> %5208, ptr addrspace(3) %5207, align 8, !dbg !102
  %5209 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %205, !dbg !102
  %5210 = shufflevector <8 x half> %unmaskedload329, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !102
  store <4 x half> %5210, ptr addrspace(3) %5209, align 8, !dbg !102
  %5211 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %209, !dbg !102
  %5212 = shufflevector <8 x half> %unmaskedload330, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !102
  store <4 x half> %5212, ptr addrspace(3) %5211, align 8, !dbg !102
  %5213 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %212, !dbg !102
  %5214 = shufflevector <8 x half> %unmaskedload330, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !102
  store <4 x half> %5214, ptr addrspace(3) %5213, align 8, !dbg !102
  fence syncscope("workgroup") release, !dbg !102
  tail call void @llvm.amdgcn.s.barrier(), !dbg !102
  fence syncscope("workgroup") acquire, !dbg !102
  %5215 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %231, !dbg !102
  %5216 = load <4 x half>, ptr addrspace(3) %5215, align 8, !dbg !102
  %5217 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %235, !dbg !102
  %5218 = load <4 x half>, ptr addrspace(3) %5217, align 8, !dbg !102
  %5219 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %238, !dbg !102
  %5220 = load <4 x half>, ptr addrspace(3) %5219, align 8, !dbg !102
  %5221 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %240, !dbg !102
  %5222 = load <4 x half>, ptr addrspace(3) %5221, align 8, !dbg !102
  %5223 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %242, !dbg !102
  %5224 = load <4 x half>, ptr addrspace(3) %5223, align 8, !dbg !102
  %5225 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %244, !dbg !102
  %5226 = load <4 x half>, ptr addrspace(3) %5225, align 8, !dbg !102
  %5227 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %246, !dbg !102
  %5228 = load <4 x half>, ptr addrspace(3) %5227, align 8, !dbg !102
  %5229 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %248, !dbg !102
  %5230 = load <4 x half>, ptr addrspace(3) %5229, align 8, !dbg !102
  %5231 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %274, !dbg !102
  %5232 = load <4 x half>, ptr addrspace(3) %5231, align 8, !dbg !102
  %5233 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %276, !dbg !102
  %5234 = load <4 x half>, ptr addrspace(3) %5233, align 8, !dbg !102
  %5235 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %278, !dbg !102
  %5236 = load <4 x half>, ptr addrspace(3) %5235, align 8, !dbg !102
  %5237 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %280, !dbg !102
  %5238 = load <4 x half>, ptr addrspace(3) %5237, align 8, !dbg !102
  %5239 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %281, !dbg !102
  %5240 = load <4 x half>, ptr addrspace(3) %5239, align 8, !dbg !102
  %5241 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %282, !dbg !102
  %5242 = load <4 x half>, ptr addrspace(3) %5241, align 8, !dbg !102
  %5243 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %283, !dbg !102
  %5244 = load <4 x half>, ptr addrspace(3) %5243, align 8, !dbg !102
  %5245 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %284, !dbg !102
  %5246 = load <4 x half>, ptr addrspace(3) %5245, align 8, !dbg !102
  %5247 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %329, !dbg !108
  store <4 x half> %unmaskedload341, ptr addrspace(3) %5247, align 8, !dbg !108
  %5248 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %329
  %5249 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %331
  %5250 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %332
  %5251 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %333
  %5252 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %334
  %5253 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %356
  %5254 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %360
  %5255 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %361
  %5256 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %362
  %5257 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %363
  %5258 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %364
  %5259 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %365
  %5260 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %366
  %5261 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %367
  %5262 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %368
  %5263 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %369
  %5264 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %370
  %5265 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %371
  %5266 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %372
  %5267 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %373
  %5268 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %374
  %5269 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %375
  %5270 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %342
  %5271 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %344
  %5272 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %350
  %5273 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %353
  %5274 = shufflevector <4 x half> %unmaskedload338, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5275 = shufflevector <4 x half> %unmaskedload339, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5276 = shufflevector <4 x half> %unmaskedload340, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5277 = shufflevector <4 x half> %unmaskedload338, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5278 = shufflevector <4 x half> %unmaskedload339, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5279 = shufflevector <4 x half> %unmaskedload340, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5280 = shufflevector <4 x half> %unmaskedload343, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5281 = shufflevector <4 x half> %unmaskedload344, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5282 = shufflevector <4 x half> %unmaskedload343, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5283 = shufflevector <4 x half> %unmaskedload344, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5284 = shufflevector <4 x half> %unmaskedload342, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5285 = shufflevector <4 x half> %unmaskedload342, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5286 = shufflevector <4 x half> %unmaskedload337, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5287 = shufflevector <4 x half> %unmaskedload337, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5288 = shufflevector <1 x float> %unmaskedload334, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !114
  %5289 = shufflevector <1 x float> %unmaskedload335, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !114
  %5290 = shl nuw nsw i32 %159, 2
  %5291 = xor i32 %5290, %266
  %5292 = shl nuw nsw i32 %159, 6
  %5293 = xor i32 %5290, %267
  %5294 = xor i32 %5290, %268
  %5295 = xor i32 %5290, %269
  br label %5296, !dbg !115

5296:                                             ; preds = %4941, %5296
  %5297 = phi ptr addrspace(1) [ %2784, %4941 ], [ %5351, %5296 ]
  %5298 = phi ptr addrspace(1) [ %2777, %4941 ], [ %5349, %5296 ]
  %5299 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), %4941 ], [ %5356, %5296 ]
  %5300 = phi i32 [ 0, %4941 ], [ %5355, %5296 ]
  %5301 = phi i32 [ %25, %4941 ], [ %5560, %5296 ]
  %5302 = phi float [ 0.000000e+00, %4941 ], [ %5510, %5296 ]
  %5303 = phi float [ 0.000000e+00, %4941 ], [ %5511, %5296 ]
  %5304 = phi float [ 0.000000e+00, %4941 ], [ %5512, %5296 ]
  %5305 = phi float [ 0.000000e+00, %4941 ], [ %5513, %5296 ]
  %5306 = phi float [ 0.000000e+00, %4941 ], [ %5514, %5296 ]
  %5307 = phi float [ 0.000000e+00, %4941 ], [ %5515, %5296 ]
  %5308 = phi float [ 0.000000e+00, %4941 ], [ %5516, %5296 ]
  %5309 = phi float [ 0.000000e+00, %4941 ], [ %5517, %5296 ]
  %5310 = phi float [ 0.000000e+00, %4941 ], [ %5518, %5296 ]
  %5311 = phi float [ 0.000000e+00, %4941 ], [ %5519, %5296 ]
  %5312 = phi float [ 0.000000e+00, %4941 ], [ %5520, %5296 ]
  %5313 = phi float [ 0.000000e+00, %4941 ], [ %5521, %5296 ]
  %5314 = phi float [ 0.000000e+00, %4941 ], [ %5522, %5296 ]
  %5315 = phi float [ 0.000000e+00, %4941 ], [ %5523, %5296 ]
  %5316 = phi float [ 0.000000e+00, %4941 ], [ %5524, %5296 ]
  %5317 = phi float [ 0.000000e+00, %4941 ], [ %5525, %5296 ]
  %5318 = phi float [ 0.000000e+00, %4941 ], [ %5544, %5296 ]
  %5319 = phi float [ 0.000000e+00, %4941 ], [ %5545, %5296 ]
  %5320 = phi float [ 0.000000e+00, %4941 ], [ %5546, %5296 ]
  %5321 = phi float [ 0.000000e+00, %4941 ], [ %5547, %5296 ]
  %5322 = phi float [ 0.000000e+00, %4941 ], [ %5548, %5296 ]
  %5323 = phi float [ 0.000000e+00, %4941 ], [ %5549, %5296 ]
  %5324 = phi float [ 0.000000e+00, %4941 ], [ %5550, %5296 ]
  %5325 = phi float [ 0.000000e+00, %4941 ], [ %5551, %5296 ]
  %5326 = phi float [ 0.000000e+00, %4941 ], [ %5552, %5296 ]
  %5327 = phi float [ 0.000000e+00, %4941 ], [ %5553, %5296 ]
  %5328 = phi float [ 0.000000e+00, %4941 ], [ %5554, %5296 ]
  %5329 = phi float [ 0.000000e+00, %4941 ], [ %5555, %5296 ]
  %5330 = phi float [ 0.000000e+00, %4941 ], [ %5556, %5296 ]
  %5331 = phi float [ 0.000000e+00, %4941 ], [ %5557, %5296 ]
  %5332 = phi float [ 0.000000e+00, %4941 ], [ %5558, %5296 ]
  %5333 = phi float [ 0.000000e+00, %4941 ], [ %5559, %5296 ]
  %5334 = phi i32 [ 0, %4941 ], [ %5561, %5296 ]
  %5335 = phi <2 x half> [ %5274, %4941 ], [ %5336, %5296 ]
  %5336 = phi <2 x half> [ %5275, %4941 ], [ %5337, %5296 ]
  %5337 = phi <2 x half> [ %5276, %4941 ], [ %5562, %5296 ]
  %5338 = phi <2 x half> [ %5277, %4941 ], [ %5339, %5296 ]
  %5339 = phi <2 x half> [ %5278, %4941 ], [ %5340, %5296 ]
  %5340 = phi <2 x half> [ %5279, %4941 ], [ %5563, %5296 ]
  %5341 = phi <2 x half> [ %5280, %4941 ], [ %5342, %5296 ]
  %5342 = phi <2 x half> [ %5281, %4941 ], [ %5564, %5296 ]
  %5343 = phi <2 x half> [ %5282, %4941 ], [ %5344, %5296 ]
  %5344 = phi <2 x half> [ %5283, %4941 ], [ %5565, %5296 ]
  %5345 = phi <2 x half> [ %5284, %4941 ], [ %5343, %5296 ]
  %5346 = phi <2 x half> [ %5285, %4941 ], [ %5341, %5296 ]
  %5347 = phi <2 x half> [ %5286, %4941 ], [ %5338, %5296 ]
  %5348 = phi <2 x half> [ %5287, %4941 ], [ %5335, %5296 ]
  %5349 = getelementptr half, ptr addrspace(1) %5298, i64 %131, !dbg !105
  %5350 = getelementptr half, ptr addrspace(1) %5349, i64 %129, !dbg !106
  %unmaskedload1176 = load <4 x half>, ptr addrspace(1) %5350, align 16, !dbg !106
  %5351 = getelementptr half, ptr addrspace(1) %5297, i64 %131, !dbg !107
  %5352 = getelementptr half, ptr addrspace(1) %5351, i64 %129, !dbg !108
  %unmaskedload1177 = load <4 x half>, ptr addrspace(1) %5352, align 16, !dbg !108
  %5353 = add i32 %5300, 1, !dbg !115
  %5354 = icmp slt i32 %5353, 4, !dbg !115
  %5355 = select i1 %5354, i32 %5353, i32 0, !dbg !115
  %.idx1178 = shl i32 %5355, 11, !dbg !108
  %5356 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %.idx1178, !dbg !108
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %5357 = getelementptr inbounds half, ptr addrspace(3) %5356, i32 %329, !dbg !108
  %5358 = shufflevector <2 x half> %5346, <2 x half> %5345, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !108
  store <4 x half> %5358, ptr addrspace(3) %5357, align 8, !dbg !108
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %5359 = getelementptr half, ptr addrspace(3) %5299, i32 %5291, !dbg !108
  %5360 = getelementptr half, ptr addrspace(3) %5359, i32 %5292, !dbg !108
  %5361 = load <4 x half>, ptr addrspace(3) %5360, align 8, !dbg !108
  %5362 = getelementptr half, ptr addrspace(3) %5299, i32 %5293, !dbg !108
  %5363 = getelementptr half, ptr addrspace(3) %5362, i32 %5292, !dbg !108
  %5364 = load <4 x half>, ptr addrspace(3) %5363, align 8, !dbg !108
  %5365 = getelementptr half, ptr addrspace(3) %5299, i32 %5294, !dbg !108
  %5366 = getelementptr half, ptr addrspace(3) %5365, i32 %5292, !dbg !108
  %5367 = load <4 x half>, ptr addrspace(3) %5366, align 8, !dbg !108
  %5368 = getelementptr half, ptr addrspace(3) %5299, i32 %5295, !dbg !108
  %5369 = getelementptr half, ptr addrspace(3) %5368, i32 %5292, !dbg !108
  %5370 = load <4 x half>, ptr addrspace(3) %5369, align 8, !dbg !108
  %5371 = shufflevector <2 x half> %5348, <2 x half> %5347, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !106
  store <4 x half> %5371, ptr addrspace(3) %5248, align 8, !dbg !106
  fence syncscope("workgroup") release, !dbg !106
  tail call void @llvm.amdgcn.s.barrier(), !dbg !106
  fence syncscope("workgroup") acquire, !dbg !106
  %5372 = load <4 x half>, ptr addrspace(3) %5249, align 8, !dbg !106
  %5373 = load <4 x half>, ptr addrspace(3) %5250, align 8, !dbg !106
  %5374 = load <4 x half>, ptr addrspace(3) %5251, align 8, !dbg !106
  %5375 = load <4 x half>, ptr addrspace(3) %5252, align 8, !dbg !106
  %5376 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5372, <4 x half> %5191, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5377 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5373, <4 x half> %5192, <4 x float> %5376, i32 0, i32 0, i32 0), !dbg !116
  %5378 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5374, <4 x half> %5193, <4 x float> %5377, i32 0, i32 0, i32 0), !dbg !116
  %5379 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5375, <4 x half> %5194, <4 x float> %5378, i32 0, i32 0, i32 0), !dbg !116
  %5380 = extractelement <4 x float> %5379, i64 0, !dbg !116
  %5381 = extractelement <4 x float> %5379, i64 1, !dbg !116
  %5382 = extractelement <4 x float> %5379, i64 2, !dbg !116
  %5383 = extractelement <4 x float> %5379, i64 3, !dbg !116
  %5384 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5372, <4 x half> %5195, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5385 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5373, <4 x half> %5196, <4 x float> %5384, i32 0, i32 0, i32 0), !dbg !116
  %5386 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5374, <4 x half> %5197, <4 x float> %5385, i32 0, i32 0, i32 0), !dbg !116
  %5387 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5375, <4 x half> %5198, <4 x float> %5386, i32 0, i32 0, i32 0), !dbg !116
  %5388 = extractelement <4 x float> %5387, i64 0, !dbg !116
  %5389 = extractelement <4 x float> %5387, i64 1, !dbg !116
  %5390 = extractelement <4 x float> %5387, i64 2, !dbg !116
  %5391 = extractelement <4 x float> %5387, i64 3, !dbg !116
  %5392 = fsub float %5380, %2765, !dbg !117
  %5393 = fsub float %5381, %2765, !dbg !117
  %5394 = fsub float %5382, %2765, !dbg !117
  %5395 = fsub float %5383, %2765, !dbg !117
  %5396 = fsub float %5388, %2766, !dbg !117
  %5397 = fsub float %5389, %2766, !dbg !117
  %5398 = fsub float %5390, %2766, !dbg !117
  %5399 = fsub float %5391, %2766, !dbg !117
  %5400 = tail call float @llvm.amdgcn.exp2.f32(float %5392), !dbg !118
  %5401 = tail call float @llvm.amdgcn.exp2.f32(float %5393), !dbg !118
  %5402 = tail call float @llvm.amdgcn.exp2.f32(float %5394), !dbg !118
  %5403 = tail call float @llvm.amdgcn.exp2.f32(float %5395), !dbg !118
  %5404 = tail call float @llvm.amdgcn.exp2.f32(float %5396), !dbg !118
  %5405 = tail call float @llvm.amdgcn.exp2.f32(float %5397), !dbg !118
  %5406 = tail call float @llvm.amdgcn.exp2.f32(float %5398), !dbg !118
  %5407 = tail call float @llvm.amdgcn.exp2.f32(float %5399), !dbg !118
  %5408 = insertelement <2 x i32> poison, i32 %5301, i64 0, !dbg !119
  %5409 = shufflevector <2 x i32> %5408, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !119
  %5410 = or disjoint <2 x i32> %5409, %76, !dbg !119
  %5411 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5361, <4 x half> %5232, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5412 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5364, <4 x half> %5234, <4 x float> %5411, i32 0, i32 0, i32 0), !dbg !120
  %5413 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5367, <4 x half> %5236, <4 x float> %5412, i32 0, i32 0, i32 0), !dbg !120
  %5414 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5370, <4 x half> %5238, <4 x float> %5413, i32 0, i32 0, i32 0), !dbg !120
  %5415 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5361, <4 x half> %5240, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5416 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5364, <4 x half> %5242, <4 x float> %5415, i32 0, i32 0, i32 0), !dbg !120
  %5417 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5367, <4 x half> %5244, <4 x float> %5416, i32 0, i32 0, i32 0), !dbg !120
  %5418 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5370, <4 x half> %5246, <4 x float> %5417, i32 0, i32 0, i32 0), !dbg !120
  %5419 = icmp slt <2 x i32> %421, %5410, !dbg !121
  %5420 = insertelement <2 x float> poison, float %5400, i64 0, !dbg !122
  %5421 = insertelement <2 x float> %5420, float %5401, i64 1, !dbg !122
  %5422 = select <2 x i1> %5419, <2 x float> zeroinitializer, <2 x float> %5421, !dbg !122
  %5423 = shufflevector <4 x float> %5414, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5424 = fsub <2 x float> %5423, %5288, !dbg !114
  %5425 = fmul <2 x float> %5422, %5424, !dbg !123
  %5426 = fptrunc <2 x float> %5425 to <2 x half>, !dbg !124
  %5427 = or disjoint <2 x i32> %5409, %75, !dbg !119
  %5428 = icmp slt <2 x i32> %421, %5427, !dbg !121
  %5429 = insertelement <2 x float> poison, float %5402, i64 0, !dbg !122
  %5430 = insertelement <2 x float> %5429, float %5403, i64 1, !dbg !122
  %5431 = select <2 x i1> %5428, <2 x float> zeroinitializer, <2 x float> %5430, !dbg !122
  %5432 = shufflevector <4 x float> %5414, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5433 = fsub <2 x float> %5432, %5288, !dbg !114
  %5434 = fmul <2 x float> %5431, %5433, !dbg !123
  %5435 = fptrunc <2 x float> %5434 to <2 x half>, !dbg !124
  %5436 = icmp slt <2 x i32> %423, %5410, !dbg !121
  %5437 = insertelement <2 x float> poison, float %5404, i64 0, !dbg !122
  %5438 = insertelement <2 x float> %5437, float %5405, i64 1, !dbg !122
  %5439 = select <2 x i1> %5436, <2 x float> zeroinitializer, <2 x float> %5438, !dbg !122
  %5440 = shufflevector <4 x float> %5418, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5441 = fsub <2 x float> %5440, %5289, !dbg !114
  %5442 = fmul <2 x float> %5439, %5441, !dbg !123
  %5443 = fptrunc <2 x float> %5442 to <2 x half>, !dbg !124
  %5444 = shufflevector <4 x float> %5418, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5445 = fsub <2 x float> %5444, %5289, !dbg !114
  %5446 = icmp slt <2 x i32> %423, %5427, !dbg !121
  %5447 = insertelement <2 x float> poison, float %5406, i64 0, !dbg !122
  %5448 = insertelement <2 x float> %5447, float %5407, i64 1, !dbg !122
  %5449 = select <2 x i1> %5446, <2 x float> zeroinitializer, <2 x float> %5448, !dbg !122
  %5450 = fmul <2 x float> %5449, %5445, !dbg !123
  %5451 = fptrunc <2 x float> %5450 to <2 x half>, !dbg !124
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  store <4 x half> %5371, ptr addrspace(3) %5253, align 8, !dbg !125
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  %5452 = load <1 x half>, ptr addrspace(3) %5254, align 2, !dbg !125
  %5453 = load <1 x half>, ptr addrspace(3) %5255, align 2, !dbg !125
  %5454 = load <1 x half>, ptr addrspace(3) %5256, align 2, !dbg !125
  %5455 = shufflevector <1 x half> %5454, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5456 = load <1 x half>, ptr addrspace(3) %5257, align 2, !dbg !125
  %5457 = shufflevector <1 x half> %5456, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5458 = load <1 x half>, ptr addrspace(3) %5258, align 2, !dbg !125
  %5459 = load <1 x half>, ptr addrspace(3) %5259, align 2, !dbg !125
  %5460 = load <1 x half>, ptr addrspace(3) %5260, align 2, !dbg !125
  %5461 = shufflevector <1 x half> %5460, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5462 = load <1 x half>, ptr addrspace(3) %5261, align 2, !dbg !125
  %5463 = shufflevector <1 x half> %5462, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5464 = load <1 x half>, ptr addrspace(3) %5262, align 2, !dbg !125
  %5465 = load <1 x half>, ptr addrspace(3) %5263, align 2, !dbg !125
  %5466 = load <1 x half>, ptr addrspace(3) %5264, align 2, !dbg !125
  %5467 = shufflevector <1 x half> %5466, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5468 = load <1 x half>, ptr addrspace(3) %5265, align 2, !dbg !125
  %5469 = shufflevector <1 x half> %5468, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5470 = load <1 x half>, ptr addrspace(3) %5266, align 2, !dbg !125
  %5471 = load <1 x half>, ptr addrspace(3) %5267, align 2, !dbg !125
  %5472 = load <1 x half>, ptr addrspace(3) %5268, align 2, !dbg !125
  %5473 = shufflevector <1 x half> %5472, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5474 = load <1 x half>, ptr addrspace(3) %5269, align 2, !dbg !125
  %5475 = shufflevector <1 x half> %5474, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5476 = shufflevector <2 x half> %5426, <2 x half> %5435, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5476, ptr addrspace(3) %5270, align 8, !dbg !124
  %5477 = shufflevector <2 x half> %5443, <2 x half> %5451, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5477, ptr addrspace(3) %5271, align 8, !dbg !124
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5478 = load <4 x half>, ptr addrspace(3) %5272, align 8, !dbg !124
  %5479 = load <4 x half>, ptr addrspace(3) %5273, align 8, !dbg !124
  %5480 = shufflevector <1 x half> %5452, <1 x half> %5453, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5481 = shufflevector <4 x half> %5480, <4 x half> %5455, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5482 = shufflevector <4 x half> %5481, <4 x half> %5457, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5483 = shufflevector <1 x half> %5458, <1 x half> %5459, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5484 = shufflevector <4 x half> %5483, <4 x half> %5461, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5485 = shufflevector <4 x half> %5484, <4 x half> %5463, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5486 = shufflevector <1 x half> %5464, <1 x half> %5465, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5487 = shufflevector <4 x half> %5486, <4 x half> %5467, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5488 = shufflevector <4 x half> %5487, <4 x half> %5469, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5489 = shufflevector <1 x half> %5470, <1 x half> %5471, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5490 = shufflevector <4 x half> %5489, <4 x half> %5473, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5491 = shufflevector <4 x half> %5490, <4 x half> %5475, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5492 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %5302, i64 0, !dbg !126
  %5493 = insertelement <16 x float> %5492, float %5303, i64 1, !dbg !126
  %5494 = insertelement <16 x float> %5493, float %5304, i64 2, !dbg !126
  %5495 = insertelement <16 x float> %5494, float %5305, i64 3, !dbg !126
  %5496 = insertelement <16 x float> %5495, float %5306, i64 4, !dbg !126
  %5497 = insertelement <16 x float> %5496, float %5307, i64 5, !dbg !126
  %5498 = insertelement <16 x float> %5497, float %5308, i64 6, !dbg !126
  %5499 = insertelement <16 x float> %5498, float %5309, i64 7, !dbg !126
  %5500 = insertelement <16 x float> %5499, float %5310, i64 8, !dbg !126
  %5501 = insertelement <16 x float> %5500, float %5311, i64 9, !dbg !126
  %5502 = insertelement <16 x float> %5501, float %5312, i64 10, !dbg !126
  %5503 = insertelement <16 x float> %5502, float %5313, i64 11, !dbg !126
  %5504 = insertelement <16 x float> %5503, float %5314, i64 12, !dbg !126
  %5505 = insertelement <16 x float> %5504, float %5315, i64 13, !dbg !126
  %5506 = insertelement <16 x float> %5505, float %5316, i64 14, !dbg !126
  %5507 = insertelement <16 x float> %5506, float %5317, i64 15, !dbg !126
  %5508 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5482, <4 x half> %5478, <16 x float> %5507, i32 0, i32 0, i32 0), !dbg !126
  %5509 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5485, <4 x half> %5479, <16 x float> %5508, i32 0, i32 0, i32 0), !dbg !126
  %5510 = extractelement <16 x float> %5509, i64 0, !dbg !126
  %5511 = extractelement <16 x float> %5509, i64 1, !dbg !126
  %5512 = extractelement <16 x float> %5509, i64 2, !dbg !126
  %5513 = extractelement <16 x float> %5509, i64 3, !dbg !126
  %5514 = extractelement <16 x float> %5509, i64 4, !dbg !126
  %5515 = extractelement <16 x float> %5509, i64 5, !dbg !126
  %5516 = extractelement <16 x float> %5509, i64 6, !dbg !126
  %5517 = extractelement <16 x float> %5509, i64 7, !dbg !126
  %5518 = extractelement <16 x float> %5509, i64 8, !dbg !126
  %5519 = extractelement <16 x float> %5509, i64 9, !dbg !126
  %5520 = extractelement <16 x float> %5509, i64 10, !dbg !126
  %5521 = extractelement <16 x float> %5509, i64 11, !dbg !126
  %5522 = extractelement <16 x float> %5509, i64 12, !dbg !126
  %5523 = extractelement <16 x float> %5509, i64 13, !dbg !126
  %5524 = extractelement <16 x float> %5509, i64 14, !dbg !126
  %5525 = extractelement <16 x float> %5509, i64 15, !dbg !126
  %5526 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %5318, i64 0, !dbg !126
  %5527 = insertelement <16 x float> %5526, float %5319, i64 1, !dbg !126
  %5528 = insertelement <16 x float> %5527, float %5320, i64 2, !dbg !126
  %5529 = insertelement <16 x float> %5528, float %5321, i64 3, !dbg !126
  %5530 = insertelement <16 x float> %5529, float %5322, i64 4, !dbg !126
  %5531 = insertelement <16 x float> %5530, float %5323, i64 5, !dbg !126
  %5532 = insertelement <16 x float> %5531, float %5324, i64 6, !dbg !126
  %5533 = insertelement <16 x float> %5532, float %5325, i64 7, !dbg !126
  %5534 = insertelement <16 x float> %5533, float %5326, i64 8, !dbg !126
  %5535 = insertelement <16 x float> %5534, float %5327, i64 9, !dbg !126
  %5536 = insertelement <16 x float> %5535, float %5328, i64 10, !dbg !126
  %5537 = insertelement <16 x float> %5536, float %5329, i64 11, !dbg !126
  %5538 = insertelement <16 x float> %5537, float %5330, i64 12, !dbg !126
  %5539 = insertelement <16 x float> %5538, float %5331, i64 13, !dbg !126
  %5540 = insertelement <16 x float> %5539, float %5332, i64 14, !dbg !126
  %5541 = insertelement <16 x float> %5540, float %5333, i64 15, !dbg !126
  %5542 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5488, <4 x half> %5478, <16 x float> %5541, i32 0, i32 0, i32 0), !dbg !126
  %5543 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5491, <4 x half> %5479, <16 x float> %5542, i32 0, i32 0, i32 0), !dbg !126
  %5544 = extractelement <16 x float> %5543, i64 0, !dbg !126
  %5545 = extractelement <16 x float> %5543, i64 1, !dbg !126
  %5546 = extractelement <16 x float> %5543, i64 2, !dbg !126
  %5547 = extractelement <16 x float> %5543, i64 3, !dbg !126
  %5548 = extractelement <16 x float> %5543, i64 4, !dbg !126
  %5549 = extractelement <16 x float> %5543, i64 5, !dbg !126
  %5550 = extractelement <16 x float> %5543, i64 6, !dbg !126
  %5551 = extractelement <16 x float> %5543, i64 7, !dbg !126
  %5552 = extractelement <16 x float> %5543, i64 8, !dbg !126
  %5553 = extractelement <16 x float> %5543, i64 9, !dbg !126
  %5554 = extractelement <16 x float> %5543, i64 10, !dbg !126
  %5555 = extractelement <16 x float> %5543, i64 11, !dbg !126
  %5556 = extractelement <16 x float> %5543, i64 12, !dbg !126
  %5557 = extractelement <16 x float> %5543, i64 13, !dbg !126
  %5558 = extractelement <16 x float> %5543, i64 14, !dbg !126
  %5559 = extractelement <16 x float> %5543, i64 15, !dbg !126
  %5560 = add nuw nsw i32 %5301, 16, !dbg !127
  %5561 = add nuw nsw i32 %5334, 1, !dbg !115
  %exitcond2334.not = icmp eq i32 %5561, 4, !dbg !115
  %5562 = shufflevector <4 x half> %unmaskedload1176, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5563 = shufflevector <4 x half> %unmaskedload1176, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  %5564 = shufflevector <4 x half> %unmaskedload1177, <4 x half> poison, <2 x i32> <i32 0, i32 1>
  %5565 = shufflevector <4 x half> %unmaskedload1177, <4 x half> poison, <2 x i32> <i32 2, i32 3>
  br i1 %exitcond2334.not, label %5566, label %5296, !dbg !115

5566:                                             ; preds = %5296
  %5567 = ashr exact i32 %25, 5, !dbg !128
  %5568 = getelementptr half, ptr addrspace(1) %23, i64 %998, !dbg !129
  %5569 = icmp sgt i32 %5567, 0, !dbg !131
  %5570 = getelementptr half, ptr addrspace(1) %23, i64 %53, !dbg !132
  %5571 = insertelement <8 x i1> poison, i1 %5569, i64 0, !dbg !132
  %5572 = shufflevector <8 x i1> %5571, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !132
  %5573 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5570, i32 16, <8 x i1> %5572, <8 x half> zeroinitializer), !dbg !132
  %5574 = getelementptr half, ptr addrspace(1) %5568, i64 %998, !dbg !129
  %5575 = icmp sgt i32 %5567, 1, !dbg !131
  %5576 = getelementptr half, ptr addrspace(1) %5568, i64 %53, !dbg !132
  %5577 = insertelement <8 x i1> poison, i1 %5575, i64 0, !dbg !132
  %5578 = shufflevector <8 x i1> %5577, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !132
  %5579 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5576, i32 16, <8 x i1> %5578, <8 x half> zeroinitializer), !dbg !132
  %5580 = getelementptr half, ptr addrspace(1) %5574, i64 %998, !dbg !129
  %5581 = icmp sgt i32 %5567, 2, !dbg !131
  %5582 = getelementptr half, ptr addrspace(1) %5574, i64 %53, !dbg !132
  %5583 = insertelement <8 x i1> poison, i1 %5581, i64 0, !dbg !132
  %5584 = shufflevector <8 x i1> %5583, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !132
  %5585 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5582, i32 16, <8 x i1> %5584, <8 x half> zeroinitializer), !dbg !132
  %5586 = icmp sgt i32 %5567, 3, !dbg !131
  %5587 = getelementptr half, ptr addrspace(1) %5580, i64 %53, !dbg !132
  %5588 = insertelement <8 x i1> poison, i1 %5586, i64 0, !dbg !132
  %5589 = shufflevector <8 x i1> %5588, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !132
  %5590 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5587, i32 16, <8 x i1> %5589, <8 x half> zeroinitializer), !dbg !132
  %5591 = getelementptr half, ptr addrspace(1) %61, i64 %998, !dbg !133
  %5592 = getelementptr half, ptr addrspace(1) %61, i64 %53, !dbg !134
  %5593 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5592, i32 16, <8 x i1> %5572, <8 x half> zeroinitializer), !dbg !134
  %5594 = getelementptr half, ptr addrspace(1) %5591, i64 %998, !dbg !133
  %5595 = getelementptr half, ptr addrspace(1) %5591, i64 %53, !dbg !134
  %5596 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5595, i32 16, <8 x i1> %5578, <8 x half> zeroinitializer), !dbg !134
  %5597 = getelementptr half, ptr addrspace(1) %5594, i64 %998, !dbg !133
  %5598 = getelementptr half, ptr addrspace(1) %5594, i64 %53, !dbg !134
  %5599 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5598, i32 16, <8 x i1> %5584, <8 x half> zeroinitializer), !dbg !134
  %5600 = getelementptr half, ptr addrspace(1) %5597, i64 %53, !dbg !134
  %5601 = tail call <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) %5600, i32 16, <8 x i1> %5589, <8 x half> zeroinitializer), !dbg !134
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %5602 = getelementptr half, ptr addrspace(3) %5356, i32 %270, !dbg !108
  %5603 = getelementptr half, ptr addrspace(3) %5602, i32 %272, !dbg !108
  %5604 = load <4 x half>, ptr addrspace(3) %5603, align 8, !dbg !108
  %5605 = getelementptr half, ptr addrspace(3) %5356, i32 %275, !dbg !108
  %5606 = getelementptr half, ptr addrspace(3) %5605, i32 %272, !dbg !108
  %5607 = load <4 x half>, ptr addrspace(3) %5606, align 8, !dbg !108
  %5608 = getelementptr half, ptr addrspace(3) %5356, i32 %277, !dbg !108
  %5609 = getelementptr half, ptr addrspace(3) %5608, i32 %272, !dbg !108
  %5610 = load <4 x half>, ptr addrspace(3) %5609, align 8, !dbg !108
  %5611 = getelementptr half, ptr addrspace(3) %5356, i32 %279, !dbg !108
  %5612 = getelementptr half, ptr addrspace(3) %5611, i32 %272, !dbg !108
  %5613 = load <4 x half>, ptr addrspace(3) %5612, align 8, !dbg !108
  %5614 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !101
  %5615 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !101
  %5616 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !101
  %5617 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !101
  %5618 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !101
  %5619 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !101
  %5620 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !101
  %5621 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !101
  %5622 = shufflevector <2 x half> %5335, <2 x half> %5338, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !106
  store <4 x half> %5622, ptr addrspace(3) %5248, align 8, !dbg !106
  fence syncscope("workgroup") release, !dbg !106
  tail call void @llvm.amdgcn.s.barrier(), !dbg !106
  fence syncscope("workgroup") acquire, !dbg !106
  %5623 = load <4 x half>, ptr addrspace(3) %5249, align 8, !dbg !106
  %5624 = load <4 x half>, ptr addrspace(3) %5250, align 8, !dbg !106
  %5625 = load <4 x half>, ptr addrspace(3) %5251, align 8, !dbg !106
  %5626 = load <4 x half>, ptr addrspace(3) %5252, align 8, !dbg !106
  %5627 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5623, <4 x half> %5614, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5628 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5624, <4 x half> %5615, <4 x float> %5627, i32 0, i32 0, i32 0), !dbg !116
  %5629 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5625, <4 x half> %5616, <4 x float> %5628, i32 0, i32 0, i32 0), !dbg !116
  %5630 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5626, <4 x half> %5617, <4 x float> %5629, i32 0, i32 0, i32 0), !dbg !116
  %5631 = extractelement <4 x float> %5630, i64 0, !dbg !116
  %5632 = extractelement <4 x float> %5630, i64 1, !dbg !116
  %5633 = extractelement <4 x float> %5630, i64 2, !dbg !116
  %5634 = extractelement <4 x float> %5630, i64 3, !dbg !116
  %5635 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5623, <4 x half> %5618, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5636 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5624, <4 x half> %5619, <4 x float> %5635, i32 0, i32 0, i32 0), !dbg !116
  %5637 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5625, <4 x half> %5620, <4 x float> %5636, i32 0, i32 0, i32 0), !dbg !116
  %5638 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5626, <4 x half> %5621, <4 x float> %5637, i32 0, i32 0, i32 0), !dbg !116
  %5639 = extractelement <4 x float> %5638, i64 0, !dbg !116
  %5640 = extractelement <4 x float> %5638, i64 1, !dbg !116
  %5641 = extractelement <4 x float> %5638, i64 2, !dbg !116
  %5642 = extractelement <4 x float> %5638, i64 3, !dbg !116
  %5643 = fsub float %5631, %2765, !dbg !117
  %5644 = fsub float %5632, %2765, !dbg !117
  %5645 = fsub float %5633, %2765, !dbg !117
  %5646 = fsub float %5634, %2765, !dbg !117
  %5647 = fsub float %5639, %2766, !dbg !117
  %5648 = fsub float %5640, %2766, !dbg !117
  %5649 = fsub float %5641, %2766, !dbg !117
  %5650 = fsub float %5642, %2766, !dbg !117
  %5651 = tail call float @llvm.amdgcn.exp2.f32(float %5643), !dbg !118
  %5652 = tail call float @llvm.amdgcn.exp2.f32(float %5644), !dbg !118
  %5653 = tail call float @llvm.amdgcn.exp2.f32(float %5645), !dbg !118
  %5654 = tail call float @llvm.amdgcn.exp2.f32(float %5646), !dbg !118
  %5655 = tail call float @llvm.amdgcn.exp2.f32(float %5647), !dbg !118
  %5656 = tail call float @llvm.amdgcn.exp2.f32(float %5648), !dbg !118
  %5657 = tail call float @llvm.amdgcn.exp2.f32(float %5649), !dbg !118
  %5658 = tail call float @llvm.amdgcn.exp2.f32(float %5650), !dbg !118
  %5659 = insertelement <2 x i32> poison, i32 %5560, i64 0, !dbg !119
  %5660 = shufflevector <2 x i32> %5659, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !119
  %5661 = or disjoint <2 x i32> %5660, %76, !dbg !119
  %5662 = or disjoint <2 x i32> %5660, %75, !dbg !119
  %5663 = load <4 x half>, ptr addrspace(3) %5231, align 8, !dbg !102
  %5664 = load <4 x half>, ptr addrspace(3) %5233, align 8, !dbg !102
  %5665 = load <4 x half>, ptr addrspace(3) %5235, align 8, !dbg !102
  %5666 = load <4 x half>, ptr addrspace(3) %5237, align 8, !dbg !102
  %5667 = load <4 x half>, ptr addrspace(3) %5239, align 8, !dbg !102
  %5668 = load <4 x half>, ptr addrspace(3) %5241, align 8, !dbg !102
  %5669 = load <4 x half>, ptr addrspace(3) %5243, align 8, !dbg !102
  %5670 = load <4 x half>, ptr addrspace(3) %5245, align 8, !dbg !102
  %5671 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5604, <4 x half> %5663, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5672 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5607, <4 x half> %5664, <4 x float> %5671, i32 0, i32 0, i32 0), !dbg !120
  %5673 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5610, <4 x half> %5665, <4 x float> %5672, i32 0, i32 0, i32 0), !dbg !120
  %5674 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5613, <4 x half> %5666, <4 x float> %5673, i32 0, i32 0, i32 0), !dbg !120
  %5675 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5604, <4 x half> %5667, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5676 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5607, <4 x half> %5668, <4 x float> %5675, i32 0, i32 0, i32 0), !dbg !120
  %5677 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5610, <4 x half> %5669, <4 x float> %5676, i32 0, i32 0, i32 0), !dbg !120
  %5678 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5613, <4 x half> %5670, <4 x float> %5677, i32 0, i32 0, i32 0), !dbg !120
  %5679 = icmp slt <2 x i32> %421, %5661, !dbg !121
  %5680 = insertelement <2 x float> poison, float %5651, i64 0, !dbg !122
  %5681 = insertelement <2 x float> %5680, float %5652, i64 1, !dbg !122
  %5682 = select <2 x i1> %5679, <2 x float> zeroinitializer, <2 x float> %5681, !dbg !122
  %5683 = shufflevector <4 x float> %5674, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5684 = fsub <2 x float> %5683, %5288, !dbg !114
  %5685 = fmul <2 x float> %5682, %5684, !dbg !123
  %5686 = fptrunc <2 x float> %5685 to <2 x half>, !dbg !124
  %5687 = icmp slt <2 x i32> %421, %5662, !dbg !121
  %5688 = insertelement <2 x float> poison, float %5653, i64 0, !dbg !122
  %5689 = insertelement <2 x float> %5688, float %5654, i64 1, !dbg !122
  %5690 = select <2 x i1> %5687, <2 x float> zeroinitializer, <2 x float> %5689, !dbg !122
  %5691 = shufflevector <4 x float> %5674, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5692 = fsub <2 x float> %5691, %5288, !dbg !114
  %5693 = fmul <2 x float> %5690, %5692, !dbg !123
  %5694 = fptrunc <2 x float> %5693 to <2 x half>, !dbg !124
  %5695 = icmp slt <2 x i32> %423, %5661, !dbg !121
  %5696 = insertelement <2 x float> poison, float %5655, i64 0, !dbg !122
  %5697 = insertelement <2 x float> %5696, float %5656, i64 1, !dbg !122
  %5698 = select <2 x i1> %5695, <2 x float> zeroinitializer, <2 x float> %5697, !dbg !122
  %5699 = shufflevector <4 x float> %5678, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5700 = fsub <2 x float> %5699, %5289, !dbg !114
  %5701 = fmul <2 x float> %5698, %5700, !dbg !123
  %5702 = fptrunc <2 x float> %5701 to <2 x half>, !dbg !124
  %5703 = icmp slt <2 x i32> %423, %5662, !dbg !121
  %5704 = insertelement <2 x float> poison, float %5657, i64 0, !dbg !122
  %5705 = insertelement <2 x float> %5704, float %5658, i64 1, !dbg !122
  %5706 = select <2 x i1> %5703, <2 x float> zeroinitializer, <2 x float> %5705, !dbg !122
  %5707 = shufflevector <4 x float> %5678, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5708 = fsub <2 x float> %5707, %5289, !dbg !114
  %5709 = fmul <2 x float> %5706, %5708, !dbg !123
  %5710 = fptrunc <2 x float> %5709 to <2 x half>, !dbg !124
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  store <4 x half> %5622, ptr addrspace(3) %5253, align 8, !dbg !125
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  %5711 = load <1 x half>, ptr addrspace(3) %5254, align 2, !dbg !125
  %5712 = load <1 x half>, ptr addrspace(3) %5255, align 2, !dbg !125
  %5713 = load <1 x half>, ptr addrspace(3) %5256, align 2, !dbg !125
  %5714 = shufflevector <1 x half> %5713, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5715 = load <1 x half>, ptr addrspace(3) %5257, align 2, !dbg !125
  %5716 = shufflevector <1 x half> %5715, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5717 = load <1 x half>, ptr addrspace(3) %5258, align 2, !dbg !125
  %5718 = load <1 x half>, ptr addrspace(3) %5259, align 2, !dbg !125
  %5719 = load <1 x half>, ptr addrspace(3) %5260, align 2, !dbg !125
  %5720 = shufflevector <1 x half> %5719, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5721 = load <1 x half>, ptr addrspace(3) %5261, align 2, !dbg !125
  %5722 = shufflevector <1 x half> %5721, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5723 = load <1 x half>, ptr addrspace(3) %5262, align 2, !dbg !125
  %5724 = load <1 x half>, ptr addrspace(3) %5263, align 2, !dbg !125
  %5725 = load <1 x half>, ptr addrspace(3) %5264, align 2, !dbg !125
  %5726 = shufflevector <1 x half> %5725, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5727 = load <1 x half>, ptr addrspace(3) %5265, align 2, !dbg !125
  %5728 = shufflevector <1 x half> %5727, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5729 = load <1 x half>, ptr addrspace(3) %5266, align 2, !dbg !125
  %5730 = load <1 x half>, ptr addrspace(3) %5267, align 2, !dbg !125
  %5731 = load <1 x half>, ptr addrspace(3) %5268, align 2, !dbg !125
  %5732 = shufflevector <1 x half> %5731, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5733 = load <1 x half>, ptr addrspace(3) %5269, align 2, !dbg !125
  %5734 = shufflevector <1 x half> %5733, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5735 = shufflevector <2 x half> %5686, <2 x half> %5694, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5735, ptr addrspace(3) %5270, align 8, !dbg !124
  %5736 = shufflevector <2 x half> %5702, <2 x half> %5710, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5736, ptr addrspace(3) %5271, align 8, !dbg !124
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5737 = load <4 x half>, ptr addrspace(3) %5272, align 8, !dbg !124
  %5738 = load <4 x half>, ptr addrspace(3) %5273, align 8, !dbg !124
  %5739 = shufflevector <1 x half> %5711, <1 x half> %5712, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5740 = shufflevector <4 x half> %5739, <4 x half> %5714, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5741 = shufflevector <4 x half> %5740, <4 x half> %5716, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5742 = shufflevector <1 x half> %5717, <1 x half> %5718, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5743 = shufflevector <4 x half> %5742, <4 x half> %5720, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5744 = shufflevector <4 x half> %5743, <4 x half> %5722, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5745 = shufflevector <1 x half> %5723, <1 x half> %5724, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5746 = shufflevector <4 x half> %5745, <4 x half> %5726, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5747 = shufflevector <4 x half> %5746, <4 x half> %5728, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5748 = shufflevector <1 x half> %5729, <1 x half> %5730, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5749 = shufflevector <4 x half> %5748, <4 x half> %5732, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5750 = shufflevector <4 x half> %5749, <4 x half> %5734, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5751 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5741, <4 x half> %5737, <16 x float> %5509, i32 0, i32 0, i32 0), !dbg !126
  %5752 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5744, <4 x half> %5738, <16 x float> %5751, i32 0, i32 0, i32 0), !dbg !126
  %5753 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5747, <4 x half> %5737, <16 x float> %5543, i32 0, i32 0, i32 0), !dbg !126
  %5754 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5750, <4 x half> %5738, <16 x float> %5753, i32 0, i32 0, i32 0), !dbg !126
  %5755 = add i32 %5301, 32, !dbg !127
  %5756 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 34816), i32 %329, !dbg !108
  %5757 = shufflevector <2 x half> %5341, <2 x half> %5343, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !108
  store <4 x half> %5757, ptr addrspace(3) %5756, align 8, !dbg !108
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %5758 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 34816), i32 %331, !dbg !108
  %5759 = load <4 x half>, ptr addrspace(3) %5758, align 8, !dbg !108
  %5760 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 34816), i32 %332, !dbg !108
  %5761 = load <4 x half>, ptr addrspace(3) %5760, align 8, !dbg !108
  %5762 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 34816), i32 %333, !dbg !108
  %5763 = load <4 x half>, ptr addrspace(3) %5762, align 8, !dbg !108
  %5764 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 34816), i32 %334, !dbg !108
  %5765 = load <4 x half>, ptr addrspace(3) %5764, align 8, !dbg !108
  %5766 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !101
  %5767 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !101
  %5768 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !101
  %5769 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !101
  %5770 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !101
  %5771 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !101
  %5772 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !101
  %5773 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !101
  %5774 = shufflevector <2 x half> %5336, <2 x half> %5339, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !106
  store <4 x half> %5774, ptr addrspace(3) %5248, align 8, !dbg !106
  fence syncscope("workgroup") release, !dbg !106
  tail call void @llvm.amdgcn.s.barrier(), !dbg !106
  fence syncscope("workgroup") acquire, !dbg !106
  %5775 = load <4 x half>, ptr addrspace(3) %5249, align 8, !dbg !106
  %5776 = load <4 x half>, ptr addrspace(3) %5250, align 8, !dbg !106
  %5777 = load <4 x half>, ptr addrspace(3) %5251, align 8, !dbg !106
  %5778 = load <4 x half>, ptr addrspace(3) %5252, align 8, !dbg !106
  %5779 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5775, <4 x half> %5766, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5780 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5776, <4 x half> %5767, <4 x float> %5779, i32 0, i32 0, i32 0), !dbg !116
  %5781 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5777, <4 x half> %5768, <4 x float> %5780, i32 0, i32 0, i32 0), !dbg !116
  %5782 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5778, <4 x half> %5769, <4 x float> %5781, i32 0, i32 0, i32 0), !dbg !116
  %5783 = extractelement <4 x float> %5782, i64 0, !dbg !116
  %5784 = extractelement <4 x float> %5782, i64 1, !dbg !116
  %5785 = extractelement <4 x float> %5782, i64 2, !dbg !116
  %5786 = extractelement <4 x float> %5782, i64 3, !dbg !116
  %5787 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5775, <4 x half> %5770, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5788 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5776, <4 x half> %5771, <4 x float> %5787, i32 0, i32 0, i32 0), !dbg !116
  %5789 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5777, <4 x half> %5772, <4 x float> %5788, i32 0, i32 0, i32 0), !dbg !116
  %5790 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5778, <4 x half> %5773, <4 x float> %5789, i32 0, i32 0, i32 0), !dbg !116
  %5791 = extractelement <4 x float> %5790, i64 0, !dbg !116
  %5792 = extractelement <4 x float> %5790, i64 1, !dbg !116
  %5793 = extractelement <4 x float> %5790, i64 2, !dbg !116
  %5794 = extractelement <4 x float> %5790, i64 3, !dbg !116
  %5795 = fsub float %5783, %2765, !dbg !117
  %5796 = fsub float %5784, %2765, !dbg !117
  %5797 = fsub float %5785, %2765, !dbg !117
  %5798 = fsub float %5786, %2765, !dbg !117
  %5799 = fsub float %5791, %2766, !dbg !117
  %5800 = fsub float %5792, %2766, !dbg !117
  %5801 = fsub float %5793, %2766, !dbg !117
  %5802 = fsub float %5794, %2766, !dbg !117
  %5803 = tail call float @llvm.amdgcn.exp2.f32(float %5795), !dbg !118
  %5804 = tail call float @llvm.amdgcn.exp2.f32(float %5796), !dbg !118
  %5805 = tail call float @llvm.amdgcn.exp2.f32(float %5797), !dbg !118
  %5806 = tail call float @llvm.amdgcn.exp2.f32(float %5798), !dbg !118
  %5807 = tail call float @llvm.amdgcn.exp2.f32(float %5799), !dbg !118
  %5808 = tail call float @llvm.amdgcn.exp2.f32(float %5800), !dbg !118
  %5809 = tail call float @llvm.amdgcn.exp2.f32(float %5801), !dbg !118
  %5810 = tail call float @llvm.amdgcn.exp2.f32(float %5802), !dbg !118
  %5811 = load <4 x half>, ptr addrspace(3) %5231, align 8, !dbg !102
  %5812 = load <4 x half>, ptr addrspace(3) %5233, align 8, !dbg !102
  %5813 = load <4 x half>, ptr addrspace(3) %5235, align 8, !dbg !102
  %5814 = load <4 x half>, ptr addrspace(3) %5237, align 8, !dbg !102
  %5815 = load <4 x half>, ptr addrspace(3) %5239, align 8, !dbg !102
  %5816 = load <4 x half>, ptr addrspace(3) %5241, align 8, !dbg !102
  %5817 = load <4 x half>, ptr addrspace(3) %5243, align 8, !dbg !102
  %5818 = load <4 x half>, ptr addrspace(3) %5245, align 8, !dbg !102
  %5819 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5759, <4 x half> %5811, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5820 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5761, <4 x half> %5812, <4 x float> %5819, i32 0, i32 0, i32 0), !dbg !120
  %5821 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5763, <4 x half> %5813, <4 x float> %5820, i32 0, i32 0, i32 0), !dbg !120
  %5822 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5765, <4 x half> %5814, <4 x float> %5821, i32 0, i32 0, i32 0), !dbg !120
  %5823 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5759, <4 x half> %5815, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5824 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5761, <4 x half> %5816, <4 x float> %5823, i32 0, i32 0, i32 0), !dbg !120
  %5825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5763, <4 x half> %5817, <4 x float> %5824, i32 0, i32 0, i32 0), !dbg !120
  %5826 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5765, <4 x half> %5818, <4 x float> %5825, i32 0, i32 0, i32 0), !dbg !120
  %5827 = insertelement <2 x i32> poison, i32 %5755, i64 0, !dbg !119
  %5828 = shufflevector <2 x i32> %5827, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !119
  %5829 = or disjoint <2 x i32> %5828, %76, !dbg !119
  %5830 = icmp slt <2 x i32> %421, %5829, !dbg !121
  %5831 = insertelement <2 x float> poison, float %5803, i64 0, !dbg !122
  %5832 = insertelement <2 x float> %5831, float %5804, i64 1, !dbg !122
  %5833 = select <2 x i1> %5830, <2 x float> zeroinitializer, <2 x float> %5832, !dbg !122
  %5834 = shufflevector <4 x float> %5822, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5835 = fsub <2 x float> %5834, %5288, !dbg !114
  %5836 = fmul <2 x float> %5833, %5835, !dbg !123
  %5837 = fptrunc <2 x float> %5836 to <2 x half>, !dbg !124
  %5838 = or disjoint <2 x i32> %5828, %75, !dbg !119
  %5839 = icmp slt <2 x i32> %421, %5838, !dbg !121
  %5840 = insertelement <2 x float> poison, float %5805, i64 0, !dbg !122
  %5841 = insertelement <2 x float> %5840, float %5806, i64 1, !dbg !122
  %5842 = select <2 x i1> %5839, <2 x float> zeroinitializer, <2 x float> %5841, !dbg !122
  %5843 = shufflevector <4 x float> %5822, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5844 = fsub <2 x float> %5843, %5288, !dbg !114
  %5845 = fmul <2 x float> %5842, %5844, !dbg !123
  %5846 = fptrunc <2 x float> %5845 to <2 x half>, !dbg !124
  %5847 = shufflevector <4 x float> %5826, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5848 = fsub <2 x float> %5847, %5289, !dbg !114
  %5849 = icmp slt <2 x i32> %423, %5829, !dbg !121
  %5850 = insertelement <2 x float> poison, float %5807, i64 0, !dbg !122
  %5851 = insertelement <2 x float> %5850, float %5808, i64 1, !dbg !122
  %5852 = select <2 x i1> %5849, <2 x float> zeroinitializer, <2 x float> %5851, !dbg !122
  %5853 = fmul <2 x float> %5852, %5848, !dbg !123
  %5854 = fptrunc <2 x float> %5853 to <2 x half>, !dbg !124
  %5855 = shufflevector <4 x float> %5826, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5856 = fsub <2 x float> %5855, %5289, !dbg !114
  %5857 = icmp slt <2 x i32> %423, %5838, !dbg !121
  %5858 = insertelement <2 x float> poison, float %5809, i64 0, !dbg !122
  %5859 = insertelement <2 x float> %5858, float %5810, i64 1, !dbg !122
  %5860 = select <2 x i1> %5857, <2 x float> zeroinitializer, <2 x float> %5859, !dbg !122
  %5861 = fmul <2 x float> %5860, %5856, !dbg !123
  %5862 = fptrunc <2 x float> %5861 to <2 x half>, !dbg !124
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  store <4 x half> %5774, ptr addrspace(3) %5253, align 8, !dbg !125
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  %5863 = load <1 x half>, ptr addrspace(3) %5254, align 2, !dbg !125
  %5864 = load <1 x half>, ptr addrspace(3) %5255, align 2, !dbg !125
  %5865 = load <1 x half>, ptr addrspace(3) %5256, align 2, !dbg !125
  %5866 = shufflevector <1 x half> %5865, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5867 = load <1 x half>, ptr addrspace(3) %5257, align 2, !dbg !125
  %5868 = shufflevector <1 x half> %5867, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5869 = load <1 x half>, ptr addrspace(3) %5258, align 2, !dbg !125
  %5870 = load <1 x half>, ptr addrspace(3) %5259, align 2, !dbg !125
  %5871 = load <1 x half>, ptr addrspace(3) %5260, align 2, !dbg !125
  %5872 = shufflevector <1 x half> %5871, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5873 = load <1 x half>, ptr addrspace(3) %5261, align 2, !dbg !125
  %5874 = shufflevector <1 x half> %5873, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5875 = load <1 x half>, ptr addrspace(3) %5262, align 2, !dbg !125
  %5876 = load <1 x half>, ptr addrspace(3) %5263, align 2, !dbg !125
  %5877 = load <1 x half>, ptr addrspace(3) %5264, align 2, !dbg !125
  %5878 = shufflevector <1 x half> %5877, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5879 = load <1 x half>, ptr addrspace(3) %5265, align 2, !dbg !125
  %5880 = shufflevector <1 x half> %5879, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5881 = load <1 x half>, ptr addrspace(3) %5266, align 2, !dbg !125
  %5882 = load <1 x half>, ptr addrspace(3) %5267, align 2, !dbg !125
  %5883 = load <1 x half>, ptr addrspace(3) %5268, align 2, !dbg !125
  %5884 = shufflevector <1 x half> %5883, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %5885 = load <1 x half>, ptr addrspace(3) %5269, align 2, !dbg !125
  %5886 = shufflevector <1 x half> %5885, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5887 = shufflevector <2 x half> %5837, <2 x half> %5846, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5887, ptr addrspace(3) %5270, align 8, !dbg !124
  %5888 = shufflevector <2 x half> %5854, <2 x half> %5862, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %5888, ptr addrspace(3) %5271, align 8, !dbg !124
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %5889 = load <4 x half>, ptr addrspace(3) %5272, align 8, !dbg !124
  %5890 = load <4 x half>, ptr addrspace(3) %5273, align 8, !dbg !124
  %5891 = shufflevector <1 x half> %5863, <1 x half> %5864, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5892 = shufflevector <4 x half> %5891, <4 x half> %5866, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5893 = shufflevector <4 x half> %5892, <4 x half> %5868, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5894 = shufflevector <1 x half> %5869, <1 x half> %5870, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5895 = shufflevector <4 x half> %5894, <4 x half> %5872, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5896 = shufflevector <4 x half> %5895, <4 x half> %5874, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5897 = shufflevector <1 x half> %5875, <1 x half> %5876, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5898 = shufflevector <4 x half> %5897, <4 x half> %5878, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5899 = shufflevector <4 x half> %5898, <4 x half> %5880, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5900 = shufflevector <1 x half> %5881, <1 x half> %5882, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %5901 = shufflevector <4 x half> %5900, <4 x half> %5884, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %5902 = shufflevector <4 x half> %5901, <4 x half> %5886, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %5903 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5893, <4 x half> %5889, <16 x float> %5752, i32 0, i32 0, i32 0), !dbg !126
  %5904 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5896, <4 x half> %5890, <16 x float> %5903, i32 0, i32 0, i32 0), !dbg !126
  %5905 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5899, <4 x half> %5889, <16 x float> %5754, i32 0, i32 0, i32 0), !dbg !126
  %5906 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %5902, <4 x half> %5890, <16 x float> %5905, i32 0, i32 0, i32 0), !dbg !126
  %5907 = add i32 %5301, 48, !dbg !127
  %5908 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 36864), i32 %329, !dbg !108
  %5909 = shufflevector <2 x half> %5342, <2 x half> %5344, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !108
  store <4 x half> %5909, ptr addrspace(3) %5908, align 8, !dbg !108
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %5910 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 36864), i32 %331, !dbg !108
  %5911 = load <4 x half>, ptr addrspace(3) %5910, align 8, !dbg !108
  %5912 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 36864), i32 %332, !dbg !108
  %5913 = load <4 x half>, ptr addrspace(3) %5912, align 8, !dbg !108
  %5914 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 36864), i32 %333, !dbg !108
  %5915 = load <4 x half>, ptr addrspace(3) %5914, align 8, !dbg !108
  %5916 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 36864), i32 %334, !dbg !108
  %5917 = load <4 x half>, ptr addrspace(3) %5916, align 8, !dbg !108
  %5918 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !101
  %5919 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !101
  %5920 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !101
  %5921 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !101
  %5922 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !101
  %5923 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !101
  %5924 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !101
  %5925 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !101
  %5926 = shufflevector <2 x half> %5337, <2 x half> %5340, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !106
  store <4 x half> %5926, ptr addrspace(3) %5248, align 8, !dbg !106
  fence syncscope("workgroup") release, !dbg !106
  tail call void @llvm.amdgcn.s.barrier(), !dbg !106
  fence syncscope("workgroup") acquire, !dbg !106
  %5927 = load <4 x half>, ptr addrspace(3) %5249, align 8, !dbg !106
  %5928 = load <4 x half>, ptr addrspace(3) %5250, align 8, !dbg !106
  %5929 = load <4 x half>, ptr addrspace(3) %5251, align 8, !dbg !106
  %5930 = load <4 x half>, ptr addrspace(3) %5252, align 8, !dbg !106
  %5931 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5927, <4 x half> %5918, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5932 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5928, <4 x half> %5919, <4 x float> %5931, i32 0, i32 0, i32 0), !dbg !116
  %5933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5929, <4 x half> %5920, <4 x float> %5932, i32 0, i32 0, i32 0), !dbg !116
  %5934 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5930, <4 x half> %5921, <4 x float> %5933, i32 0, i32 0, i32 0), !dbg !116
  %5935 = extractelement <4 x float> %5934, i64 0, !dbg !116
  %5936 = extractelement <4 x float> %5934, i64 1, !dbg !116
  %5937 = extractelement <4 x float> %5934, i64 2, !dbg !116
  %5938 = extractelement <4 x float> %5934, i64 3, !dbg !116
  %5939 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5927, <4 x half> %5922, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %5940 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5928, <4 x half> %5923, <4 x float> %5939, i32 0, i32 0, i32 0), !dbg !116
  %5941 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5929, <4 x half> %5924, <4 x float> %5940, i32 0, i32 0, i32 0), !dbg !116
  %5942 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5930, <4 x half> %5925, <4 x float> %5941, i32 0, i32 0, i32 0), !dbg !116
  %5943 = extractelement <4 x float> %5942, i64 0, !dbg !116
  %5944 = extractelement <4 x float> %5942, i64 1, !dbg !116
  %5945 = extractelement <4 x float> %5942, i64 2, !dbg !116
  %5946 = extractelement <4 x float> %5942, i64 3, !dbg !116
  %5947 = fsub float %5935, %2765, !dbg !117
  %5948 = fsub float %5936, %2765, !dbg !117
  %5949 = fsub float %5937, %2765, !dbg !117
  %5950 = fsub float %5938, %2765, !dbg !117
  %5951 = fsub float %5943, %2766, !dbg !117
  %5952 = fsub float %5944, %2766, !dbg !117
  %5953 = fsub float %5945, %2766, !dbg !117
  %5954 = fsub float %5946, %2766, !dbg !117
  %5955 = tail call float @llvm.amdgcn.exp2.f32(float %5947), !dbg !118
  %5956 = tail call float @llvm.amdgcn.exp2.f32(float %5948), !dbg !118
  %5957 = tail call float @llvm.amdgcn.exp2.f32(float %5949), !dbg !118
  %5958 = tail call float @llvm.amdgcn.exp2.f32(float %5950), !dbg !118
  %5959 = tail call float @llvm.amdgcn.exp2.f32(float %5951), !dbg !118
  %5960 = tail call float @llvm.amdgcn.exp2.f32(float %5952), !dbg !118
  %5961 = tail call float @llvm.amdgcn.exp2.f32(float %5953), !dbg !118
  %5962 = tail call float @llvm.amdgcn.exp2.f32(float %5954), !dbg !118
  %5963 = load <4 x half>, ptr addrspace(3) %5231, align 8, !dbg !102
  %5964 = load <4 x half>, ptr addrspace(3) %5233, align 8, !dbg !102
  %5965 = load <4 x half>, ptr addrspace(3) %5235, align 8, !dbg !102
  %5966 = load <4 x half>, ptr addrspace(3) %5237, align 8, !dbg !102
  %5967 = load <4 x half>, ptr addrspace(3) %5239, align 8, !dbg !102
  %5968 = load <4 x half>, ptr addrspace(3) %5241, align 8, !dbg !102
  %5969 = load <4 x half>, ptr addrspace(3) %5243, align 8, !dbg !102
  %5970 = load <4 x half>, ptr addrspace(3) %5245, align 8, !dbg !102
  %5971 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5911, <4 x half> %5963, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5972 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5913, <4 x half> %5964, <4 x float> %5971, i32 0, i32 0, i32 0), !dbg !120
  %5973 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5915, <4 x half> %5965, <4 x float> %5972, i32 0, i32 0, i32 0), !dbg !120
  %5974 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5917, <4 x half> %5966, <4 x float> %5973, i32 0, i32 0, i32 0), !dbg !120
  %5975 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5911, <4 x half> %5967, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %5976 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5913, <4 x half> %5968, <4 x float> %5975, i32 0, i32 0, i32 0), !dbg !120
  %5977 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5915, <4 x half> %5969, <4 x float> %5976, i32 0, i32 0, i32 0), !dbg !120
  %5978 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %5917, <4 x half> %5970, <4 x float> %5977, i32 0, i32 0, i32 0), !dbg !120
  %5979 = insertelement <2 x i32> poison, i32 %5907, i64 0, !dbg !119
  %5980 = shufflevector <2 x i32> %5979, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !119
  %5981 = or disjoint <2 x i32> %5980, %76, !dbg !119
  %5982 = icmp slt <2 x i32> %421, %5981, !dbg !121
  %5983 = insertelement <2 x float> poison, float %5955, i64 0, !dbg !122
  %5984 = insertelement <2 x float> %5983, float %5956, i64 1, !dbg !122
  %5985 = select <2 x i1> %5982, <2 x float> zeroinitializer, <2 x float> %5984, !dbg !122
  %5986 = shufflevector <4 x float> %5974, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %5987 = fsub <2 x float> %5986, %5288, !dbg !114
  %5988 = fmul <2 x float> %5985, %5987, !dbg !123
  %5989 = fptrunc <2 x float> %5988 to <2 x half>, !dbg !124
  %5990 = or disjoint <2 x i32> %5980, %75, !dbg !119
  %5991 = icmp slt <2 x i32> %421, %5990, !dbg !121
  %5992 = insertelement <2 x float> poison, float %5957, i64 0, !dbg !122
  %5993 = insertelement <2 x float> %5992, float %5958, i64 1, !dbg !122
  %5994 = select <2 x i1> %5991, <2 x float> zeroinitializer, <2 x float> %5993, !dbg !122
  %5995 = shufflevector <4 x float> %5974, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %5996 = fsub <2 x float> %5995, %5288, !dbg !114
  %5997 = fmul <2 x float> %5994, %5996, !dbg !123
  %5998 = fptrunc <2 x float> %5997 to <2 x half>, !dbg !124
  %5999 = shufflevector <4 x float> %5978, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %6000 = fsub <2 x float> %5999, %5289, !dbg !114
  %6001 = icmp slt <2 x i32> %423, %5981, !dbg !121
  %6002 = insertelement <2 x float> poison, float %5959, i64 0, !dbg !122
  %6003 = insertelement <2 x float> %6002, float %5960, i64 1, !dbg !122
  %6004 = select <2 x i1> %6001, <2 x float> zeroinitializer, <2 x float> %6003, !dbg !122
  %6005 = fmul <2 x float> %6004, %6000, !dbg !123
  %6006 = fptrunc <2 x float> %6005 to <2 x half>, !dbg !124
  %6007 = shufflevector <4 x float> %5978, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %6008 = fsub <2 x float> %6007, %5289, !dbg !114
  %6009 = icmp slt <2 x i32> %423, %5990, !dbg !121
  %6010 = insertelement <2 x float> poison, float %5961, i64 0, !dbg !122
  %6011 = insertelement <2 x float> %6010, float %5962, i64 1, !dbg !122
  %6012 = select <2 x i1> %6009, <2 x float> zeroinitializer, <2 x float> %6011, !dbg !122
  %6013 = fmul <2 x float> %6012, %6008, !dbg !123
  %6014 = fptrunc <2 x float> %6013 to <2 x half>, !dbg !124
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  store <4 x half> %5926, ptr addrspace(3) %5253, align 8, !dbg !125
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  %6015 = load <1 x half>, ptr addrspace(3) %5254, align 2, !dbg !125
  %6016 = load <1 x half>, ptr addrspace(3) %5255, align 2, !dbg !125
  %6017 = load <1 x half>, ptr addrspace(3) %5256, align 2, !dbg !125
  %6018 = shufflevector <1 x half> %6017, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6019 = load <1 x half>, ptr addrspace(3) %5257, align 2, !dbg !125
  %6020 = shufflevector <1 x half> %6019, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6021 = load <1 x half>, ptr addrspace(3) %5258, align 2, !dbg !125
  %6022 = load <1 x half>, ptr addrspace(3) %5259, align 2, !dbg !125
  %6023 = load <1 x half>, ptr addrspace(3) %5260, align 2, !dbg !125
  %6024 = shufflevector <1 x half> %6023, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6025 = load <1 x half>, ptr addrspace(3) %5261, align 2, !dbg !125
  %6026 = shufflevector <1 x half> %6025, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6027 = load <1 x half>, ptr addrspace(3) %5262, align 2, !dbg !125
  %6028 = load <1 x half>, ptr addrspace(3) %5263, align 2, !dbg !125
  %6029 = load <1 x half>, ptr addrspace(3) %5264, align 2, !dbg !125
  %6030 = shufflevector <1 x half> %6029, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6031 = load <1 x half>, ptr addrspace(3) %5265, align 2, !dbg !125
  %6032 = shufflevector <1 x half> %6031, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6033 = load <1 x half>, ptr addrspace(3) %5266, align 2, !dbg !125
  %6034 = load <1 x half>, ptr addrspace(3) %5267, align 2, !dbg !125
  %6035 = load <1 x half>, ptr addrspace(3) %5268, align 2, !dbg !125
  %6036 = shufflevector <1 x half> %6035, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6037 = load <1 x half>, ptr addrspace(3) %5269, align 2, !dbg !125
  %6038 = shufflevector <1 x half> %6037, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %6039 = shufflevector <2 x half> %5989, <2 x half> %5998, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %6039, ptr addrspace(3) %5270, align 8, !dbg !124
  %6040 = shufflevector <2 x half> %6006, <2 x half> %6014, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %6040, ptr addrspace(3) %5271, align 8, !dbg !124
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %6041 = load <4 x half>, ptr addrspace(3) %5272, align 8, !dbg !124
  %6042 = load <4 x half>, ptr addrspace(3) %5273, align 8, !dbg !124
  %6043 = shufflevector <1 x half> %6015, <1 x half> %6016, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6044 = shufflevector <4 x half> %6043, <4 x half> %6018, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6045 = shufflevector <4 x half> %6044, <4 x half> %6020, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6046 = shufflevector <1 x half> %6021, <1 x half> %6022, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6047 = shufflevector <4 x half> %6046, <4 x half> %6024, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6048 = shufflevector <4 x half> %6047, <4 x half> %6026, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6049 = shufflevector <1 x half> %6027, <1 x half> %6028, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6050 = shufflevector <4 x half> %6049, <4 x half> %6030, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6051 = shufflevector <4 x half> %6050, <4 x half> %6032, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6052 = shufflevector <1 x half> %6033, <1 x half> %6034, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6053 = shufflevector <4 x half> %6052, <4 x half> %6036, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6054 = shufflevector <4 x half> %6053, <4 x half> %6038, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6055 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6045, <4 x half> %6041, <16 x float> %5904, i32 0, i32 0, i32 0), !dbg !126
  %6056 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6048, <4 x half> %6042, <16 x float> %6055, i32 0, i32 0, i32 0), !dbg !126
  %6057 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6051, <4 x half> %6041, <16 x float> %5906, i32 0, i32 0, i32 0), !dbg !126
  %6058 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6054, <4 x half> %6042, <16 x float> %6057, i32 0, i32 0, i32 0), !dbg !126
  %6059 = add i32 %5301, 64, !dbg !127
  %6060 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 38912), i32 %329, !dbg !108
  store <4 x half> %unmaskedload1177, ptr addrspace(3) %6060, align 8, !dbg !108
  fence syncscope("workgroup") release, !dbg !108
  tail call void @llvm.amdgcn.s.barrier(), !dbg !108
  fence syncscope("workgroup") acquire, !dbg !108
  %6061 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 38912), i32 %331, !dbg !108
  %6062 = load <4 x half>, ptr addrspace(3) %6061, align 8, !dbg !108
  %6063 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 38912), i32 %332, !dbg !108
  %6064 = load <4 x half>, ptr addrspace(3) %6063, align 8, !dbg !108
  %6065 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 38912), i32 %333, !dbg !108
  %6066 = load <4 x half>, ptr addrspace(3) %6065, align 8, !dbg !108
  %6067 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 38912), i32 %334, !dbg !108
  %6068 = load <4 x half>, ptr addrspace(3) %6067, align 8, !dbg !108
  %6069 = load <4 x half>, ptr addrspace(3) %285, align 8, !dbg !101
  %6070 = load <4 x half>, ptr addrspace(3) %287, align 8, !dbg !101
  %6071 = load <4 x half>, ptr addrspace(3) %289, align 8, !dbg !101
  %6072 = load <4 x half>, ptr addrspace(3) %291, align 8, !dbg !101
  %6073 = load <4 x half>, ptr addrspace(3) %293, align 8, !dbg !101
  %6074 = load <4 x half>, ptr addrspace(3) %295, align 8, !dbg !101
  %6075 = load <4 x half>, ptr addrspace(3) %297, align 8, !dbg !101
  %6076 = load <4 x half>, ptr addrspace(3) %299, align 8, !dbg !101
  store <4 x half> %unmaskedload1176, ptr addrspace(3) %5248, align 8, !dbg !106
  fence syncscope("workgroup") release, !dbg !106
  tail call void @llvm.amdgcn.s.barrier(), !dbg !106
  fence syncscope("workgroup") acquire, !dbg !106
  %6077 = load <4 x half>, ptr addrspace(3) %5249, align 8, !dbg !106
  %6078 = load <4 x half>, ptr addrspace(3) %5250, align 8, !dbg !106
  %6079 = load <4 x half>, ptr addrspace(3) %5251, align 8, !dbg !106
  %6080 = load <4 x half>, ptr addrspace(3) %5252, align 8, !dbg !106
  %6081 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6077, <4 x half> %6069, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %6082 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6078, <4 x half> %6070, <4 x float> %6081, i32 0, i32 0, i32 0), !dbg !116
  %6083 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6079, <4 x half> %6071, <4 x float> %6082, i32 0, i32 0, i32 0), !dbg !116
  %6084 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6080, <4 x half> %6072, <4 x float> %6083, i32 0, i32 0, i32 0), !dbg !116
  %6085 = extractelement <4 x float> %6084, i64 0, !dbg !116
  %6086 = extractelement <4 x float> %6084, i64 1, !dbg !116
  %6087 = extractelement <4 x float> %6084, i64 2, !dbg !116
  %6088 = extractelement <4 x float> %6084, i64 3, !dbg !116
  %6089 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6077, <4 x half> %6073, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !116
  %6090 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6078, <4 x half> %6074, <4 x float> %6089, i32 0, i32 0, i32 0), !dbg !116
  %6091 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6079, <4 x half> %6075, <4 x float> %6090, i32 0, i32 0, i32 0), !dbg !116
  %6092 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6080, <4 x half> %6076, <4 x float> %6091, i32 0, i32 0, i32 0), !dbg !116
  %6093 = extractelement <4 x float> %6092, i64 0, !dbg !116
  %6094 = extractelement <4 x float> %6092, i64 1, !dbg !116
  %6095 = extractelement <4 x float> %6092, i64 2, !dbg !116
  %6096 = extractelement <4 x float> %6092, i64 3, !dbg !116
  %6097 = fsub float %6085, %2765, !dbg !117
  %6098 = fsub float %6086, %2765, !dbg !117
  %6099 = fsub float %6087, %2765, !dbg !117
  %6100 = fsub float %6088, %2765, !dbg !117
  %6101 = fsub float %6093, %2766, !dbg !117
  %6102 = fsub float %6094, %2766, !dbg !117
  %6103 = fsub float %6095, %2766, !dbg !117
  %6104 = fsub float %6096, %2766, !dbg !117
  %6105 = tail call float @llvm.amdgcn.exp2.f32(float %6097), !dbg !118
  %6106 = tail call float @llvm.amdgcn.exp2.f32(float %6098), !dbg !118
  %6107 = tail call float @llvm.amdgcn.exp2.f32(float %6099), !dbg !118
  %6108 = tail call float @llvm.amdgcn.exp2.f32(float %6100), !dbg !118
  %6109 = tail call float @llvm.amdgcn.exp2.f32(float %6101), !dbg !118
  %6110 = tail call float @llvm.amdgcn.exp2.f32(float %6102), !dbg !118
  %6111 = tail call float @llvm.amdgcn.exp2.f32(float %6103), !dbg !118
  %6112 = tail call float @llvm.amdgcn.exp2.f32(float %6104), !dbg !118
  %6113 = load <4 x half>, ptr addrspace(3) %5231, align 8, !dbg !102
  %6114 = load <4 x half>, ptr addrspace(3) %5233, align 8, !dbg !102
  %6115 = load <4 x half>, ptr addrspace(3) %5235, align 8, !dbg !102
  %6116 = load <4 x half>, ptr addrspace(3) %5237, align 8, !dbg !102
  %6117 = load <4 x half>, ptr addrspace(3) %5239, align 8, !dbg !102
  %6118 = load <4 x half>, ptr addrspace(3) %5241, align 8, !dbg !102
  %6119 = load <4 x half>, ptr addrspace(3) %5243, align 8, !dbg !102
  %6120 = load <4 x half>, ptr addrspace(3) %5245, align 8, !dbg !102
  %6121 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6062, <4 x half> %6113, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %6122 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6064, <4 x half> %6114, <4 x float> %6121, i32 0, i32 0, i32 0), !dbg !120
  %6123 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6066, <4 x half> %6115, <4 x float> %6122, i32 0, i32 0, i32 0), !dbg !120
  %6124 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6068, <4 x half> %6116, <4 x float> %6123, i32 0, i32 0, i32 0), !dbg !120
  %6125 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6062, <4 x half> %6117, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !120
  %6126 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6064, <4 x half> %6118, <4 x float> %6125, i32 0, i32 0, i32 0), !dbg !120
  %6127 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6066, <4 x half> %6119, <4 x float> %6126, i32 0, i32 0, i32 0), !dbg !120
  %6128 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half> %6068, <4 x half> %6120, <4 x float> %6127, i32 0, i32 0, i32 0), !dbg !120
  %6129 = insertelement <2 x i32> poison, i32 %6059, i64 0, !dbg !119
  %6130 = shufflevector <2 x i32> %6129, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !119
  %6131 = or disjoint <2 x i32> %6130, %76, !dbg !119
  %6132 = icmp slt <2 x i32> %421, %6131, !dbg !121
  %6133 = insertelement <2 x float> poison, float %6105, i64 0, !dbg !122
  %6134 = insertelement <2 x float> %6133, float %6106, i64 1, !dbg !122
  %6135 = select <2 x i1> %6132, <2 x float> zeroinitializer, <2 x float> %6134, !dbg !122
  %6136 = shufflevector <4 x float> %6124, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %6137 = fsub <2 x float> %6136, %5288, !dbg !114
  %6138 = fmul <2 x float> %6135, %6137, !dbg !123
  %6139 = fptrunc <2 x float> %6138 to <2 x half>, !dbg !124
  %6140 = or disjoint <2 x i32> %6130, %75, !dbg !119
  %6141 = icmp slt <2 x i32> %421, %6140, !dbg !121
  %6142 = insertelement <2 x float> poison, float %6107, i64 0, !dbg !122
  %6143 = insertelement <2 x float> %6142, float %6108, i64 1, !dbg !122
  %6144 = select <2 x i1> %6141, <2 x float> zeroinitializer, <2 x float> %6143, !dbg !122
  %6145 = shufflevector <4 x float> %6124, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %6146 = fsub <2 x float> %6145, %5288, !dbg !114
  %6147 = fmul <2 x float> %6144, %6146, !dbg !123
  %6148 = fptrunc <2 x float> %6147 to <2 x half>, !dbg !124
  %6149 = shufflevector <4 x float> %6128, <4 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !114
  %6150 = fsub <2 x float> %6149, %5289, !dbg !114
  %6151 = icmp slt <2 x i32> %423, %6131, !dbg !121
  %6152 = insertelement <2 x float> poison, float %6109, i64 0, !dbg !122
  %6153 = insertelement <2 x float> %6152, float %6110, i64 1, !dbg !122
  %6154 = select <2 x i1> %6151, <2 x float> zeroinitializer, <2 x float> %6153, !dbg !122
  %6155 = fmul <2 x float> %6154, %6150, !dbg !123
  %6156 = fptrunc <2 x float> %6155 to <2 x half>, !dbg !124
  %6157 = shufflevector <4 x float> %6128, <4 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !114
  %6158 = fsub <2 x float> %6157, %5289, !dbg !114
  %6159 = icmp slt <2 x i32> %423, %6140, !dbg !121
  %6160 = insertelement <2 x float> poison, float %6111, i64 0, !dbg !122
  %6161 = insertelement <2 x float> %6160, float %6112, i64 1, !dbg !122
  %6162 = select <2 x i1> %6159, <2 x float> zeroinitializer, <2 x float> %6161, !dbg !122
  %6163 = fmul <2 x float> %6162, %6158, !dbg !123
  %6164 = fptrunc <2 x float> %6163 to <2 x half>, !dbg !124
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  store <4 x half> %unmaskedload1176, ptr addrspace(3) %5253, align 8, !dbg !125
  fence syncscope("workgroup") release, !dbg !125
  tail call void @llvm.amdgcn.s.barrier(), !dbg !125
  fence syncscope("workgroup") acquire, !dbg !125
  %6165 = load <1 x half>, ptr addrspace(3) %5254, align 2, !dbg !125
  %6166 = load <1 x half>, ptr addrspace(3) %5255, align 2, !dbg !125
  %6167 = load <1 x half>, ptr addrspace(3) %5256, align 2, !dbg !125
  %6168 = shufflevector <1 x half> %6167, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6169 = load <1 x half>, ptr addrspace(3) %5257, align 2, !dbg !125
  %6170 = shufflevector <1 x half> %6169, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6171 = load <1 x half>, ptr addrspace(3) %5258, align 2, !dbg !125
  %6172 = load <1 x half>, ptr addrspace(3) %5259, align 2, !dbg !125
  %6173 = load <1 x half>, ptr addrspace(3) %5260, align 2, !dbg !125
  %6174 = shufflevector <1 x half> %6173, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6175 = load <1 x half>, ptr addrspace(3) %5261, align 2, !dbg !125
  %6176 = shufflevector <1 x half> %6175, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6177 = load <1 x half>, ptr addrspace(3) %5262, align 2, !dbg !125
  %6178 = load <1 x half>, ptr addrspace(3) %5263, align 2, !dbg !125
  %6179 = load <1 x half>, ptr addrspace(3) %5264, align 2, !dbg !125
  %6180 = shufflevector <1 x half> %6179, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6181 = load <1 x half>, ptr addrspace(3) %5265, align 2, !dbg !125
  %6182 = shufflevector <1 x half> %6181, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6183 = load <1 x half>, ptr addrspace(3) %5266, align 2, !dbg !125
  %6184 = load <1 x half>, ptr addrspace(3) %5267, align 2, !dbg !125
  %6185 = load <1 x half>, ptr addrspace(3) %5268, align 2, !dbg !125
  %6186 = shufflevector <1 x half> %6185, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6187 = load <1 x half>, ptr addrspace(3) %5269, align 2, !dbg !125
  %6188 = shufflevector <1 x half> %6187, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %6189 = shufflevector <2 x half> %6139, <2 x half> %6148, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %6189, ptr addrspace(3) %5270, align 8, !dbg !124
  %6190 = shufflevector <2 x half> %6156, <2 x half> %6164, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !124
  store <4 x half> %6190, ptr addrspace(3) %5271, align 8, !dbg !124
  fence syncscope("workgroup") release, !dbg !124
  tail call void @llvm.amdgcn.s.barrier(), !dbg !124
  fence syncscope("workgroup") acquire, !dbg !124
  %6191 = load <4 x half>, ptr addrspace(3) %5272, align 8, !dbg !124
  %6192 = load <4 x half>, ptr addrspace(3) %5273, align 8, !dbg !124
  %6193 = shufflevector <1 x half> %6165, <1 x half> %6166, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6194 = shufflevector <4 x half> %6193, <4 x half> %6168, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6195 = shufflevector <4 x half> %6194, <4 x half> %6170, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6196 = shufflevector <1 x half> %6171, <1 x half> %6172, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6197 = shufflevector <4 x half> %6196, <4 x half> %6174, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6198 = shufflevector <4 x half> %6197, <4 x half> %6176, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6199 = shufflevector <1 x half> %6177, <1 x half> %6178, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6200 = shufflevector <4 x half> %6199, <4 x half> %6180, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6201 = shufflevector <4 x half> %6200, <4 x half> %6182, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6202 = shufflevector <1 x half> %6183, <1 x half> %6184, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !126
  %6203 = shufflevector <4 x half> %6202, <4 x half> %6186, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !126
  %6204 = shufflevector <4 x half> %6203, <4 x half> %6188, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !126
  %6205 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6195, <4 x half> %6191, <16 x float> %6056, i32 0, i32 0, i32 0), !dbg !126
  %6206 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6198, <4 x half> %6192, <16 x float> %6205, i32 0, i32 0, i32 0), !dbg !126
  %6207 = extractelement <16 x float> %6206, i64 0, !dbg !126
  %6208 = extractelement <16 x float> %6206, i64 3, !dbg !126
  %6209 = extractelement <16 x float> %6206, i64 4, !dbg !126
  %6210 = extractelement <16 x float> %6206, i64 7, !dbg !126
  %6211 = extractelement <16 x float> %6206, i64 8, !dbg !126
  %6212 = extractelement <16 x float> %6206, i64 11, !dbg !126
  %6213 = extractelement <16 x float> %6206, i64 12, !dbg !126
  %6214 = extractelement <16 x float> %6206, i64 15, !dbg !126
  %6215 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6201, <4 x half> %6191, <16 x float> %6058, i32 0, i32 0, i32 0), !dbg !126
  %6216 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6204, <4 x half> %6192, <16 x float> %6215, i32 0, i32 0, i32 0), !dbg !126
  %6217 = extractelement <16 x float> %6216, i64 0, !dbg !126
  %6218 = extractelement <16 x float> %6216, i64 3, !dbg !126
  %6219 = extractelement <16 x float> %6216, i64 4, !dbg !126
  %6220 = extractelement <16 x float> %6216, i64 7, !dbg !126
  %6221 = extractelement <16 x float> %6216, i64 8, !dbg !126
  %6222 = extractelement <16 x float> %6216, i64 11, !dbg !126
  %6223 = extractelement <16 x float> %6216, i64 12, !dbg !126
  %6224 = extractelement <16 x float> %6216, i64 15, !dbg !126
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %6225 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %184, !dbg !134
  %6226 = shufflevector <8 x half> %5593, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %6226, ptr addrspace(3) %6225, align 8, !dbg !134
  %6227 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %191, !dbg !134
  %6228 = shufflevector <8 x half> %5593, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !134
  store <4 x half> %6228, ptr addrspace(3) %6227, align 8, !dbg !134
  %6229 = icmp sgt i32 %5567, 4, !dbg !131
  %6230 = shufflevector <16 x float> %6206, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %6231 = shufflevector <16 x float> %6206, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %6232 = shufflevector <16 x float> %6206, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %6233 = shufflevector <16 x float> %6206, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %6234 = shufflevector <16 x float> %6216, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %6235 = shufflevector <16 x float> %6216, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %6236 = shufflevector <16 x float> %6216, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %6237 = shufflevector <16 x float> %6216, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %6238 = shufflevector <8 x half> %5590, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6239 = shufflevector <8 x half> %5590, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6240 = shufflevector <8 x half> %5590, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6241 = shufflevector <8 x half> %5590, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6242 = shufflevector <8 x half> %5601, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6243 = shufflevector <8 x half> %5601, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6244 = shufflevector <8 x half> %5601, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6245 = shufflevector <8 x half> %5601, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6246 = shufflevector <8 x half> %5585, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6247 = shufflevector <8 x half> %5585, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6248 = shufflevector <8 x half> %5585, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6249 = shufflevector <8 x half> %5585, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6250 = shufflevector <8 x half> %5599, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6251 = shufflevector <8 x half> %5599, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6252 = shufflevector <8 x half> %5599, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6253 = shufflevector <8 x half> %5599, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6254 = shufflevector <8 x half> %5579, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6255 = shufflevector <8 x half> %5579, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6256 = shufflevector <8 x half> %5579, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6257 = shufflevector <8 x half> %5579, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6258 = shufflevector <8 x half> %5596, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6259 = shufflevector <8 x half> %5596, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6260 = shufflevector <8 x half> %5596, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6261 = shufflevector <8 x half> %5596, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6262 = shufflevector <8 x half> %5573, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6263 = shufflevector <8 x half> %5573, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6264 = shufflevector <8 x half> %5573, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6265 = shufflevector <8 x half> %5573, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  br i1 %6229, label %.lr.ph2061, label %._crit_edge2062, !dbg !131

.lr.ph2061:                                       ; preds = %5566
  %6266 = extractelement <16 x float> %6216, i64 14, !dbg !126
  %6267 = extractelement <16 x float> %6216, i64 13, !dbg !126
  %6268 = extractelement <16 x float> %6216, i64 10, !dbg !126
  %6269 = extractelement <16 x float> %6216, i64 9, !dbg !126
  %6270 = extractelement <16 x float> %6216, i64 6, !dbg !126
  %6271 = extractelement <16 x float> %6216, i64 5, !dbg !126
  %6272 = extractelement <16 x float> %6216, i64 2, !dbg !126
  %6273 = extractelement <16 x float> %6216, i64 1, !dbg !126
  %6274 = extractelement <16 x float> %6206, i64 14, !dbg !126
  %6275 = extractelement <16 x float> %6206, i64 13, !dbg !126
  %6276 = extractelement <16 x float> %6206, i64 10, !dbg !126
  %6277 = extractelement <16 x float> %6206, i64 9, !dbg !126
  %6278 = extractelement <16 x float> %6206, i64 6, !dbg !126
  %6279 = extractelement <16 x float> %6206, i64 5, !dbg !126
  %6280 = extractelement <16 x float> %6206, i64 2, !dbg !126
  %6281 = extractelement <16 x float> %6206, i64 1, !dbg !126
  %6282 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %184
  %6283 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %191
  %6284 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2337
  %6285 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2339
  %6286 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2341
  %6287 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2343
  %6288 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2345
  %6289 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2347
  %6290 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2349
  %6291 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2351
  %6292 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2879
  %6293 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %360
  %6294 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %361
  %6295 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %362
  %6296 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %363
  %6297 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %364
  %6298 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %365
  %6299 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %366
  %6300 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %367
  %6301 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2886
  %6302 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2887
  %6303 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2888
  %6304 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2889
  %6305 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2890
  %6306 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2891
  %6307 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2892
  %6308 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2893
  %6309 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %368
  %6310 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %369
  %6311 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %370
  %6312 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %371
  %6313 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %372
  %6314 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %373
  %6315 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %374
  %6316 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %375
  %6317 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2894
  %6318 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2895
  %6319 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2896
  %6320 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2897
  %6321 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2898
  %6322 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2899
  %6323 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2900
  %6324 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2901
  %6325 = add nsw i32 %5567, -5
  %6326 = shufflevector <1 x float> %unmaskedload336, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !135
  %6327 = shl nuw nsw i32 %160, 2
  %6328 = and i32 %6327, 60
  %6329 = xor i32 %6328, %218
  %6330 = shl nuw nsw i32 %160, 6
  %6331 = xor i32 %6328, %220
  %6332 = xor i32 %6328, %221
  %6333 = xor i32 %6328, %222
  %6334 = xor i32 %6328, %223
  %6335 = xor i32 %6328, %224
  %6336 = xor i32 %6328, %225
  %6337 = xor i32 %6328, %226
  br label %6338, !dbg !131

6338:                                             ; preds = %.lr.ph2061, %6338
  %6339 = phi ptr addrspace(1) [ %5597, %.lr.ph2061 ], [ %6374, %6338 ]
  %6340 = phi ptr addrspace(1) [ %5580, %.lr.ph2061 ], [ %6372, %6338 ]
  %6341 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), %.lr.ph2061 ], [ %6379, %6338 ]
  %6342 = phi i32 [ 0, %.lr.ph2061 ], [ %6378, %6338 ]
  %.pn7992003 = phi float [ %6224, %.lr.ph2061 ], [ %6682, %6338 ]
  %.pn8012002 = phi float [ %6266, %.lr.ph2061 ], [ %6681, %6338 ]
  %.pn8032001 = phi float [ %6267, %.lr.ph2061 ], [ %6680, %6338 ]
  %.pn8052000 = phi float [ %6223, %.lr.ph2061 ], [ %6679, %6338 ]
  %.pn8071999 = phi float [ %6222, %.lr.ph2061 ], [ %6678, %6338 ]
  %.pn8091998 = phi float [ %6268, %.lr.ph2061 ], [ %6677, %6338 ]
  %.pn8111997 = phi float [ %6269, %.lr.ph2061 ], [ %6676, %6338 ]
  %.pn8131996 = phi float [ %6221, %.lr.ph2061 ], [ %6675, %6338 ]
  %.pn8151995 = phi float [ %6220, %.lr.ph2061 ], [ %6674, %6338 ]
  %.pn8171994 = phi float [ %6270, %.lr.ph2061 ], [ %6673, %6338 ]
  %.pn8191993 = phi float [ %6271, %.lr.ph2061 ], [ %6672, %6338 ]
  %.pn8211992 = phi float [ %6219, %.lr.ph2061 ], [ %6671, %6338 ]
  %.pn8231991 = phi float [ %6218, %.lr.ph2061 ], [ %6670, %6338 ]
  %.pn8251990 = phi float [ %6272, %.lr.ph2061 ], [ %6669, %6338 ]
  %.pn8271989 = phi float [ %6273, %.lr.ph2061 ], [ %6668, %6338 ]
  %.pn8291988 = phi float [ %6217, %.lr.ph2061 ], [ %6667, %6338 ]
  %.pn8311987 = phi float [ %6214, %.lr.ph2061 ], [ %6646, %6338 ]
  %.pn8331986 = phi float [ %6274, %.lr.ph2061 ], [ %6645, %6338 ]
  %.pn8351985 = phi float [ %6275, %.lr.ph2061 ], [ %6644, %6338 ]
  %.pn8371984 = phi float [ %6213, %.lr.ph2061 ], [ %6643, %6338 ]
  %.pn8391983 = phi float [ %6212, %.lr.ph2061 ], [ %6642, %6338 ]
  %.pn8411982 = phi float [ %6276, %.lr.ph2061 ], [ %6641, %6338 ]
  %.pn8431981 = phi float [ %6277, %.lr.ph2061 ], [ %6640, %6338 ]
  %.pn8451980 = phi float [ %6211, %.lr.ph2061 ], [ %6639, %6338 ]
  %.pn8471979 = phi float [ %6210, %.lr.ph2061 ], [ %6638, %6338 ]
  %.pn8491978 = phi float [ %6278, %.lr.ph2061 ], [ %6637, %6338 ]
  %.pn8511977 = phi float [ %6279, %.lr.ph2061 ], [ %6636, %6338 ]
  %.pn8531976 = phi float [ %6209, %.lr.ph2061 ], [ %6635, %6338 ]
  %.pn8551975 = phi float [ %6208, %.lr.ph2061 ], [ %6634, %6338 ]
  %.pn8571974 = phi float [ %6280, %.lr.ph2061 ], [ %6633, %6338 ]
  %.pn8591973 = phi float [ %6281, %.lr.ph2061 ], [ %6632, %6338 ]
  %.pn8611972 = phi float [ %6207, %.lr.ph2061 ], [ %6631, %6338 ]
  %6343 = phi i32 [ 0, %.lr.ph2061 ], [ %6683, %6338 ]
  %6344 = phi <2 x half> [ %6238, %.lr.ph2061 ], [ %6684, %6338 ]
  %6345 = phi <2 x half> [ %6239, %.lr.ph2061 ], [ %6685, %6338 ]
  %6346 = phi <2 x half> [ %6240, %.lr.ph2061 ], [ %6686, %6338 ]
  %6347 = phi <2 x half> [ %6241, %.lr.ph2061 ], [ %6687, %6338 ]
  %6348 = phi <2 x half> [ %6242, %.lr.ph2061 ], [ %6688, %6338 ]
  %6349 = phi <2 x half> [ %6243, %.lr.ph2061 ], [ %6689, %6338 ]
  %6350 = phi <2 x half> [ %6244, %.lr.ph2061 ], [ %6690, %6338 ]
  %6351 = phi <2 x half> [ %6245, %.lr.ph2061 ], [ %6691, %6338 ]
  %6352 = phi <2 x half> [ %6246, %.lr.ph2061 ], [ %6344, %6338 ]
  %6353 = phi <2 x half> [ %6247, %.lr.ph2061 ], [ %6345, %6338 ]
  %6354 = phi <2 x half> [ %6248, %.lr.ph2061 ], [ %6346, %6338 ]
  %6355 = phi <2 x half> [ %6249, %.lr.ph2061 ], [ %6347, %6338 ]
  %6356 = phi <2 x half> [ %6250, %.lr.ph2061 ], [ %6348, %6338 ]
  %6357 = phi <2 x half> [ %6251, %.lr.ph2061 ], [ %6349, %6338 ]
  %6358 = phi <2 x half> [ %6252, %.lr.ph2061 ], [ %6350, %6338 ]
  %6359 = phi <2 x half> [ %6253, %.lr.ph2061 ], [ %6351, %6338 ]
  %6360 = phi <2 x half> [ %6254, %.lr.ph2061 ], [ %6352, %6338 ]
  %6361 = phi <2 x half> [ %6255, %.lr.ph2061 ], [ %6353, %6338 ]
  %6362 = phi <2 x half> [ %6256, %.lr.ph2061 ], [ %6354, %6338 ]
  %6363 = phi <2 x half> [ %6257, %.lr.ph2061 ], [ %6355, %6338 ]
  %6364 = phi <2 x half> [ %6261, %.lr.ph2061 ], [ %6359, %6338 ]
  %6365 = phi <2 x half> [ %6260, %.lr.ph2061 ], [ %6358, %6338 ]
  %6366 = phi <2 x half> [ %6259, %.lr.ph2061 ], [ %6357, %6338 ]
  %6367 = phi <2 x half> [ %6258, %.lr.ph2061 ], [ %6356, %6338 ]
  %6368 = phi <2 x half> [ %6265, %.lr.ph2061 ], [ %6363, %6338 ]
  %6369 = phi <2 x half> [ %6264, %.lr.ph2061 ], [ %6362, %6338 ]
  %6370 = phi <2 x half> [ %6263, %.lr.ph2061 ], [ %6361, %6338 ]
  %6371 = phi <2 x half> [ %6262, %.lr.ph2061 ], [ %6360, %6338 ]
  %6372 = getelementptr half, ptr addrspace(1) %6340, i64 %998, !dbg !129
  %6373 = getelementptr half, ptr addrspace(1) %6372, i64 %53, !dbg !132
  %unmaskedload1101 = load <8 x half>, ptr addrspace(1) %6373, align 16, !dbg !132
  %6374 = getelementptr half, ptr addrspace(1) %6339, i64 %998, !dbg !133
  %6375 = getelementptr half, ptr addrspace(1) %6374, i64 %53, !dbg !134
  %unmaskedload1102 = load <8 x half>, ptr addrspace(1) %6375, align 16, !dbg !134
  %6376 = add i32 %6342, 1, !dbg !131
  %6377 = icmp slt i32 %6376, 4, !dbg !131
  %6378 = select i1 %6377, i32 %6376, i32 0, !dbg !131
  %.idx1103 = shl i32 %6378, 12, !dbg !134
  %6379 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %.idx1103, !dbg !134
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %6380 = getelementptr inbounds half, ptr addrspace(3) %6379, i32 %184, !dbg !134
  %6381 = shufflevector <2 x half> %6367, <2 x half> %6366, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %6381, ptr addrspace(3) %6380, align 8, !dbg !134
  %6382 = getelementptr inbounds half, ptr addrspace(3) %6379, i32 %191, !dbg !134
  %6383 = shufflevector <2 x half> %6365, <2 x half> %6364, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %6383, ptr addrspace(3) %6382, align 8, !dbg !134
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %6384 = getelementptr half, ptr addrspace(3) %6341, i32 %6329, !dbg !134
  %6385 = getelementptr half, ptr addrspace(3) %6384, i32 %6330, !dbg !134
  %6386 = load <4 x half>, ptr addrspace(3) %6385, align 8, !dbg !134
  %6387 = getelementptr half, ptr addrspace(3) %6341, i32 %6331, !dbg !134
  %6388 = getelementptr half, ptr addrspace(3) %6387, i32 %6330, !dbg !134
  %6389 = load <4 x half>, ptr addrspace(3) %6388, align 8, !dbg !134
  %6390 = getelementptr half, ptr addrspace(3) %6341, i32 %6332, !dbg !134
  %6391 = getelementptr half, ptr addrspace(3) %6390, i32 %6330, !dbg !134
  %6392 = load <4 x half>, ptr addrspace(3) %6391, align 8, !dbg !134
  %6393 = getelementptr half, ptr addrspace(3) %6341, i32 %6333, !dbg !134
  %6394 = getelementptr half, ptr addrspace(3) %6393, i32 %6330, !dbg !134
  %6395 = load <4 x half>, ptr addrspace(3) %6394, align 8, !dbg !134
  %6396 = getelementptr half, ptr addrspace(3) %6341, i32 %6334, !dbg !134
  %6397 = getelementptr half, ptr addrspace(3) %6396, i32 %6330, !dbg !134
  %6398 = load <4 x half>, ptr addrspace(3) %6397, align 8, !dbg !134
  %6399 = getelementptr half, ptr addrspace(3) %6341, i32 %6335, !dbg !134
  %6400 = getelementptr half, ptr addrspace(3) %6399, i32 %6330, !dbg !134
  %6401 = load <4 x half>, ptr addrspace(3) %6400, align 8, !dbg !134
  %6402 = getelementptr half, ptr addrspace(3) %6341, i32 %6336, !dbg !134
  %6403 = getelementptr half, ptr addrspace(3) %6402, i32 %6330, !dbg !134
  %6404 = load <4 x half>, ptr addrspace(3) %6403, align 8, !dbg !134
  %6405 = getelementptr half, ptr addrspace(3) %6341, i32 %6337, !dbg !134
  %6406 = getelementptr half, ptr addrspace(3) %6405, i32 %6330, !dbg !134
  %6407 = load <4 x half>, ptr addrspace(3) %6406, align 8, !dbg !134
  %6408 = shufflevector <2 x half> %6371, <2 x half> %6370, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %6408, ptr addrspace(3) %6282, align 8, !dbg !132
  %6409 = shufflevector <2 x half> %6369, <2 x half> %6368, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %6409, ptr addrspace(3) %6283, align 8, !dbg !132
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  %6410 = load <4 x half>, ptr addrspace(3) %6284, align 8, !dbg !132
  %6411 = load <4 x half>, ptr addrspace(3) %6285, align 8, !dbg !132
  %6412 = load <4 x half>, ptr addrspace(3) %6286, align 8, !dbg !132
  %6413 = load <4 x half>, ptr addrspace(3) %6287, align 8, !dbg !132
  %6414 = load <4 x half>, ptr addrspace(3) %6288, align 8, !dbg !132
  %6415 = load <4 x half>, ptr addrspace(3) %6289, align 8, !dbg !132
  %6416 = load <4 x half>, ptr addrspace(3) %6290, align 8, !dbg !132
  %6417 = load <4 x half>, ptr addrspace(3) %6291, align 8, !dbg !132
  %6418 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6410, <4 x half> %5183, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !136
  %6419 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6411, <4 x half> %5184, <16 x float> %6418, i32 0, i32 0, i32 0), !dbg !136
  %6420 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6412, <4 x half> %5185, <16 x float> %6419, i32 0, i32 0, i32 0), !dbg !136
  %6421 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6413, <4 x half> %5186, <16 x float> %6420, i32 0, i32 0, i32 0), !dbg !136
  %6422 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6414, <4 x half> %5187, <16 x float> %6421, i32 0, i32 0, i32 0), !dbg !136
  %6423 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6415, <4 x half> %5188, <16 x float> %6422, i32 0, i32 0, i32 0), !dbg !136
  %6424 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6416, <4 x half> %5189, <16 x float> %6423, i32 0, i32 0, i32 0), !dbg !136
  %6425 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6417, <4 x half> %5190, <16 x float> %6424, i32 0, i32 0, i32 0), !dbg !136
  %6426 = extractelement <16 x float> %6425, i64 0, !dbg !136
  %6427 = extractelement <16 x float> %6425, i64 1, !dbg !136
  %6428 = extractelement <16 x float> %6425, i64 2, !dbg !136
  %6429 = extractelement <16 x float> %6425, i64 3, !dbg !136
  %6430 = extractelement <16 x float> %6425, i64 4, !dbg !136
  %6431 = extractelement <16 x float> %6425, i64 5, !dbg !136
  %6432 = extractelement <16 x float> %6425, i64 6, !dbg !136
  %6433 = extractelement <16 x float> %6425, i64 7, !dbg !136
  %6434 = extractelement <16 x float> %6425, i64 8, !dbg !136
  %6435 = extractelement <16 x float> %6425, i64 9, !dbg !136
  %6436 = extractelement <16 x float> %6425, i64 10, !dbg !136
  %6437 = extractelement <16 x float> %6425, i64 11, !dbg !136
  %6438 = extractelement <16 x float> %6425, i64 12, !dbg !136
  %6439 = extractelement <16 x float> %6425, i64 13, !dbg !136
  %6440 = extractelement <16 x float> %6425, i64 14, !dbg !136
  %6441 = extractelement <16 x float> %6425, i64 15, !dbg !136
  %6442 = fsub float %6426, %2769, !dbg !137
  %6443 = fsub float %6427, %2769, !dbg !137
  %6444 = fsub float %6428, %2769, !dbg !137
  %6445 = fsub float %6429, %2769, !dbg !137
  %6446 = fsub float %6430, %2769, !dbg !137
  %6447 = fsub float %6431, %2769, !dbg !137
  %6448 = fsub float %6432, %2769, !dbg !137
  %6449 = fsub float %6433, %2769, !dbg !137
  %6450 = fsub float %6434, %2769, !dbg !137
  %6451 = fsub float %6435, %2769, !dbg !137
  %6452 = fsub float %6436, %2769, !dbg !137
  %6453 = fsub float %6437, %2769, !dbg !137
  %6454 = fsub float %6438, %2769, !dbg !137
  %6455 = fsub float %6439, %2769, !dbg !137
  %6456 = fsub float %6440, %2769, !dbg !137
  %6457 = fsub float %6441, %2769, !dbg !137
  %6458 = tail call float @llvm.amdgcn.exp2.f32(float %6442), !dbg !138
  %6459 = tail call float @llvm.amdgcn.exp2.f32(float %6443), !dbg !138
  %6460 = tail call float @llvm.amdgcn.exp2.f32(float %6444), !dbg !138
  %6461 = tail call float @llvm.amdgcn.exp2.f32(float %6445), !dbg !138
  %6462 = tail call float @llvm.amdgcn.exp2.f32(float %6446), !dbg !138
  %6463 = tail call float @llvm.amdgcn.exp2.f32(float %6447), !dbg !138
  %6464 = tail call float @llvm.amdgcn.exp2.f32(float %6448), !dbg !138
  %6465 = tail call float @llvm.amdgcn.exp2.f32(float %6449), !dbg !138
  %6466 = tail call float @llvm.amdgcn.exp2.f32(float %6450), !dbg !138
  %6467 = tail call float @llvm.amdgcn.exp2.f32(float %6451), !dbg !138
  %6468 = tail call float @llvm.amdgcn.exp2.f32(float %6452), !dbg !138
  %6469 = tail call float @llvm.amdgcn.exp2.f32(float %6453), !dbg !138
  %6470 = tail call float @llvm.amdgcn.exp2.f32(float %6454), !dbg !138
  %6471 = tail call float @llvm.amdgcn.exp2.f32(float %6455), !dbg !138
  %6472 = tail call float @llvm.amdgcn.exp2.f32(float %6456), !dbg !138
  %6473 = tail call float @llvm.amdgcn.exp2.f32(float %6457), !dbg !138
  %6474 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6386, <4 x half> %5216, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !139
  %6475 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6389, <4 x half> %5218, <16 x float> %6474, i32 0, i32 0, i32 0), !dbg !139
  %6476 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6392, <4 x half> %5220, <16 x float> %6475, i32 0, i32 0, i32 0), !dbg !139
  %6477 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6395, <4 x half> %5222, <16 x float> %6476, i32 0, i32 0, i32 0), !dbg !139
  %6478 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6398, <4 x half> %5224, <16 x float> %6477, i32 0, i32 0, i32 0), !dbg !139
  %6479 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6401, <4 x half> %5226, <16 x float> %6478, i32 0, i32 0, i32 0), !dbg !139
  %6480 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6404, <4 x half> %5228, <16 x float> %6479, i32 0, i32 0, i32 0), !dbg !139
  %6481 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6407, <4 x half> %5230, <16 x float> %6480, i32 0, i32 0, i32 0), !dbg !139
  %6482 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !135
  %6483 = fsub <2 x float> %6482, %6326, !dbg !135
  %6484 = insertelement <2 x float> poison, float %6458, i64 0, !dbg !140
  %6485 = insertelement <2 x float> %6484, float %6459, i64 1, !dbg !140
  %6486 = fmul <2 x float> %6485, %6483, !dbg !140
  %6487 = fptrunc <2 x float> %6486 to <2 x half>, !dbg !141
  %6488 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !135
  %6489 = fsub <2 x float> %6488, %6326, !dbg !135
  %6490 = insertelement <2 x float> poison, float %6460, i64 0, !dbg !140
  %6491 = insertelement <2 x float> %6490, float %6461, i64 1, !dbg !140
  %6492 = fmul <2 x float> %6491, %6489, !dbg !140
  %6493 = fptrunc <2 x float> %6492 to <2 x half>, !dbg !141
  %6494 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !135
  %6495 = fsub <2 x float> %6494, %6326, !dbg !135
  %6496 = insertelement <2 x float> poison, float %6462, i64 0, !dbg !140
  %6497 = insertelement <2 x float> %6496, float %6463, i64 1, !dbg !140
  %6498 = fmul <2 x float> %6497, %6495, !dbg !140
  %6499 = fptrunc <2 x float> %6498 to <2 x half>, !dbg !141
  %6500 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !135
  %6501 = fsub <2 x float> %6500, %6326, !dbg !135
  %6502 = insertelement <2 x float> poison, float %6464, i64 0, !dbg !140
  %6503 = insertelement <2 x float> %6502, float %6465, i64 1, !dbg !140
  %6504 = fmul <2 x float> %6503, %6501, !dbg !140
  %6505 = fptrunc <2 x float> %6504 to <2 x half>, !dbg !141
  %6506 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !135
  %6507 = fsub <2 x float> %6506, %6326, !dbg !135
  %6508 = insertelement <2 x float> poison, float %6466, i64 0, !dbg !140
  %6509 = insertelement <2 x float> %6508, float %6467, i64 1, !dbg !140
  %6510 = fmul <2 x float> %6509, %6507, !dbg !140
  %6511 = fptrunc <2 x float> %6510 to <2 x half>, !dbg !141
  %6512 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !135
  %6513 = fsub <2 x float> %6512, %6326, !dbg !135
  %6514 = insertelement <2 x float> poison, float %6468, i64 0, !dbg !140
  %6515 = insertelement <2 x float> %6514, float %6469, i64 1, !dbg !140
  %6516 = fmul <2 x float> %6515, %6513, !dbg !140
  %6517 = fptrunc <2 x float> %6516 to <2 x half>, !dbg !141
  %6518 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !135
  %6519 = fsub <2 x float> %6518, %6326, !dbg !135
  %6520 = insertelement <2 x float> poison, float %6470, i64 0, !dbg !140
  %6521 = insertelement <2 x float> %6520, float %6471, i64 1, !dbg !140
  %6522 = fmul <2 x float> %6521, %6519, !dbg !140
  %6523 = fptrunc <2 x float> %6522 to <2 x half>, !dbg !141
  %6524 = shufflevector <16 x float> %6481, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !135
  %6525 = fsub <2 x float> %6524, %6326, !dbg !135
  %6526 = insertelement <2 x float> poison, float %6472, i64 0, !dbg !140
  %6527 = insertelement <2 x float> %6526, float %6473, i64 1, !dbg !140
  %6528 = fmul <2 x float> %6527, %6525, !dbg !140
  %6529 = fptrunc <2 x float> %6528 to <2 x half>, !dbg !141
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %6530 = shufflevector <2 x half> %6371, <2 x half> %6370, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6531 = shufflevector <2 x half> %6369, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6532 = shufflevector <8 x half> %6530, <8 x half> %6531, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !142
  %6533 = shufflevector <2 x half> %6368, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6534 = shufflevector <8 x half> %6532, <8 x half> %6533, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !142
  store <8 x half> %6534, ptr addrspace(3) %6292, align 16, !dbg !142
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %6535 = load <1 x half>, ptr addrspace(3) %6293, align 2, !dbg !142
  %6536 = load <1 x half>, ptr addrspace(3) %6294, align 2, !dbg !142
  %6537 = load <1 x half>, ptr addrspace(3) %6295, align 2, !dbg !142
  %6538 = shufflevector <1 x half> %6537, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6539 = load <1 x half>, ptr addrspace(3) %6296, align 2, !dbg !142
  %6540 = shufflevector <1 x half> %6539, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6541 = load <1 x half>, ptr addrspace(3) %6297, align 2, !dbg !142
  %6542 = load <1 x half>, ptr addrspace(3) %6298, align 2, !dbg !142
  %6543 = load <1 x half>, ptr addrspace(3) %6299, align 2, !dbg !142
  %6544 = shufflevector <1 x half> %6543, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6545 = load <1 x half>, ptr addrspace(3) %6300, align 2, !dbg !142
  %6546 = shufflevector <1 x half> %6545, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6547 = load <1 x half>, ptr addrspace(3) %6301, align 2, !dbg !142
  %6548 = load <1 x half>, ptr addrspace(3) %6302, align 2, !dbg !142
  %6549 = load <1 x half>, ptr addrspace(3) %6303, align 2, !dbg !142
  %6550 = shufflevector <1 x half> %6549, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6551 = load <1 x half>, ptr addrspace(3) %6304, align 2, !dbg !142
  %6552 = shufflevector <1 x half> %6551, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6553 = load <1 x half>, ptr addrspace(3) %6305, align 2, !dbg !142
  %6554 = load <1 x half>, ptr addrspace(3) %6306, align 2, !dbg !142
  %6555 = load <1 x half>, ptr addrspace(3) %6307, align 2, !dbg !142
  %6556 = shufflevector <1 x half> %6555, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6557 = load <1 x half>, ptr addrspace(3) %6308, align 2, !dbg !142
  %6558 = shufflevector <1 x half> %6557, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6559 = load <1 x half>, ptr addrspace(3) %6309, align 2, !dbg !142
  %6560 = load <1 x half>, ptr addrspace(3) %6310, align 2, !dbg !142
  %6561 = load <1 x half>, ptr addrspace(3) %6311, align 2, !dbg !142
  %6562 = shufflevector <1 x half> %6561, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6563 = load <1 x half>, ptr addrspace(3) %6312, align 2, !dbg !142
  %6564 = shufflevector <1 x half> %6563, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6565 = load <1 x half>, ptr addrspace(3) %6313, align 2, !dbg !142
  %6566 = load <1 x half>, ptr addrspace(3) %6314, align 2, !dbg !142
  %6567 = load <1 x half>, ptr addrspace(3) %6315, align 2, !dbg !142
  %6568 = shufflevector <1 x half> %6567, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6569 = load <1 x half>, ptr addrspace(3) %6316, align 2, !dbg !142
  %6570 = shufflevector <1 x half> %6569, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6571 = load <1 x half>, ptr addrspace(3) %6317, align 2, !dbg !142
  %6572 = load <1 x half>, ptr addrspace(3) %6318, align 2, !dbg !142
  %6573 = load <1 x half>, ptr addrspace(3) %6319, align 2, !dbg !142
  %6574 = shufflevector <1 x half> %6573, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6575 = load <1 x half>, ptr addrspace(3) %6320, align 2, !dbg !142
  %6576 = shufflevector <1 x half> %6575, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6577 = load <1 x half>, ptr addrspace(3) %6321, align 2, !dbg !142
  %6578 = load <1 x half>, ptr addrspace(3) %6322, align 2, !dbg !142
  %6579 = load <1 x half>, ptr addrspace(3) %6323, align 2, !dbg !142
  %6580 = shufflevector <1 x half> %6579, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6581 = load <1 x half>, ptr addrspace(3) %6324, align 2, !dbg !142
  %6582 = shufflevector <1 x half> %6581, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6583 = shufflevector <2 x half> %6487, <2 x half> %6493, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %6584 = shufflevector <2 x half> %6499, <2 x half> %6505, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %6585 = shufflevector <2 x half> %6511, <2 x half> %6517, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %6586 = shufflevector <2 x half> %6523, <2 x half> %6529, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %6587 = shufflevector <1 x half> %6535, <1 x half> %6536, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6588 = shufflevector <4 x half> %6587, <4 x half> %6538, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6589 = shufflevector <4 x half> %6588, <4 x half> %6540, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6590 = shufflevector <1 x half> %6541, <1 x half> %6542, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6591 = shufflevector <4 x half> %6590, <4 x half> %6544, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6592 = shufflevector <4 x half> %6591, <4 x half> %6546, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6593 = shufflevector <1 x half> %6547, <1 x half> %6548, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6594 = shufflevector <4 x half> %6593, <4 x half> %6550, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6595 = shufflevector <4 x half> %6594, <4 x half> %6552, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6596 = shufflevector <1 x half> %6553, <1 x half> %6554, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6597 = shufflevector <4 x half> %6596, <4 x half> %6556, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6598 = shufflevector <4 x half> %6597, <4 x half> %6558, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6599 = shufflevector <1 x half> %6559, <1 x half> %6560, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6600 = shufflevector <4 x half> %6599, <4 x half> %6562, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6601 = shufflevector <4 x half> %6600, <4 x half> %6564, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6602 = shufflevector <1 x half> %6565, <1 x half> %6566, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6603 = shufflevector <4 x half> %6602, <4 x half> %6568, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6604 = shufflevector <4 x half> %6603, <4 x half> %6570, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6605 = shufflevector <1 x half> %6571, <1 x half> %6572, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6606 = shufflevector <4 x half> %6605, <4 x half> %6574, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6607 = shufflevector <4 x half> %6606, <4 x half> %6576, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6608 = shufflevector <1 x half> %6577, <1 x half> %6578, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %6609 = shufflevector <4 x half> %6608, <4 x half> %6580, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %6610 = shufflevector <4 x half> %6609, <4 x half> %6582, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %6611 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn8611972, i64 0, !dbg !143
  %6612 = insertelement <16 x float> %6611, float %.pn8591973, i64 1, !dbg !143
  %6613 = insertelement <16 x float> %6612, float %.pn8571974, i64 2, !dbg !143
  %6614 = insertelement <16 x float> %6613, float %.pn8551975, i64 3, !dbg !143
  %6615 = insertelement <16 x float> %6614, float %.pn8531976, i64 4, !dbg !143
  %6616 = insertelement <16 x float> %6615, float %.pn8511977, i64 5, !dbg !143
  %6617 = insertelement <16 x float> %6616, float %.pn8491978, i64 6, !dbg !143
  %6618 = insertelement <16 x float> %6617, float %.pn8471979, i64 7, !dbg !143
  %6619 = insertelement <16 x float> %6618, float %.pn8451980, i64 8, !dbg !143
  %6620 = insertelement <16 x float> %6619, float %.pn8431981, i64 9, !dbg !143
  %6621 = insertelement <16 x float> %6620, float %.pn8411982, i64 10, !dbg !143
  %6622 = insertelement <16 x float> %6621, float %.pn8391983, i64 11, !dbg !143
  %6623 = insertelement <16 x float> %6622, float %.pn8371984, i64 12, !dbg !143
  %6624 = insertelement <16 x float> %6623, float %.pn8351985, i64 13, !dbg !143
  %6625 = insertelement <16 x float> %6624, float %.pn8331986, i64 14, !dbg !143
  %6626 = insertelement <16 x float> %6625, float %.pn8311987, i64 15, !dbg !143
  %6627 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6589, <4 x half> %6583, <16 x float> %6626, i32 0, i32 0, i32 0), !dbg !143
  %6628 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6592, <4 x half> %6584, <16 x float> %6627, i32 0, i32 0, i32 0), !dbg !143
  %6629 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6595, <4 x half> %6585, <16 x float> %6628, i32 0, i32 0, i32 0), !dbg !143
  %6630 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6598, <4 x half> %6586, <16 x float> %6629, i32 0, i32 0, i32 0), !dbg !143
  %6631 = extractelement <16 x float> %6630, i64 0, !dbg !143
  %6632 = extractelement <16 x float> %6630, i64 1, !dbg !143
  %6633 = extractelement <16 x float> %6630, i64 2, !dbg !143
  %6634 = extractelement <16 x float> %6630, i64 3, !dbg !143
  %6635 = extractelement <16 x float> %6630, i64 4, !dbg !143
  %6636 = extractelement <16 x float> %6630, i64 5, !dbg !143
  %6637 = extractelement <16 x float> %6630, i64 6, !dbg !143
  %6638 = extractelement <16 x float> %6630, i64 7, !dbg !143
  %6639 = extractelement <16 x float> %6630, i64 8, !dbg !143
  %6640 = extractelement <16 x float> %6630, i64 9, !dbg !143
  %6641 = extractelement <16 x float> %6630, i64 10, !dbg !143
  %6642 = extractelement <16 x float> %6630, i64 11, !dbg !143
  %6643 = extractelement <16 x float> %6630, i64 12, !dbg !143
  %6644 = extractelement <16 x float> %6630, i64 13, !dbg !143
  %6645 = extractelement <16 x float> %6630, i64 14, !dbg !143
  %6646 = extractelement <16 x float> %6630, i64 15, !dbg !143
  %6647 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %.pn8291988, i64 0, !dbg !143
  %6648 = insertelement <16 x float> %6647, float %.pn8271989, i64 1, !dbg !143
  %6649 = insertelement <16 x float> %6648, float %.pn8251990, i64 2, !dbg !143
  %6650 = insertelement <16 x float> %6649, float %.pn8231991, i64 3, !dbg !143
  %6651 = insertelement <16 x float> %6650, float %.pn8211992, i64 4, !dbg !143
  %6652 = insertelement <16 x float> %6651, float %.pn8191993, i64 5, !dbg !143
  %6653 = insertelement <16 x float> %6652, float %.pn8171994, i64 6, !dbg !143
  %6654 = insertelement <16 x float> %6653, float %.pn8151995, i64 7, !dbg !143
  %6655 = insertelement <16 x float> %6654, float %.pn8131996, i64 8, !dbg !143
  %6656 = insertelement <16 x float> %6655, float %.pn8111997, i64 9, !dbg !143
  %6657 = insertelement <16 x float> %6656, float %.pn8091998, i64 10, !dbg !143
  %6658 = insertelement <16 x float> %6657, float %.pn8071999, i64 11, !dbg !143
  %6659 = insertelement <16 x float> %6658, float %.pn8052000, i64 12, !dbg !143
  %6660 = insertelement <16 x float> %6659, float %.pn8032001, i64 13, !dbg !143
  %6661 = insertelement <16 x float> %6660, float %.pn8012002, i64 14, !dbg !143
  %6662 = insertelement <16 x float> %6661, float %.pn7992003, i64 15, !dbg !143
  %6663 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6601, <4 x half> %6583, <16 x float> %6662, i32 0, i32 0, i32 0), !dbg !143
  %6664 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6604, <4 x half> %6584, <16 x float> %6663, i32 0, i32 0, i32 0), !dbg !143
  %6665 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6607, <4 x half> %6585, <16 x float> %6664, i32 0, i32 0, i32 0), !dbg !143
  %6666 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6610, <4 x half> %6586, <16 x float> %6665, i32 0, i32 0, i32 0), !dbg !143
  %6667 = extractelement <16 x float> %6666, i64 0, !dbg !143
  %6668 = extractelement <16 x float> %6666, i64 1, !dbg !143
  %6669 = extractelement <16 x float> %6666, i64 2, !dbg !143
  %6670 = extractelement <16 x float> %6666, i64 3, !dbg !143
  %6671 = extractelement <16 x float> %6666, i64 4, !dbg !143
  %6672 = extractelement <16 x float> %6666, i64 5, !dbg !143
  %6673 = extractelement <16 x float> %6666, i64 6, !dbg !143
  %6674 = extractelement <16 x float> %6666, i64 7, !dbg !143
  %6675 = extractelement <16 x float> %6666, i64 8, !dbg !143
  %6676 = extractelement <16 x float> %6666, i64 9, !dbg !143
  %6677 = extractelement <16 x float> %6666, i64 10, !dbg !143
  %6678 = extractelement <16 x float> %6666, i64 11, !dbg !143
  %6679 = extractelement <16 x float> %6666, i64 12, !dbg !143
  %6680 = extractelement <16 x float> %6666, i64 13, !dbg !143
  %6681 = extractelement <16 x float> %6666, i64 14, !dbg !143
  %6682 = extractelement <16 x float> %6666, i64 15, !dbg !143
  %6683 = add nuw nsw i32 %6343, 1, !dbg !131
  %exitcond2335.not = icmp eq i32 %6343, %6325, !dbg !131
  %6684 = shufflevector <8 x half> %unmaskedload1101, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6685 = shufflevector <8 x half> %unmaskedload1101, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6686 = shufflevector <8 x half> %unmaskedload1101, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6687 = shufflevector <8 x half> %unmaskedload1101, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  %6688 = shufflevector <8 x half> %unmaskedload1102, <8 x half> poison, <2 x i32> <i32 0, i32 1>
  %6689 = shufflevector <8 x half> %unmaskedload1102, <8 x half> poison, <2 x i32> <i32 2, i32 3>
  %6690 = shufflevector <8 x half> %unmaskedload1102, <8 x half> poison, <2 x i32> <i32 4, i32 5>
  %6691 = shufflevector <8 x half> %unmaskedload1102, <8 x half> poison, <2 x i32> <i32 6, i32 7>
  br i1 %exitcond2335.not, label %._crit_edge2062.loopexit, label %6338, !dbg !131

._crit_edge2062.loopexit:                         ; preds = %6338
  %6692 = shufflevector <16 x float> %6666, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %6693 = shufflevector <16 x float> %6666, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %6694 = shufflevector <16 x float> %6666, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %6695 = shufflevector <16 x float> %6666, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %6696 = shufflevector <16 x float> %6630, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %6697 = shufflevector <16 x float> %6630, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %6698 = shufflevector <16 x float> %6630, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %6699 = shufflevector <16 x float> %6630, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  br label %._crit_edge2062, !dbg !134

._crit_edge2062:                                  ; preds = %._crit_edge2062.loopexit, %5566
  %.pn861.lcssa = phi float [ %6207, %5566 ], [ %6631, %._crit_edge2062.loopexit ]
  %.pn855.lcssa = phi float [ %6208, %5566 ], [ %6634, %._crit_edge2062.loopexit ]
  %.pn853.lcssa = phi float [ %6209, %5566 ], [ %6635, %._crit_edge2062.loopexit ]
  %.pn847.lcssa = phi float [ %6210, %5566 ], [ %6638, %._crit_edge2062.loopexit ]
  %.pn845.lcssa = phi float [ %6211, %5566 ], [ %6639, %._crit_edge2062.loopexit ]
  %.pn839.lcssa = phi float [ %6212, %5566 ], [ %6642, %._crit_edge2062.loopexit ]
  %.pn837.lcssa = phi float [ %6213, %5566 ], [ %6643, %._crit_edge2062.loopexit ]
  %.pn831.lcssa = phi float [ %6214, %5566 ], [ %6646, %._crit_edge2062.loopexit ]
  %.pn829.lcssa = phi float [ %6217, %5566 ], [ %6667, %._crit_edge2062.loopexit ]
  %.pn823.lcssa = phi float [ %6218, %5566 ], [ %6670, %._crit_edge2062.loopexit ]
  %.pn821.lcssa = phi float [ %6219, %5566 ], [ %6671, %._crit_edge2062.loopexit ]
  %.pn815.lcssa = phi float [ %6220, %5566 ], [ %6674, %._crit_edge2062.loopexit ]
  %.pn813.lcssa = phi float [ %6221, %5566 ], [ %6675, %._crit_edge2062.loopexit ]
  %.pn807.lcssa = phi float [ %6222, %5566 ], [ %6678, %._crit_edge2062.loopexit ]
  %.pn805.lcssa = phi float [ %6223, %5566 ], [ %6679, %._crit_edge2062.loopexit ]
  %.pn799.lcssa = phi float [ %6224, %5566 ], [ %6682, %._crit_edge2062.loopexit ]
  %.lcssa1340 = phi i32 [ 0, %5566 ], [ %6378, %._crit_edge2062.loopexit ]
  %6700 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), %5566 ], [ %6379, %._crit_edge2062.loopexit ], !dbg !130
  %6701 = phi <2 x float> [ %6230, %5566 ], [ %6699, %._crit_edge2062.loopexit ]
  %6702 = phi <2 x float> [ %6231, %5566 ], [ %6698, %._crit_edge2062.loopexit ]
  %6703 = phi <2 x float> [ %6232, %5566 ], [ %6697, %._crit_edge2062.loopexit ]
  %6704 = phi <2 x float> [ %6233, %5566 ], [ %6696, %._crit_edge2062.loopexit ]
  %6705 = phi <2 x float> [ %6234, %5566 ], [ %6695, %._crit_edge2062.loopexit ]
  %6706 = phi <2 x float> [ %6235, %5566 ], [ %6694, %._crit_edge2062.loopexit ]
  %6707 = phi <2 x float> [ %6236, %5566 ], [ %6693, %._crit_edge2062.loopexit ]
  %6708 = phi <2 x float> [ %6237, %5566 ], [ %6692, %._crit_edge2062.loopexit ]
  %6709 = phi <2 x half> [ %6238, %5566 ], [ %6684, %._crit_edge2062.loopexit ]
  %6710 = phi <2 x half> [ %6239, %5566 ], [ %6685, %._crit_edge2062.loopexit ]
  %6711 = phi <2 x half> [ %6240, %5566 ], [ %6686, %._crit_edge2062.loopexit ]
  %6712 = phi <2 x half> [ %6241, %5566 ], [ %6687, %._crit_edge2062.loopexit ]
  %6713 = phi <2 x half> [ %6242, %5566 ], [ %6688, %._crit_edge2062.loopexit ]
  %6714 = phi <2 x half> [ %6243, %5566 ], [ %6689, %._crit_edge2062.loopexit ]
  %6715 = phi <2 x half> [ %6244, %5566 ], [ %6690, %._crit_edge2062.loopexit ]
  %6716 = phi <2 x half> [ %6245, %5566 ], [ %6691, %._crit_edge2062.loopexit ]
  %6717 = phi <2 x half> [ %6246, %5566 ], [ %6344, %._crit_edge2062.loopexit ]
  %6718 = phi <2 x half> [ %6247, %5566 ], [ %6345, %._crit_edge2062.loopexit ]
  %6719 = phi <2 x half> [ %6248, %5566 ], [ %6346, %._crit_edge2062.loopexit ]
  %6720 = phi <2 x half> [ %6249, %5566 ], [ %6347, %._crit_edge2062.loopexit ]
  %6721 = phi <2 x half> [ %6250, %5566 ], [ %6348, %._crit_edge2062.loopexit ]
  %6722 = phi <2 x half> [ %6251, %5566 ], [ %6349, %._crit_edge2062.loopexit ]
  %6723 = phi <2 x half> [ %6252, %5566 ], [ %6350, %._crit_edge2062.loopexit ]
  %6724 = phi <2 x half> [ %6253, %5566 ], [ %6351, %._crit_edge2062.loopexit ]
  %6725 = phi <2 x half> [ %6254, %5566 ], [ %6352, %._crit_edge2062.loopexit ]
  %6726 = phi <2 x half> [ %6255, %5566 ], [ %6353, %._crit_edge2062.loopexit ]
  %6727 = phi <2 x half> [ %6256, %5566 ], [ %6354, %._crit_edge2062.loopexit ]
  %6728 = phi <2 x half> [ %6257, %5566 ], [ %6355, %._crit_edge2062.loopexit ]
  %6729 = phi <2 x half> [ %6258, %5566 ], [ %6356, %._crit_edge2062.loopexit ]
  %6730 = phi <2 x half> [ %6259, %5566 ], [ %6357, %._crit_edge2062.loopexit ]
  %6731 = phi <2 x half> [ %6260, %5566 ], [ %6358, %._crit_edge2062.loopexit ]
  %6732 = phi <2 x half> [ %6261, %5566 ], [ %6359, %._crit_edge2062.loopexit ]
  %6733 = phi <2 x half> [ %6262, %5566 ], [ %6360, %._crit_edge2062.loopexit ]
  %6734 = phi <2 x half> [ %6263, %5566 ], [ %6361, %._crit_edge2062.loopexit ]
  %6735 = phi <2 x half> [ %6264, %5566 ], [ %6362, %._crit_edge2062.loopexit ]
  %6736 = phi <2 x half> [ %6265, %5566 ], [ %6363, %._crit_edge2062.loopexit ]
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %6737 = shl nuw nsw i32 %160, 2, !dbg !134
  %6738 = and i32 %6737, 60, !dbg !134
  %6739 = xor i32 %6738, %218, !dbg !134
  %6740 = shl nuw nsw i32 %160, 6, !dbg !134
  %6741 = xor i32 %6738, %220, !dbg !134
  %6742 = xor i32 %6738, %221, !dbg !134
  %6743 = xor i32 %6738, %222, !dbg !134
  %6744 = xor i32 %6738, %223, !dbg !134
  %6745 = xor i32 %6738, %224, !dbg !134
  %6746 = xor i32 %6738, %225, !dbg !134
  %6747 = xor i32 %6738, %226, !dbg !134
  %6748 = getelementptr half, ptr addrspace(3) %6700, i32 %6739, !dbg !134
  %6749 = getelementptr half, ptr addrspace(3) %6748, i32 %6740, !dbg !134
  %6750 = load <4 x half>, ptr addrspace(3) %6749, align 8, !dbg !134
  %6751 = getelementptr half, ptr addrspace(3) %6700, i32 %6741, !dbg !134
  %6752 = getelementptr half, ptr addrspace(3) %6751, i32 %6740, !dbg !134
  %6753 = load <4 x half>, ptr addrspace(3) %6752, align 8, !dbg !134
  %6754 = getelementptr half, ptr addrspace(3) %6700, i32 %6742, !dbg !134
  %6755 = getelementptr half, ptr addrspace(3) %6754, i32 %6740, !dbg !134
  %6756 = load <4 x half>, ptr addrspace(3) %6755, align 8, !dbg !134
  %6757 = getelementptr half, ptr addrspace(3) %6700, i32 %6743, !dbg !134
  %6758 = getelementptr half, ptr addrspace(3) %6757, i32 %6740, !dbg !134
  %6759 = load <4 x half>, ptr addrspace(3) %6758, align 8, !dbg !134
  %6760 = getelementptr half, ptr addrspace(3) %6700, i32 %6744, !dbg !134
  %6761 = getelementptr half, ptr addrspace(3) %6760, i32 %6740, !dbg !134
  %6762 = load <4 x half>, ptr addrspace(3) %6761, align 8, !dbg !134
  %6763 = getelementptr half, ptr addrspace(3) %6700, i32 %6745, !dbg !134
  %6764 = getelementptr half, ptr addrspace(3) %6763, i32 %6740, !dbg !134
  %6765 = load <4 x half>, ptr addrspace(3) %6764, align 8, !dbg !134
  %6766 = getelementptr half, ptr addrspace(3) %6700, i32 %6746, !dbg !134
  %6767 = getelementptr half, ptr addrspace(3) %6766, i32 %6740, !dbg !134
  %6768 = load <4 x half>, ptr addrspace(3) %6767, align 8, !dbg !134
  %6769 = getelementptr half, ptr addrspace(3) %6700, i32 %6747, !dbg !134
  %6770 = getelementptr half, ptr addrspace(3) %6769, i32 %6740, !dbg !134
  %6771 = load <4 x half>, ptr addrspace(3) %6770, align 8, !dbg !134
  %6772 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !101
  %6773 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !101
  %6774 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !101
  %6775 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !101
  %6776 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !101
  %6777 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !101
  %6778 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !101
  %6779 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !101
  %6780 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %184, !dbg !132
  %6781 = shufflevector <2 x half> %6733, <2 x half> %6734, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %6781, ptr addrspace(3) %6780, align 8, !dbg !132
  %6782 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %191, !dbg !132
  %6783 = shufflevector <2 x half> %6735, <2 x half> %6736, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %6783, ptr addrspace(3) %6782, align 8, !dbg !132
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  %6784 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2337, !dbg !132
  %6785 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2339, !dbg !132
  %6786 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2341, !dbg !132
  %6787 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2343, !dbg !132
  %6788 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2345, !dbg !132
  %6789 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2347, !dbg !132
  %6790 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2349, !dbg !132
  %6791 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %.pre-phi2351, !dbg !132
  br i1 %5569, label %6792, label %6825, !dbg !136

6792:                                             ; preds = %._crit_edge2062
  %6793 = load <4 x half>, ptr addrspace(3) %6791, align 8, !dbg !132
  %6794 = load <4 x half>, ptr addrspace(3) %6790, align 8, !dbg !132
  %6795 = load <4 x half>, ptr addrspace(3) %6789, align 8, !dbg !132
  %6796 = load <4 x half>, ptr addrspace(3) %6788, align 8, !dbg !132
  %6797 = load <4 x half>, ptr addrspace(3) %6787, align 8, !dbg !132
  %6798 = load <4 x half>, ptr addrspace(3) %6786, align 8, !dbg !132
  %6799 = load <4 x half>, ptr addrspace(3) %6785, align 8, !dbg !132
  %6800 = load <4 x half>, ptr addrspace(3) %6784, align 8, !dbg !132
  %6801 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6800, <4 x half> %6772, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !136
  %6802 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6799, <4 x half> %6773, <16 x float> %6801, i32 0, i32 0, i32 0), !dbg !136
  %6803 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6798, <4 x half> %6774, <16 x float> %6802, i32 0, i32 0, i32 0), !dbg !136
  %6804 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6797, <4 x half> %6775, <16 x float> %6803, i32 0, i32 0, i32 0), !dbg !136
  %6805 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6796, <4 x half> %6776, <16 x float> %6804, i32 0, i32 0, i32 0), !dbg !136
  %6806 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6795, <4 x half> %6777, <16 x float> %6805, i32 0, i32 0, i32 0), !dbg !136
  %6807 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6794, <4 x half> %6778, <16 x float> %6806, i32 0, i32 0, i32 0), !dbg !136
  %6808 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6793, <4 x half> %6779, <16 x float> %6807, i32 0, i32 0, i32 0), !dbg !136
  %6809 = extractelement <16 x float> %6808, i64 0, !dbg !136
  %6810 = extractelement <16 x float> %6808, i64 1, !dbg !136
  %6811 = extractelement <16 x float> %6808, i64 2, !dbg !136
  %6812 = extractelement <16 x float> %6808, i64 3, !dbg !136
  %6813 = extractelement <16 x float> %6808, i64 4, !dbg !136
  %6814 = extractelement <16 x float> %6808, i64 5, !dbg !136
  %6815 = extractelement <16 x float> %6808, i64 6, !dbg !136
  %6816 = extractelement <16 x float> %6808, i64 7, !dbg !136
  %6817 = extractelement <16 x float> %6808, i64 8, !dbg !136
  %6818 = extractelement <16 x float> %6808, i64 9, !dbg !136
  %6819 = extractelement <16 x float> %6808, i64 10, !dbg !136
  %6820 = extractelement <16 x float> %6808, i64 11, !dbg !136
  %6821 = extractelement <16 x float> %6808, i64 12, !dbg !136
  %6822 = extractelement <16 x float> %6808, i64 13, !dbg !136
  %6823 = extractelement <16 x float> %6808, i64 14, !dbg !136
  %6824 = extractelement <16 x float> %6808, i64 15, !dbg !136
  br label %6825, !dbg !136

6825:                                             ; preds = %6792, %._crit_edge2062
  %6826 = phi float [ %6809, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6827 = phi float [ %6810, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6828 = phi float [ %6811, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6829 = phi float [ %6812, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6830 = phi float [ %6813, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6831 = phi float [ %6814, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6832 = phi float [ %6815, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6833 = phi float [ %6816, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6834 = phi float [ %6817, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6835 = phi float [ %6818, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6836 = phi float [ %6819, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6837 = phi float [ %6820, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6838 = phi float [ %6821, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6839 = phi float [ %6822, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6840 = phi float [ %6823, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6841 = phi float [ %6824, %6792 ], [ 0.000000e+00, %._crit_edge2062 ], !dbg !130
  %6842 = fsub float %6826, %2769, !dbg !137
  %6843 = fsub float %6827, %2769, !dbg !137
  %6844 = fsub float %6828, %2769, !dbg !137
  %6845 = fsub float %6829, %2769, !dbg !137
  %6846 = fsub float %6830, %2769, !dbg !137
  %6847 = fsub float %6831, %2769, !dbg !137
  %6848 = fsub float %6832, %2769, !dbg !137
  %6849 = fsub float %6833, %2769, !dbg !137
  %6850 = fsub float %6834, %2769, !dbg !137
  %6851 = fsub float %6835, %2769, !dbg !137
  %6852 = fsub float %6836, %2769, !dbg !137
  %6853 = fsub float %6837, %2769, !dbg !137
  %6854 = fsub float %6838, %2769, !dbg !137
  %6855 = fsub float %6839, %2769, !dbg !137
  %6856 = fsub float %6840, %2769, !dbg !137
  %6857 = fsub float %6841, %2769, !dbg !137
  %6858 = tail call float @llvm.amdgcn.exp2.f32(float %6842), !dbg !138
  %6859 = tail call float @llvm.amdgcn.exp2.f32(float %6843), !dbg !138
  %6860 = tail call float @llvm.amdgcn.exp2.f32(float %6844), !dbg !138
  %6861 = tail call float @llvm.amdgcn.exp2.f32(float %6845), !dbg !138
  %6862 = tail call float @llvm.amdgcn.exp2.f32(float %6846), !dbg !138
  %6863 = tail call float @llvm.amdgcn.exp2.f32(float %6847), !dbg !138
  %6864 = tail call float @llvm.amdgcn.exp2.f32(float %6848), !dbg !138
  %6865 = tail call float @llvm.amdgcn.exp2.f32(float %6849), !dbg !138
  %6866 = tail call float @llvm.amdgcn.exp2.f32(float %6850), !dbg !138
  %6867 = tail call float @llvm.amdgcn.exp2.f32(float %6851), !dbg !138
  %6868 = tail call float @llvm.amdgcn.exp2.f32(float %6852), !dbg !138
  %6869 = tail call float @llvm.amdgcn.exp2.f32(float %6853), !dbg !138
  %6870 = tail call float @llvm.amdgcn.exp2.f32(float %6854), !dbg !138
  %6871 = tail call float @llvm.amdgcn.exp2.f32(float %6855), !dbg !138
  %6872 = tail call float @llvm.amdgcn.exp2.f32(float %6856), !dbg !138
  %6873 = tail call float @llvm.amdgcn.exp2.f32(float %6857), !dbg !138
  br i1 %5569, label %6874, label %6899, !dbg !139

6874:                                             ; preds = %6825
  %6875 = load <4 x half>, ptr addrspace(3) %5229, align 8, !dbg !102
  %6876 = load <4 x half>, ptr addrspace(3) %5227, align 8, !dbg !102
  %6877 = load <4 x half>, ptr addrspace(3) %5225, align 8, !dbg !102
  %6878 = load <4 x half>, ptr addrspace(3) %5223, align 8, !dbg !102
  %6879 = load <4 x half>, ptr addrspace(3) %5221, align 8, !dbg !102
  %6880 = load <4 x half>, ptr addrspace(3) %5219, align 8, !dbg !102
  %6881 = load <4 x half>, ptr addrspace(3) %5217, align 8, !dbg !102
  %6882 = load <4 x half>, ptr addrspace(3) %5215, align 8, !dbg !102
  %6883 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6750, <4 x half> %6882, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !139
  %6884 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6753, <4 x half> %6881, <16 x float> %6883, i32 0, i32 0, i32 0), !dbg !139
  %6885 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6756, <4 x half> %6880, <16 x float> %6884, i32 0, i32 0, i32 0), !dbg !139
  %6886 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6759, <4 x half> %6879, <16 x float> %6885, i32 0, i32 0, i32 0), !dbg !139
  %6887 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6762, <4 x half> %6878, <16 x float> %6886, i32 0, i32 0, i32 0), !dbg !139
  %6888 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6765, <4 x half> %6877, <16 x float> %6887, i32 0, i32 0, i32 0), !dbg !139
  %6889 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6768, <4 x half> %6876, <16 x float> %6888, i32 0, i32 0, i32 0), !dbg !139
  %6890 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %6771, <4 x half> %6875, <16 x float> %6889, i32 0, i32 0, i32 0), !dbg !139
  %6891 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !130
  %6892 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !130
  %6893 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !130
  %6894 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !130
  %6895 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !130
  %6896 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !130
  %6897 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !130
  %6898 = shufflevector <16 x float> %6890, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !130
  br label %6899, !dbg !139

6899:                                             ; preds = %6874, %6825
  %6900 = phi <2 x float> [ %6891, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6901 = phi <2 x float> [ %6892, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6902 = phi <2 x float> [ %6893, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6903 = phi <2 x float> [ %6894, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6904 = phi <2 x float> [ %6895, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6905 = phi <2 x float> [ %6896, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6906 = phi <2 x float> [ %6897, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  %6907 = phi <2 x float> [ %6898, %6874 ], [ zeroinitializer, %6825 ], !dbg !130
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %6908 = getelementptr inbounds half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2879, !dbg !142
  %6909 = shufflevector <2 x half> %6733, <2 x half> %6734, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6910 = shufflevector <2 x half> %6735, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6911 = shufflevector <8 x half> %6909, <8 x half> %6910, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !142
  %6912 = shufflevector <2 x half> %6736, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %6913 = shufflevector <8 x half> %6911, <8 x half> %6912, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !142
  store <8 x half> %6913, ptr addrspace(3) %6908, align 16, !dbg !142
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %6914 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %360, !dbg !142
  %6915 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %361, !dbg !142
  %6916 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %362, !dbg !142
  %6917 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %363, !dbg !142
  %6918 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %364, !dbg !142
  %6919 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %365, !dbg !142
  %6920 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %366, !dbg !142
  %6921 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %367, !dbg !142
  %6922 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2886, !dbg !142
  %6923 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2887, !dbg !142
  %6924 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2888, !dbg !142
  %6925 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2889, !dbg !142
  %6926 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2890, !dbg !142
  %6927 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2891, !dbg !142
  %6928 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2892, !dbg !142
  %6929 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2893, !dbg !142
  %6930 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %368, !dbg !142
  %6931 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %369, !dbg !142
  %6932 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %370, !dbg !142
  %6933 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %371, !dbg !142
  %6934 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %372, !dbg !142
  %6935 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %373, !dbg !142
  %6936 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %374, !dbg !142
  %6937 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %375, !dbg !142
  %6938 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2894, !dbg !142
  %6939 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2895, !dbg !142
  %6940 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2896, !dbg !142
  %6941 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2897, !dbg !142
  %6942 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2898, !dbg !142
  %6943 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2899, !dbg !142
  %6944 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2900, !dbg !142
  %6945 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %2901, !dbg !142
  br i1 %5569, label %6946, label %7128, !dbg !143

6946:                                             ; preds = %6899
  %6947 = load <1 x half>, ptr addrspace(3) %6945, align 2, !dbg !142
  %6948 = shufflevector <1 x half> %6947, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6949 = load <1 x half>, ptr addrspace(3) %6944, align 2, !dbg !142
  %6950 = shufflevector <1 x half> %6949, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6951 = load <1 x half>, ptr addrspace(3) %6943, align 2, !dbg !142
  %6952 = load <1 x half>, ptr addrspace(3) %6942, align 2, !dbg !142
  %6953 = load <1 x half>, ptr addrspace(3) %6941, align 2, !dbg !142
  %6954 = shufflevector <1 x half> %6953, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6955 = load <1 x half>, ptr addrspace(3) %6940, align 2, !dbg !142
  %6956 = shufflevector <1 x half> %6955, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6957 = load <1 x half>, ptr addrspace(3) %6939, align 2, !dbg !142
  %6958 = load <1 x half>, ptr addrspace(3) %6938, align 2, !dbg !142
  %6959 = load <1 x half>, ptr addrspace(3) %6937, align 2, !dbg !142
  %6960 = shufflevector <1 x half> %6959, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6961 = load <1 x half>, ptr addrspace(3) %6936, align 2, !dbg !142
  %6962 = shufflevector <1 x half> %6961, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6963 = load <1 x half>, ptr addrspace(3) %6935, align 2, !dbg !142
  %6964 = load <1 x half>, ptr addrspace(3) %6934, align 2, !dbg !142
  %6965 = load <1 x half>, ptr addrspace(3) %6933, align 2, !dbg !142
  %6966 = shufflevector <1 x half> %6965, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6967 = load <1 x half>, ptr addrspace(3) %6932, align 2, !dbg !142
  %6968 = shufflevector <1 x half> %6967, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6969 = load <1 x half>, ptr addrspace(3) %6931, align 2, !dbg !142
  %6970 = load <1 x half>, ptr addrspace(3) %6930, align 2, !dbg !142
  %6971 = load <1 x half>, ptr addrspace(3) %6929, align 2, !dbg !142
  %6972 = shufflevector <1 x half> %6971, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6973 = load <1 x half>, ptr addrspace(3) %6928, align 2, !dbg !142
  %6974 = shufflevector <1 x half> %6973, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6975 = load <1 x half>, ptr addrspace(3) %6927, align 2, !dbg !142
  %6976 = load <1 x half>, ptr addrspace(3) %6926, align 2, !dbg !142
  %6977 = load <1 x half>, ptr addrspace(3) %6925, align 2, !dbg !142
  %6978 = shufflevector <1 x half> %6977, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6979 = load <1 x half>, ptr addrspace(3) %6924, align 2, !dbg !142
  %6980 = shufflevector <1 x half> %6979, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6981 = load <1 x half>, ptr addrspace(3) %6923, align 2, !dbg !142
  %6982 = load <1 x half>, ptr addrspace(3) %6922, align 2, !dbg !142
  %6983 = load <1 x half>, ptr addrspace(3) %6921, align 2, !dbg !142
  %6984 = shufflevector <1 x half> %6983, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6985 = load <1 x half>, ptr addrspace(3) %6920, align 2, !dbg !142
  %6986 = shufflevector <1 x half> %6985, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6987 = load <1 x half>, ptr addrspace(3) %6919, align 2, !dbg !142
  %6988 = load <1 x half>, ptr addrspace(3) %6918, align 2, !dbg !142
  %6989 = load <1 x half>, ptr addrspace(3) %6917, align 2, !dbg !142
  %6990 = shufflevector <1 x half> %6989, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6991 = load <1 x half>, ptr addrspace(3) %6916, align 2, !dbg !142
  %6992 = shufflevector <1 x half> %6991, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %6993 = load <1 x half>, ptr addrspace(3) %6915, align 2, !dbg !142
  %6994 = load <1 x half>, ptr addrspace(3) %6914, align 2, !dbg !142
  %6995 = shufflevector <1 x float> %unmaskedload336, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !135
  %6996 = fsub <2 x float> %6901, %6995, !dbg !135
  %6997 = insertelement <2 x float> poison, float %6872, i64 0, !dbg !140
  %6998 = insertelement <2 x float> %6997, float %6873, i64 1, !dbg !140
  %6999 = fmul <2 x float> %6998, %6996, !dbg !140
  %7000 = fptrunc <2 x float> %6999 to <2 x half>, !dbg !141
  %7001 = fsub <2 x float> %6900, %6995, !dbg !135
  %7002 = insertelement <2 x float> poison, float %6870, i64 0, !dbg !140
  %7003 = insertelement <2 x float> %7002, float %6871, i64 1, !dbg !140
  %7004 = fmul <2 x float> %7003, %7001, !dbg !140
  %7005 = fptrunc <2 x float> %7004 to <2 x half>, !dbg !141
  %7006 = fsub <2 x float> %6903, %6995, !dbg !135
  %7007 = insertelement <2 x float> poison, float %6868, i64 0, !dbg !140
  %7008 = insertelement <2 x float> %7007, float %6869, i64 1, !dbg !140
  %7009 = fmul <2 x float> %7008, %7006, !dbg !140
  %7010 = fptrunc <2 x float> %7009 to <2 x half>, !dbg !141
  %7011 = fsub <2 x float> %6902, %6995, !dbg !135
  %7012 = insertelement <2 x float> poison, float %6866, i64 0, !dbg !140
  %7013 = insertelement <2 x float> %7012, float %6867, i64 1, !dbg !140
  %7014 = fmul <2 x float> %7013, %7011, !dbg !140
  %7015 = fptrunc <2 x float> %7014 to <2 x half>, !dbg !141
  %7016 = fsub <2 x float> %6905, %6995, !dbg !135
  %7017 = insertelement <2 x float> poison, float %6864, i64 0, !dbg !140
  %7018 = insertelement <2 x float> %7017, float %6865, i64 1, !dbg !140
  %7019 = fmul <2 x float> %7018, %7016, !dbg !140
  %7020 = fptrunc <2 x float> %7019 to <2 x half>, !dbg !141
  %7021 = fsub <2 x float> %6904, %6995, !dbg !135
  %7022 = insertelement <2 x float> poison, float %6862, i64 0, !dbg !140
  %7023 = insertelement <2 x float> %7022, float %6863, i64 1, !dbg !140
  %7024 = fmul <2 x float> %7023, %7021, !dbg !140
  %7025 = fptrunc <2 x float> %7024 to <2 x half>, !dbg !141
  %7026 = fsub <2 x float> %6907, %6995, !dbg !135
  %7027 = insertelement <2 x float> poison, float %6860, i64 0, !dbg !140
  %7028 = insertelement <2 x float> %7027, float %6861, i64 1, !dbg !140
  %7029 = fmul <2 x float> %7028, %7026, !dbg !140
  %7030 = fptrunc <2 x float> %7029 to <2 x half>, !dbg !141
  %7031 = fsub <2 x float> %6906, %6995, !dbg !135
  %7032 = insertelement <2 x float> poison, float %6858, i64 0, !dbg !140
  %7033 = insertelement <2 x float> %7032, float %6859, i64 1, !dbg !140
  %7034 = fmul <2 x float> %7033, %7031, !dbg !140
  %7035 = fptrunc <2 x float> %7034 to <2 x half>, !dbg !141
  %7036 = shufflevector <2 x half> %7035, <2 x half> %7030, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7037 = shufflevector <2 x half> %7025, <2 x half> %7020, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7038 = shufflevector <2 x half> %7015, <2 x half> %7010, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7039 = shufflevector <2 x half> %7005, <2 x half> %7000, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7040 = shufflevector <1 x half> %6994, <1 x half> %6993, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7041 = shufflevector <4 x half> %7040, <4 x half> %6992, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7042 = shufflevector <4 x half> %7041, <4 x half> %6990, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7043 = shufflevector <1 x half> %6988, <1 x half> %6987, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7044 = shufflevector <4 x half> %7043, <4 x half> %6986, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7045 = shufflevector <4 x half> %7044, <4 x half> %6984, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7046 = shufflevector <1 x half> %6982, <1 x half> %6981, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7047 = shufflevector <4 x half> %7046, <4 x half> %6980, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7048 = shufflevector <4 x half> %7047, <4 x half> %6978, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7049 = shufflevector <1 x half> %6976, <1 x half> %6975, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7050 = shufflevector <4 x half> %7049, <4 x half> %6974, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7051 = shufflevector <4 x half> %7050, <4 x half> %6972, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7052 = shufflevector <1 x half> %6970, <1 x half> %6969, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7053 = shufflevector <4 x half> %7052, <4 x half> %6968, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7054 = shufflevector <4 x half> %7053, <4 x half> %6966, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7055 = shufflevector <1 x half> %6964, <1 x half> %6963, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7056 = shufflevector <4 x half> %7055, <4 x half> %6962, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7057 = shufflevector <4 x half> %7056, <4 x half> %6960, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7058 = shufflevector <1 x half> %6958, <1 x half> %6957, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7059 = shufflevector <4 x half> %7058, <4 x half> %6956, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7060 = shufflevector <4 x half> %7059, <4 x half> %6954, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7061 = shufflevector <1 x half> %6952, <1 x half> %6951, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7062 = shufflevector <4 x half> %7061, <4 x half> %6950, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7063 = shufflevector <4 x half> %7062, <4 x half> %6948, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7064 = insertelement <16 x float> poison, float %.pn861.lcssa, i64 0, !dbg !143
  %7065 = shufflevector <2 x float> %6701, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7066 = shufflevector <16 x float> %7064, <16 x float> %7065, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7067 = insertelement <16 x float> %7066, float %.pn855.lcssa, i64 3, !dbg !143
  %7068 = insertelement <16 x float> %7067, float %.pn853.lcssa, i64 4, !dbg !143
  %7069 = shufflevector <2 x float> %6702, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7070 = shufflevector <16 x float> %7068, <16 x float> %7069, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7071 = insertelement <16 x float> %7070, float %.pn847.lcssa, i64 7, !dbg !143
  %7072 = insertelement <16 x float> %7071, float %.pn845.lcssa, i64 8, !dbg !143
  %7073 = shufflevector <2 x float> %6703, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7074 = shufflevector <16 x float> %7072, <16 x float> %7073, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7075 = insertelement <16 x float> %7074, float %.pn839.lcssa, i64 11, !dbg !143
  %7076 = insertelement <16 x float> %7075, float %.pn837.lcssa, i64 12, !dbg !143
  %7077 = shufflevector <2 x float> %6704, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7078 = shufflevector <16 x float> %7076, <16 x float> %7077, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7079 = insertelement <16 x float> %7078, float %.pn831.lcssa, i64 15, !dbg !143
  %7080 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7042, <4 x half> %7036, <16 x float> %7079, i32 0, i32 0, i32 0), !dbg !143
  %7081 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7045, <4 x half> %7037, <16 x float> %7080, i32 0, i32 0, i32 0), !dbg !143
  %7082 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7048, <4 x half> %7038, <16 x float> %7081, i32 0, i32 0, i32 0), !dbg !143
  %7083 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7051, <4 x half> %7039, <16 x float> %7082, i32 0, i32 0, i32 0), !dbg !143
  %7084 = extractelement <16 x float> %7083, i64 0, !dbg !143
  %7085 = extractelement <16 x float> %7083, i64 3, !dbg !143
  %7086 = extractelement <16 x float> %7083, i64 4, !dbg !143
  %7087 = extractelement <16 x float> %7083, i64 7, !dbg !143
  %7088 = extractelement <16 x float> %7083, i64 8, !dbg !143
  %7089 = extractelement <16 x float> %7083, i64 11, !dbg !143
  %7090 = extractelement <16 x float> %7083, i64 12, !dbg !143
  %7091 = extractelement <16 x float> %7083, i64 15, !dbg !143
  %7092 = insertelement <16 x float> poison, float %.pn829.lcssa, i64 0, !dbg !143
  %7093 = shufflevector <2 x float> %6705, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7094 = shufflevector <16 x float> %7092, <16 x float> %7093, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7095 = insertelement <16 x float> %7094, float %.pn823.lcssa, i64 3, !dbg !143
  %7096 = insertelement <16 x float> %7095, float %.pn821.lcssa, i64 4, !dbg !143
  %7097 = shufflevector <2 x float> %6706, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7098 = shufflevector <16 x float> %7096, <16 x float> %7097, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7099 = insertelement <16 x float> %7098, float %.pn815.lcssa, i64 7, !dbg !143
  %7100 = insertelement <16 x float> %7099, float %.pn813.lcssa, i64 8, !dbg !143
  %7101 = shufflevector <2 x float> %6707, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7102 = shufflevector <16 x float> %7100, <16 x float> %7101, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7103 = insertelement <16 x float> %7102, float %.pn807.lcssa, i64 11, !dbg !143
  %7104 = insertelement <16 x float> %7103, float %.pn805.lcssa, i64 12, !dbg !143
  %7105 = shufflevector <2 x float> %6708, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7106 = shufflevector <16 x float> %7104, <16 x float> %7105, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7107 = insertelement <16 x float> %7106, float %.pn799.lcssa, i64 15, !dbg !143
  %7108 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7054, <4 x half> %7036, <16 x float> %7107, i32 0, i32 0, i32 0), !dbg !143
  %7109 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7057, <4 x half> %7037, <16 x float> %7108, i32 0, i32 0, i32 0), !dbg !143
  %7110 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7060, <4 x half> %7038, <16 x float> %7109, i32 0, i32 0, i32 0), !dbg !143
  %7111 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7063, <4 x half> %7039, <16 x float> %7110, i32 0, i32 0, i32 0), !dbg !143
  %7112 = extractelement <16 x float> %7111, i64 0, !dbg !143
  %7113 = extractelement <16 x float> %7111, i64 3, !dbg !143
  %7114 = extractelement <16 x float> %7111, i64 4, !dbg !143
  %7115 = extractelement <16 x float> %7111, i64 7, !dbg !143
  %7116 = extractelement <16 x float> %7111, i64 8, !dbg !143
  %7117 = extractelement <16 x float> %7111, i64 11, !dbg !143
  %7118 = extractelement <16 x float> %7111, i64 12, !dbg !143
  %7119 = extractelement <16 x float> %7111, i64 15, !dbg !143
  %7120 = shufflevector <16 x float> %7083, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7121 = shufflevector <16 x float> %7083, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7122 = shufflevector <16 x float> %7083, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7123 = shufflevector <16 x float> %7083, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %7124 = shufflevector <16 x float> %7111, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7125 = shufflevector <16 x float> %7111, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7126 = shufflevector <16 x float> %7111, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7127 = shufflevector <16 x float> %7111, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %7128, !dbg !143

7128:                                             ; preds = %6946, %6899
  %7129 = phi float [ %7084, %6946 ], [ %.pn861.lcssa, %6899 ]
  %.pn1169 = phi float [ %7085, %6946 ], [ %.pn855.lcssa, %6899 ]
  %.pn1167 = phi float [ %7086, %6946 ], [ %.pn853.lcssa, %6899 ]
  %.pn1161 = phi float [ %7087, %6946 ], [ %.pn847.lcssa, %6899 ]
  %.pn1159 = phi float [ %7088, %6946 ], [ %.pn845.lcssa, %6899 ]
  %.pn1153 = phi float [ %7089, %6946 ], [ %.pn839.lcssa, %6899 ]
  %.pn1151 = phi float [ %7090, %6946 ], [ %.pn837.lcssa, %6899 ]
  %.pn1145 = phi float [ %7091, %6946 ], [ %.pn831.lcssa, %6899 ]
  %.pn1143 = phi float [ %7112, %6946 ], [ %.pn829.lcssa, %6899 ]
  %.pn1137 = phi float [ %7113, %6946 ], [ %.pn823.lcssa, %6899 ]
  %.pn1135 = phi float [ %7114, %6946 ], [ %.pn821.lcssa, %6899 ]
  %.pn1129 = phi float [ %7115, %6946 ], [ %.pn815.lcssa, %6899 ]
  %.pn1127 = phi float [ %7116, %6946 ], [ %.pn813.lcssa, %6899 ]
  %.pn1121 = phi float [ %7117, %6946 ], [ %.pn807.lcssa, %6899 ]
  %.pn1119 = phi float [ %7118, %6946 ], [ %.pn805.lcssa, %6899 ]
  %.pn1113 = phi float [ %7119, %6946 ], [ %.pn799.lcssa, %6899 ]
  %7130 = phi <2 x float> [ %7120, %6946 ], [ %6701, %6899 ]
  %7131 = phi <2 x float> [ %7121, %6946 ], [ %6702, %6899 ]
  %7132 = phi <2 x float> [ %7122, %6946 ], [ %6703, %6899 ]
  %7133 = phi <2 x float> [ %7123, %6946 ], [ %6704, %6899 ]
  %7134 = phi <2 x float> [ %7124, %6946 ], [ %6705, %6899 ]
  %7135 = phi <2 x float> [ %7125, %6946 ], [ %6706, %6899 ]
  %7136 = phi <2 x float> [ %7126, %6946 ], [ %6707, %6899 ]
  %7137 = phi <2 x float> [ %7127, %6946 ], [ %6708, %6899 ]
  %7138 = add i32 %.lcssa1340, 1, !dbg !131
  %7139 = icmp slt i32 %7138, 4, !dbg !131
  %7140 = select i1 %7139, i32 %7138, i32 0, !dbg !131
  %.idx902 = shl i32 %7140, 12, !dbg !134
  %7141 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %.idx902, !dbg !134
  %7142 = getelementptr inbounds half, ptr addrspace(3) %7141, i32 %184, !dbg !134
  %7143 = shufflevector <2 x half> %6729, <2 x half> %6730, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7143, ptr addrspace(3) %7142, align 8, !dbg !134
  %7144 = getelementptr inbounds half, ptr addrspace(3) %7141, i32 %191, !dbg !134
  %7145 = shufflevector <2 x half> %6731, <2 x half> %6732, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7145, ptr addrspace(3) %7144, align 8, !dbg !134
  %7146 = select i1 %5575, i32 %7140, i32 %.lcssa1340, !dbg !131
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %7147 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2337, !dbg !134
  %7148 = load <4 x half>, ptr addrspace(3) %7147, align 8, !dbg !134
  %7149 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2339, !dbg !134
  %7150 = load <4 x half>, ptr addrspace(3) %7149, align 8, !dbg !134
  %7151 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2341, !dbg !134
  %7152 = load <4 x half>, ptr addrspace(3) %7151, align 8, !dbg !134
  %7153 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2343, !dbg !134
  %7154 = load <4 x half>, ptr addrspace(3) %7153, align 8, !dbg !134
  %7155 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2345, !dbg !134
  %7156 = load <4 x half>, ptr addrspace(3) %7155, align 8, !dbg !134
  %7157 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2347, !dbg !134
  %7158 = load <4 x half>, ptr addrspace(3) %7157, align 8, !dbg !134
  %7159 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2349, !dbg !134
  %7160 = load <4 x half>, ptr addrspace(3) %7159, align 8, !dbg !134
  %7161 = getelementptr half, ptr addrspace(3) %7141, i32 %.pre-phi2351, !dbg !134
  %7162 = load <4 x half>, ptr addrspace(3) %7161, align 8, !dbg !134
  %7163 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !101
  %7164 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !101
  %7165 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !101
  %7166 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !101
  %7167 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !101
  %7168 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !101
  %7169 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !101
  %7170 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !101
  %7171 = shufflevector <2 x half> %6725, <2 x half> %6726, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7171, ptr addrspace(3) %6780, align 8, !dbg !132
  %7172 = shufflevector <2 x half> %6727, <2 x half> %6728, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7172, ptr addrspace(3) %6782, align 8, !dbg !132
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  br i1 %5575, label %7173, label %7206, !dbg !136

7173:                                             ; preds = %7128
  %7174 = load <4 x half>, ptr addrspace(3) %6791, align 8, !dbg !132
  %7175 = load <4 x half>, ptr addrspace(3) %6790, align 8, !dbg !132
  %7176 = load <4 x half>, ptr addrspace(3) %6789, align 8, !dbg !132
  %7177 = load <4 x half>, ptr addrspace(3) %6788, align 8, !dbg !132
  %7178 = load <4 x half>, ptr addrspace(3) %6787, align 8, !dbg !132
  %7179 = load <4 x half>, ptr addrspace(3) %6786, align 8, !dbg !132
  %7180 = load <4 x half>, ptr addrspace(3) %6785, align 8, !dbg !132
  %7181 = load <4 x half>, ptr addrspace(3) %6784, align 8, !dbg !132
  %7182 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7181, <4 x half> %7163, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !136
  %7183 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7180, <4 x half> %7164, <16 x float> %7182, i32 0, i32 0, i32 0), !dbg !136
  %7184 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7179, <4 x half> %7165, <16 x float> %7183, i32 0, i32 0, i32 0), !dbg !136
  %7185 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7178, <4 x half> %7166, <16 x float> %7184, i32 0, i32 0, i32 0), !dbg !136
  %7186 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7177, <4 x half> %7167, <16 x float> %7185, i32 0, i32 0, i32 0), !dbg !136
  %7187 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7176, <4 x half> %7168, <16 x float> %7186, i32 0, i32 0, i32 0), !dbg !136
  %7188 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7175, <4 x half> %7169, <16 x float> %7187, i32 0, i32 0, i32 0), !dbg !136
  %7189 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7174, <4 x half> %7170, <16 x float> %7188, i32 0, i32 0, i32 0), !dbg !136
  %7190 = extractelement <16 x float> %7189, i64 0, !dbg !136
  %7191 = extractelement <16 x float> %7189, i64 1, !dbg !136
  %7192 = extractelement <16 x float> %7189, i64 2, !dbg !136
  %7193 = extractelement <16 x float> %7189, i64 3, !dbg !136
  %7194 = extractelement <16 x float> %7189, i64 4, !dbg !136
  %7195 = extractelement <16 x float> %7189, i64 5, !dbg !136
  %7196 = extractelement <16 x float> %7189, i64 6, !dbg !136
  %7197 = extractelement <16 x float> %7189, i64 7, !dbg !136
  %7198 = extractelement <16 x float> %7189, i64 8, !dbg !136
  %7199 = extractelement <16 x float> %7189, i64 9, !dbg !136
  %7200 = extractelement <16 x float> %7189, i64 10, !dbg !136
  %7201 = extractelement <16 x float> %7189, i64 11, !dbg !136
  %7202 = extractelement <16 x float> %7189, i64 12, !dbg !136
  %7203 = extractelement <16 x float> %7189, i64 13, !dbg !136
  %7204 = extractelement <16 x float> %7189, i64 14, !dbg !136
  %7205 = extractelement <16 x float> %7189, i64 15, !dbg !136
  br label %7206, !dbg !136

7206:                                             ; preds = %7173, %7128
  %7207 = phi float [ %7190, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7208 = phi float [ %7191, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7209 = phi float [ %7192, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7210 = phi float [ %7193, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7211 = phi float [ %7194, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7212 = phi float [ %7195, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7213 = phi float [ %7196, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7214 = phi float [ %7197, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7215 = phi float [ %7198, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7216 = phi float [ %7199, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7217 = phi float [ %7200, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7218 = phi float [ %7201, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7219 = phi float [ %7202, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7220 = phi float [ %7203, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7221 = phi float [ %7204, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7222 = phi float [ %7205, %7173 ], [ 0.000000e+00, %7128 ], !dbg !130
  %7223 = fsub float %7207, %2769, !dbg !137
  %7224 = fsub float %7208, %2769, !dbg !137
  %7225 = fsub float %7209, %2769, !dbg !137
  %7226 = fsub float %7210, %2769, !dbg !137
  %7227 = fsub float %7211, %2769, !dbg !137
  %7228 = fsub float %7212, %2769, !dbg !137
  %7229 = fsub float %7213, %2769, !dbg !137
  %7230 = fsub float %7214, %2769, !dbg !137
  %7231 = fsub float %7215, %2769, !dbg !137
  %7232 = fsub float %7216, %2769, !dbg !137
  %7233 = fsub float %7217, %2769, !dbg !137
  %7234 = fsub float %7218, %2769, !dbg !137
  %7235 = fsub float %7219, %2769, !dbg !137
  %7236 = fsub float %7220, %2769, !dbg !137
  %7237 = fsub float %7221, %2769, !dbg !137
  %7238 = fsub float %7222, %2769, !dbg !137
  %7239 = tail call float @llvm.amdgcn.exp2.f32(float %7223), !dbg !138
  %7240 = tail call float @llvm.amdgcn.exp2.f32(float %7224), !dbg !138
  %7241 = tail call float @llvm.amdgcn.exp2.f32(float %7225), !dbg !138
  %7242 = tail call float @llvm.amdgcn.exp2.f32(float %7226), !dbg !138
  %7243 = tail call float @llvm.amdgcn.exp2.f32(float %7227), !dbg !138
  %7244 = tail call float @llvm.amdgcn.exp2.f32(float %7228), !dbg !138
  %7245 = tail call float @llvm.amdgcn.exp2.f32(float %7229), !dbg !138
  %7246 = tail call float @llvm.amdgcn.exp2.f32(float %7230), !dbg !138
  %7247 = tail call float @llvm.amdgcn.exp2.f32(float %7231), !dbg !138
  %7248 = tail call float @llvm.amdgcn.exp2.f32(float %7232), !dbg !138
  %7249 = tail call float @llvm.amdgcn.exp2.f32(float %7233), !dbg !138
  %7250 = tail call float @llvm.amdgcn.exp2.f32(float %7234), !dbg !138
  %7251 = tail call float @llvm.amdgcn.exp2.f32(float %7235), !dbg !138
  %7252 = tail call float @llvm.amdgcn.exp2.f32(float %7236), !dbg !138
  %7253 = tail call float @llvm.amdgcn.exp2.f32(float %7237), !dbg !138
  %7254 = tail call float @llvm.amdgcn.exp2.f32(float %7238), !dbg !138
  br i1 %5575, label %7255, label %7280, !dbg !139

7255:                                             ; preds = %7206
  %7256 = load <4 x half>, ptr addrspace(3) %5229, align 8, !dbg !102
  %7257 = load <4 x half>, ptr addrspace(3) %5227, align 8, !dbg !102
  %7258 = load <4 x half>, ptr addrspace(3) %5225, align 8, !dbg !102
  %7259 = load <4 x half>, ptr addrspace(3) %5223, align 8, !dbg !102
  %7260 = load <4 x half>, ptr addrspace(3) %5221, align 8, !dbg !102
  %7261 = load <4 x half>, ptr addrspace(3) %5219, align 8, !dbg !102
  %7262 = load <4 x half>, ptr addrspace(3) %5217, align 8, !dbg !102
  %7263 = load <4 x half>, ptr addrspace(3) %5215, align 8, !dbg !102
  %7264 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7148, <4 x half> %7263, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !139
  %7265 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7150, <4 x half> %7262, <16 x float> %7264, i32 0, i32 0, i32 0), !dbg !139
  %7266 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7152, <4 x half> %7261, <16 x float> %7265, i32 0, i32 0, i32 0), !dbg !139
  %7267 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7154, <4 x half> %7260, <16 x float> %7266, i32 0, i32 0, i32 0), !dbg !139
  %7268 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7156, <4 x half> %7259, <16 x float> %7267, i32 0, i32 0, i32 0), !dbg !139
  %7269 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7158, <4 x half> %7258, <16 x float> %7268, i32 0, i32 0, i32 0), !dbg !139
  %7270 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7160, <4 x half> %7257, <16 x float> %7269, i32 0, i32 0, i32 0), !dbg !139
  %7271 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7162, <4 x half> %7256, <16 x float> %7270, i32 0, i32 0, i32 0), !dbg !139
  %7272 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !130
  %7273 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !130
  %7274 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !130
  %7275 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !130
  %7276 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !130
  %7277 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !130
  %7278 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !130
  %7279 = shufflevector <16 x float> %7271, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !130
  br label %7280, !dbg !139

7280:                                             ; preds = %7255, %7206
  %7281 = phi <2 x float> [ %7272, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7282 = phi <2 x float> [ %7273, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7283 = phi <2 x float> [ %7274, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7284 = phi <2 x float> [ %7275, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7285 = phi <2 x float> [ %7276, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7286 = phi <2 x float> [ %7277, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7287 = phi <2 x float> [ %7278, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  %7288 = phi <2 x float> [ %7279, %7255 ], [ zeroinitializer, %7206 ], !dbg !130
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %7289 = shufflevector <2 x half> %6725, <2 x half> %6726, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7290 = shufflevector <2 x half> %6727, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7291 = shufflevector <8 x half> %7289, <8 x half> %7290, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !142
  %7292 = shufflevector <2 x half> %6728, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7293 = shufflevector <8 x half> %7291, <8 x half> %7292, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !142
  store <8 x half> %7293, ptr addrspace(3) %6908, align 16, !dbg !142
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  br i1 %5575, label %7294, label %7476, !dbg !143

7294:                                             ; preds = %7280
  %7295 = load <1 x half>, ptr addrspace(3) %6945, align 2, !dbg !142
  %7296 = shufflevector <1 x half> %7295, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7297 = load <1 x half>, ptr addrspace(3) %6944, align 2, !dbg !142
  %7298 = shufflevector <1 x half> %7297, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7299 = load <1 x half>, ptr addrspace(3) %6943, align 2, !dbg !142
  %7300 = load <1 x half>, ptr addrspace(3) %6942, align 2, !dbg !142
  %7301 = load <1 x half>, ptr addrspace(3) %6941, align 2, !dbg !142
  %7302 = shufflevector <1 x half> %7301, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7303 = load <1 x half>, ptr addrspace(3) %6940, align 2, !dbg !142
  %7304 = shufflevector <1 x half> %7303, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7305 = load <1 x half>, ptr addrspace(3) %6939, align 2, !dbg !142
  %7306 = load <1 x half>, ptr addrspace(3) %6938, align 2, !dbg !142
  %7307 = load <1 x half>, ptr addrspace(3) %6937, align 2, !dbg !142
  %7308 = shufflevector <1 x half> %7307, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7309 = load <1 x half>, ptr addrspace(3) %6936, align 2, !dbg !142
  %7310 = shufflevector <1 x half> %7309, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7311 = load <1 x half>, ptr addrspace(3) %6935, align 2, !dbg !142
  %7312 = load <1 x half>, ptr addrspace(3) %6934, align 2, !dbg !142
  %7313 = load <1 x half>, ptr addrspace(3) %6933, align 2, !dbg !142
  %7314 = shufflevector <1 x half> %7313, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7315 = load <1 x half>, ptr addrspace(3) %6932, align 2, !dbg !142
  %7316 = shufflevector <1 x half> %7315, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7317 = load <1 x half>, ptr addrspace(3) %6931, align 2, !dbg !142
  %7318 = load <1 x half>, ptr addrspace(3) %6930, align 2, !dbg !142
  %7319 = load <1 x half>, ptr addrspace(3) %6929, align 2, !dbg !142
  %7320 = shufflevector <1 x half> %7319, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7321 = load <1 x half>, ptr addrspace(3) %6928, align 2, !dbg !142
  %7322 = shufflevector <1 x half> %7321, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7323 = load <1 x half>, ptr addrspace(3) %6927, align 2, !dbg !142
  %7324 = load <1 x half>, ptr addrspace(3) %6926, align 2, !dbg !142
  %7325 = load <1 x half>, ptr addrspace(3) %6925, align 2, !dbg !142
  %7326 = shufflevector <1 x half> %7325, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7327 = load <1 x half>, ptr addrspace(3) %6924, align 2, !dbg !142
  %7328 = shufflevector <1 x half> %7327, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7329 = load <1 x half>, ptr addrspace(3) %6923, align 2, !dbg !142
  %7330 = load <1 x half>, ptr addrspace(3) %6922, align 2, !dbg !142
  %7331 = load <1 x half>, ptr addrspace(3) %6921, align 2, !dbg !142
  %7332 = shufflevector <1 x half> %7331, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7333 = load <1 x half>, ptr addrspace(3) %6920, align 2, !dbg !142
  %7334 = shufflevector <1 x half> %7333, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7335 = load <1 x half>, ptr addrspace(3) %6919, align 2, !dbg !142
  %7336 = load <1 x half>, ptr addrspace(3) %6918, align 2, !dbg !142
  %7337 = load <1 x half>, ptr addrspace(3) %6917, align 2, !dbg !142
  %7338 = shufflevector <1 x half> %7337, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7339 = load <1 x half>, ptr addrspace(3) %6916, align 2, !dbg !142
  %7340 = shufflevector <1 x half> %7339, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7341 = load <1 x half>, ptr addrspace(3) %6915, align 2, !dbg !142
  %7342 = load <1 x half>, ptr addrspace(3) %6914, align 2, !dbg !142
  %7343 = shufflevector <1 x float> %unmaskedload336, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !135
  %7344 = fsub <2 x float> %7282, %7343, !dbg !135
  %7345 = insertelement <2 x float> poison, float %7253, i64 0, !dbg !140
  %7346 = insertelement <2 x float> %7345, float %7254, i64 1, !dbg !140
  %7347 = fmul <2 x float> %7346, %7344, !dbg !140
  %7348 = fptrunc <2 x float> %7347 to <2 x half>, !dbg !141
  %7349 = fsub <2 x float> %7281, %7343, !dbg !135
  %7350 = insertelement <2 x float> poison, float %7251, i64 0, !dbg !140
  %7351 = insertelement <2 x float> %7350, float %7252, i64 1, !dbg !140
  %7352 = fmul <2 x float> %7351, %7349, !dbg !140
  %7353 = fptrunc <2 x float> %7352 to <2 x half>, !dbg !141
  %7354 = fsub <2 x float> %7284, %7343, !dbg !135
  %7355 = insertelement <2 x float> poison, float %7249, i64 0, !dbg !140
  %7356 = insertelement <2 x float> %7355, float %7250, i64 1, !dbg !140
  %7357 = fmul <2 x float> %7356, %7354, !dbg !140
  %7358 = fptrunc <2 x float> %7357 to <2 x half>, !dbg !141
  %7359 = fsub <2 x float> %7283, %7343, !dbg !135
  %7360 = insertelement <2 x float> poison, float %7247, i64 0, !dbg !140
  %7361 = insertelement <2 x float> %7360, float %7248, i64 1, !dbg !140
  %7362 = fmul <2 x float> %7361, %7359, !dbg !140
  %7363 = fptrunc <2 x float> %7362 to <2 x half>, !dbg !141
  %7364 = fsub <2 x float> %7286, %7343, !dbg !135
  %7365 = insertelement <2 x float> poison, float %7245, i64 0, !dbg !140
  %7366 = insertelement <2 x float> %7365, float %7246, i64 1, !dbg !140
  %7367 = fmul <2 x float> %7366, %7364, !dbg !140
  %7368 = fptrunc <2 x float> %7367 to <2 x half>, !dbg !141
  %7369 = fsub <2 x float> %7285, %7343, !dbg !135
  %7370 = insertelement <2 x float> poison, float %7243, i64 0, !dbg !140
  %7371 = insertelement <2 x float> %7370, float %7244, i64 1, !dbg !140
  %7372 = fmul <2 x float> %7371, %7369, !dbg !140
  %7373 = fptrunc <2 x float> %7372 to <2 x half>, !dbg !141
  %7374 = fsub <2 x float> %7288, %7343, !dbg !135
  %7375 = insertelement <2 x float> poison, float %7241, i64 0, !dbg !140
  %7376 = insertelement <2 x float> %7375, float %7242, i64 1, !dbg !140
  %7377 = fmul <2 x float> %7376, %7374, !dbg !140
  %7378 = fptrunc <2 x float> %7377 to <2 x half>, !dbg !141
  %7379 = fsub <2 x float> %7287, %7343, !dbg !135
  %7380 = insertelement <2 x float> poison, float %7239, i64 0, !dbg !140
  %7381 = insertelement <2 x float> %7380, float %7240, i64 1, !dbg !140
  %7382 = fmul <2 x float> %7381, %7379, !dbg !140
  %7383 = fptrunc <2 x float> %7382 to <2 x half>, !dbg !141
  %7384 = shufflevector <2 x half> %7383, <2 x half> %7378, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7385 = shufflevector <2 x half> %7373, <2 x half> %7368, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7386 = shufflevector <2 x half> %7363, <2 x half> %7358, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7387 = shufflevector <2 x half> %7353, <2 x half> %7348, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7388 = shufflevector <1 x half> %7342, <1 x half> %7341, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7389 = shufflevector <4 x half> %7388, <4 x half> %7340, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7390 = shufflevector <4 x half> %7389, <4 x half> %7338, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7391 = shufflevector <1 x half> %7336, <1 x half> %7335, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7392 = shufflevector <4 x half> %7391, <4 x half> %7334, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7393 = shufflevector <4 x half> %7392, <4 x half> %7332, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7394 = shufflevector <1 x half> %7330, <1 x half> %7329, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7395 = shufflevector <4 x half> %7394, <4 x half> %7328, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7396 = shufflevector <4 x half> %7395, <4 x half> %7326, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7397 = shufflevector <1 x half> %7324, <1 x half> %7323, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7398 = shufflevector <4 x half> %7397, <4 x half> %7322, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7399 = shufflevector <4 x half> %7398, <4 x half> %7320, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7400 = shufflevector <1 x half> %7318, <1 x half> %7317, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7401 = shufflevector <4 x half> %7400, <4 x half> %7316, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7402 = shufflevector <4 x half> %7401, <4 x half> %7314, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7403 = shufflevector <1 x half> %7312, <1 x half> %7311, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7404 = shufflevector <4 x half> %7403, <4 x half> %7310, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7405 = shufflevector <4 x half> %7404, <4 x half> %7308, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7406 = shufflevector <1 x half> %7306, <1 x half> %7305, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7407 = shufflevector <4 x half> %7406, <4 x half> %7304, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7408 = shufflevector <4 x half> %7407, <4 x half> %7302, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7409 = shufflevector <1 x half> %7300, <1 x half> %7299, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7410 = shufflevector <4 x half> %7409, <4 x half> %7298, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7411 = shufflevector <4 x half> %7410, <4 x half> %7296, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7412 = insertelement <16 x float> poison, float %7129, i64 0, !dbg !143
  %7413 = shufflevector <2 x float> %7130, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7414 = shufflevector <16 x float> %7412, <16 x float> %7413, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7415 = insertelement <16 x float> %7414, float %.pn1169, i64 3, !dbg !143
  %7416 = insertelement <16 x float> %7415, float %.pn1167, i64 4, !dbg !143
  %7417 = shufflevector <2 x float> %7131, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7418 = shufflevector <16 x float> %7416, <16 x float> %7417, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7419 = insertelement <16 x float> %7418, float %.pn1161, i64 7, !dbg !143
  %7420 = insertelement <16 x float> %7419, float %.pn1159, i64 8, !dbg !143
  %7421 = shufflevector <2 x float> %7132, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7422 = shufflevector <16 x float> %7420, <16 x float> %7421, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7423 = insertelement <16 x float> %7422, float %.pn1153, i64 11, !dbg !143
  %7424 = insertelement <16 x float> %7423, float %.pn1151, i64 12, !dbg !143
  %7425 = shufflevector <2 x float> %7133, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7426 = shufflevector <16 x float> %7424, <16 x float> %7425, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7427 = insertelement <16 x float> %7426, float %.pn1145, i64 15, !dbg !143
  %7428 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7390, <4 x half> %7384, <16 x float> %7427, i32 0, i32 0, i32 0), !dbg !143
  %7429 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7393, <4 x half> %7385, <16 x float> %7428, i32 0, i32 0, i32 0), !dbg !143
  %7430 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7396, <4 x half> %7386, <16 x float> %7429, i32 0, i32 0, i32 0), !dbg !143
  %7431 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7399, <4 x half> %7387, <16 x float> %7430, i32 0, i32 0, i32 0), !dbg !143
  %7432 = extractelement <16 x float> %7431, i64 0, !dbg !143
  %7433 = extractelement <16 x float> %7431, i64 3, !dbg !143
  %7434 = extractelement <16 x float> %7431, i64 4, !dbg !143
  %7435 = extractelement <16 x float> %7431, i64 7, !dbg !143
  %7436 = extractelement <16 x float> %7431, i64 8, !dbg !143
  %7437 = extractelement <16 x float> %7431, i64 11, !dbg !143
  %7438 = extractelement <16 x float> %7431, i64 12, !dbg !143
  %7439 = extractelement <16 x float> %7431, i64 15, !dbg !143
  %7440 = insertelement <16 x float> poison, float %.pn1143, i64 0, !dbg !143
  %7441 = shufflevector <2 x float> %7134, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7442 = shufflevector <16 x float> %7440, <16 x float> %7441, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7443 = insertelement <16 x float> %7442, float %.pn1137, i64 3, !dbg !143
  %7444 = insertelement <16 x float> %7443, float %.pn1135, i64 4, !dbg !143
  %7445 = shufflevector <2 x float> %7135, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7446 = shufflevector <16 x float> %7444, <16 x float> %7445, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7447 = insertelement <16 x float> %7446, float %.pn1129, i64 7, !dbg !143
  %7448 = insertelement <16 x float> %7447, float %.pn1127, i64 8, !dbg !143
  %7449 = shufflevector <2 x float> %7136, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7450 = shufflevector <16 x float> %7448, <16 x float> %7449, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7451 = insertelement <16 x float> %7450, float %.pn1121, i64 11, !dbg !143
  %7452 = insertelement <16 x float> %7451, float %.pn1119, i64 12, !dbg !143
  %7453 = shufflevector <2 x float> %7137, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7454 = shufflevector <16 x float> %7452, <16 x float> %7453, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7455 = insertelement <16 x float> %7454, float %.pn1113, i64 15, !dbg !143
  %7456 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7402, <4 x half> %7384, <16 x float> %7455, i32 0, i32 0, i32 0), !dbg !143
  %7457 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7405, <4 x half> %7385, <16 x float> %7456, i32 0, i32 0, i32 0), !dbg !143
  %7458 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7408, <4 x half> %7386, <16 x float> %7457, i32 0, i32 0, i32 0), !dbg !143
  %7459 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7411, <4 x half> %7387, <16 x float> %7458, i32 0, i32 0, i32 0), !dbg !143
  %7460 = extractelement <16 x float> %7459, i64 0, !dbg !143
  %7461 = extractelement <16 x float> %7459, i64 3, !dbg !143
  %7462 = extractelement <16 x float> %7459, i64 4, !dbg !143
  %7463 = extractelement <16 x float> %7459, i64 7, !dbg !143
  %7464 = extractelement <16 x float> %7459, i64 8, !dbg !143
  %7465 = extractelement <16 x float> %7459, i64 11, !dbg !143
  %7466 = extractelement <16 x float> %7459, i64 12, !dbg !143
  %7467 = extractelement <16 x float> %7459, i64 15, !dbg !143
  %7468 = shufflevector <16 x float> %7431, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7469 = shufflevector <16 x float> %7431, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7470 = shufflevector <16 x float> %7431, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7471 = shufflevector <16 x float> %7431, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %7472 = shufflevector <16 x float> %7459, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7473 = shufflevector <16 x float> %7459, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7474 = shufflevector <16 x float> %7459, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7475 = shufflevector <16 x float> %7459, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %7476, !dbg !143

7476:                                             ; preds = %7294, %7280
  %7477 = phi float [ %7467, %7294 ], [ %.pn1113, %7280 ]
  %7478 = phi float [ %7466, %7294 ], [ %.pn1119, %7280 ]
  %7479 = phi float [ %7465, %7294 ], [ %.pn1121, %7280 ]
  %7480 = phi float [ %7464, %7294 ], [ %.pn1127, %7280 ]
  %7481 = phi float [ %7463, %7294 ], [ %.pn1129, %7280 ]
  %7482 = phi float [ %7462, %7294 ], [ %.pn1135, %7280 ]
  %7483 = phi float [ %7461, %7294 ], [ %.pn1137, %7280 ]
  %7484 = phi float [ %7460, %7294 ], [ %.pn1143, %7280 ]
  %7485 = phi float [ %7439, %7294 ], [ %.pn1145, %7280 ]
  %7486 = phi float [ %7438, %7294 ], [ %.pn1151, %7280 ]
  %7487 = phi float [ %7437, %7294 ], [ %.pn1153, %7280 ]
  %7488 = phi float [ %7436, %7294 ], [ %.pn1159, %7280 ]
  %7489 = phi float [ %7435, %7294 ], [ %.pn1161, %7280 ]
  %7490 = phi float [ %7434, %7294 ], [ %.pn1167, %7280 ]
  %7491 = phi float [ %7433, %7294 ], [ %.pn1169, %7280 ]
  %7492 = phi float [ %7432, %7294 ], [ %7129, %7280 ]
  %7493 = phi <2 x float> [ %7468, %7294 ], [ %7130, %7280 ]
  %7494 = phi <2 x float> [ %7469, %7294 ], [ %7131, %7280 ]
  %7495 = phi <2 x float> [ %7470, %7294 ], [ %7132, %7280 ]
  %7496 = phi <2 x float> [ %7471, %7294 ], [ %7133, %7280 ]
  %7497 = phi <2 x float> [ %7472, %7294 ], [ %7134, %7280 ]
  %7498 = phi <2 x float> [ %7473, %7294 ], [ %7135, %7280 ]
  %7499 = phi <2 x float> [ %7474, %7294 ], [ %7136, %7280 ]
  %7500 = phi <2 x float> [ %7475, %7294 ], [ %7137, %7280 ]
  %7501 = add i32 %7146, 1, !dbg !131
  %7502 = icmp slt i32 %7501, 4, !dbg !131
  %7503 = select i1 %7502, i32 %7501, i32 0, !dbg !131
  %.idx967 = shl i32 %7503, 12, !dbg !134
  %7504 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %.idx967, !dbg !134
  %7505 = getelementptr inbounds half, ptr addrspace(3) %7504, i32 %184, !dbg !134
  %7506 = shufflevector <2 x half> %6721, <2 x half> %6722, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7506, ptr addrspace(3) %7505, align 8, !dbg !134
  %7507 = getelementptr inbounds half, ptr addrspace(3) %7504, i32 %191, !dbg !134
  %7508 = shufflevector <2 x half> %6723, <2 x half> %6724, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7508, ptr addrspace(3) %7507, align 8, !dbg !134
  %7509 = select i1 %5581, i32 %7503, i32 %7146, !dbg !131
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %7510 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2337, !dbg !134
  %7511 = load <4 x half>, ptr addrspace(3) %7510, align 8, !dbg !134
  %7512 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2339, !dbg !134
  %7513 = load <4 x half>, ptr addrspace(3) %7512, align 8, !dbg !134
  %7514 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2341, !dbg !134
  %7515 = load <4 x half>, ptr addrspace(3) %7514, align 8, !dbg !134
  %7516 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2343, !dbg !134
  %7517 = load <4 x half>, ptr addrspace(3) %7516, align 8, !dbg !134
  %7518 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2345, !dbg !134
  %7519 = load <4 x half>, ptr addrspace(3) %7518, align 8, !dbg !134
  %7520 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2347, !dbg !134
  %7521 = load <4 x half>, ptr addrspace(3) %7520, align 8, !dbg !134
  %7522 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2349, !dbg !134
  %7523 = load <4 x half>, ptr addrspace(3) %7522, align 8, !dbg !134
  %7524 = getelementptr half, ptr addrspace(3) %7504, i32 %.pre-phi2351, !dbg !134
  %7525 = load <4 x half>, ptr addrspace(3) %7524, align 8, !dbg !134
  %7526 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !101
  %7527 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !101
  %7528 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !101
  %7529 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !101
  %7530 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !101
  %7531 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !101
  %7532 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !101
  %7533 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !101
  %7534 = shufflevector <2 x half> %6717, <2 x half> %6718, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7534, ptr addrspace(3) %6780, align 8, !dbg !132
  %7535 = shufflevector <2 x half> %6719, <2 x half> %6720, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7535, ptr addrspace(3) %6782, align 8, !dbg !132
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  br i1 %5581, label %7536, label %7569, !dbg !136

7536:                                             ; preds = %7476
  %7537 = load <4 x half>, ptr addrspace(3) %6791, align 8, !dbg !132
  %7538 = load <4 x half>, ptr addrspace(3) %6790, align 8, !dbg !132
  %7539 = load <4 x half>, ptr addrspace(3) %6789, align 8, !dbg !132
  %7540 = load <4 x half>, ptr addrspace(3) %6788, align 8, !dbg !132
  %7541 = load <4 x half>, ptr addrspace(3) %6787, align 8, !dbg !132
  %7542 = load <4 x half>, ptr addrspace(3) %6786, align 8, !dbg !132
  %7543 = load <4 x half>, ptr addrspace(3) %6785, align 8, !dbg !132
  %7544 = load <4 x half>, ptr addrspace(3) %6784, align 8, !dbg !132
  %7545 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7544, <4 x half> %7526, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !136
  %7546 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7543, <4 x half> %7527, <16 x float> %7545, i32 0, i32 0, i32 0), !dbg !136
  %7547 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7542, <4 x half> %7528, <16 x float> %7546, i32 0, i32 0, i32 0), !dbg !136
  %7548 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7541, <4 x half> %7529, <16 x float> %7547, i32 0, i32 0, i32 0), !dbg !136
  %7549 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7540, <4 x half> %7530, <16 x float> %7548, i32 0, i32 0, i32 0), !dbg !136
  %7550 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7539, <4 x half> %7531, <16 x float> %7549, i32 0, i32 0, i32 0), !dbg !136
  %7551 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7538, <4 x half> %7532, <16 x float> %7550, i32 0, i32 0, i32 0), !dbg !136
  %7552 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7537, <4 x half> %7533, <16 x float> %7551, i32 0, i32 0, i32 0), !dbg !136
  %7553 = extractelement <16 x float> %7552, i64 0, !dbg !136
  %7554 = extractelement <16 x float> %7552, i64 1, !dbg !136
  %7555 = extractelement <16 x float> %7552, i64 2, !dbg !136
  %7556 = extractelement <16 x float> %7552, i64 3, !dbg !136
  %7557 = extractelement <16 x float> %7552, i64 4, !dbg !136
  %7558 = extractelement <16 x float> %7552, i64 5, !dbg !136
  %7559 = extractelement <16 x float> %7552, i64 6, !dbg !136
  %7560 = extractelement <16 x float> %7552, i64 7, !dbg !136
  %7561 = extractelement <16 x float> %7552, i64 8, !dbg !136
  %7562 = extractelement <16 x float> %7552, i64 9, !dbg !136
  %7563 = extractelement <16 x float> %7552, i64 10, !dbg !136
  %7564 = extractelement <16 x float> %7552, i64 11, !dbg !136
  %7565 = extractelement <16 x float> %7552, i64 12, !dbg !136
  %7566 = extractelement <16 x float> %7552, i64 13, !dbg !136
  %7567 = extractelement <16 x float> %7552, i64 14, !dbg !136
  %7568 = extractelement <16 x float> %7552, i64 15, !dbg !136
  br label %7569, !dbg !136

7569:                                             ; preds = %7536, %7476
  %7570 = phi float [ %7553, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7571 = phi float [ %7554, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7572 = phi float [ %7555, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7573 = phi float [ %7556, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7574 = phi float [ %7557, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7575 = phi float [ %7558, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7576 = phi float [ %7559, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7577 = phi float [ %7560, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7578 = phi float [ %7561, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7579 = phi float [ %7562, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7580 = phi float [ %7563, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7581 = phi float [ %7564, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7582 = phi float [ %7565, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7583 = phi float [ %7566, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7584 = phi float [ %7567, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7585 = phi float [ %7568, %7536 ], [ 0.000000e+00, %7476 ], !dbg !130
  %7586 = fsub float %7570, %2769, !dbg !137
  %7587 = fsub float %7571, %2769, !dbg !137
  %7588 = fsub float %7572, %2769, !dbg !137
  %7589 = fsub float %7573, %2769, !dbg !137
  %7590 = fsub float %7574, %2769, !dbg !137
  %7591 = fsub float %7575, %2769, !dbg !137
  %7592 = fsub float %7576, %2769, !dbg !137
  %7593 = fsub float %7577, %2769, !dbg !137
  %7594 = fsub float %7578, %2769, !dbg !137
  %7595 = fsub float %7579, %2769, !dbg !137
  %7596 = fsub float %7580, %2769, !dbg !137
  %7597 = fsub float %7581, %2769, !dbg !137
  %7598 = fsub float %7582, %2769, !dbg !137
  %7599 = fsub float %7583, %2769, !dbg !137
  %7600 = fsub float %7584, %2769, !dbg !137
  %7601 = fsub float %7585, %2769, !dbg !137
  %7602 = tail call float @llvm.amdgcn.exp2.f32(float %7586), !dbg !138
  %7603 = tail call float @llvm.amdgcn.exp2.f32(float %7587), !dbg !138
  %7604 = tail call float @llvm.amdgcn.exp2.f32(float %7588), !dbg !138
  %7605 = tail call float @llvm.amdgcn.exp2.f32(float %7589), !dbg !138
  %7606 = tail call float @llvm.amdgcn.exp2.f32(float %7590), !dbg !138
  %7607 = tail call float @llvm.amdgcn.exp2.f32(float %7591), !dbg !138
  %7608 = tail call float @llvm.amdgcn.exp2.f32(float %7592), !dbg !138
  %7609 = tail call float @llvm.amdgcn.exp2.f32(float %7593), !dbg !138
  %7610 = tail call float @llvm.amdgcn.exp2.f32(float %7594), !dbg !138
  %7611 = tail call float @llvm.amdgcn.exp2.f32(float %7595), !dbg !138
  %7612 = tail call float @llvm.amdgcn.exp2.f32(float %7596), !dbg !138
  %7613 = tail call float @llvm.amdgcn.exp2.f32(float %7597), !dbg !138
  %7614 = tail call float @llvm.amdgcn.exp2.f32(float %7598), !dbg !138
  %7615 = tail call float @llvm.amdgcn.exp2.f32(float %7599), !dbg !138
  %7616 = tail call float @llvm.amdgcn.exp2.f32(float %7600), !dbg !138
  %7617 = tail call float @llvm.amdgcn.exp2.f32(float %7601), !dbg !138
  br i1 %5581, label %7618, label %7643, !dbg !139

7618:                                             ; preds = %7569
  %7619 = load <4 x half>, ptr addrspace(3) %5229, align 8, !dbg !102
  %7620 = load <4 x half>, ptr addrspace(3) %5227, align 8, !dbg !102
  %7621 = load <4 x half>, ptr addrspace(3) %5225, align 8, !dbg !102
  %7622 = load <4 x half>, ptr addrspace(3) %5223, align 8, !dbg !102
  %7623 = load <4 x half>, ptr addrspace(3) %5221, align 8, !dbg !102
  %7624 = load <4 x half>, ptr addrspace(3) %5219, align 8, !dbg !102
  %7625 = load <4 x half>, ptr addrspace(3) %5217, align 8, !dbg !102
  %7626 = load <4 x half>, ptr addrspace(3) %5215, align 8, !dbg !102
  %7627 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7511, <4 x half> %7626, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !139
  %7628 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7513, <4 x half> %7625, <16 x float> %7627, i32 0, i32 0, i32 0), !dbg !139
  %7629 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7515, <4 x half> %7624, <16 x float> %7628, i32 0, i32 0, i32 0), !dbg !139
  %7630 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7517, <4 x half> %7623, <16 x float> %7629, i32 0, i32 0, i32 0), !dbg !139
  %7631 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7519, <4 x half> %7622, <16 x float> %7630, i32 0, i32 0, i32 0), !dbg !139
  %7632 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7521, <4 x half> %7621, <16 x float> %7631, i32 0, i32 0, i32 0), !dbg !139
  %7633 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7523, <4 x half> %7620, <16 x float> %7632, i32 0, i32 0, i32 0), !dbg !139
  %7634 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7525, <4 x half> %7619, <16 x float> %7633, i32 0, i32 0, i32 0), !dbg !139
  %7635 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !130
  %7636 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !130
  %7637 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !130
  %7638 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !130
  %7639 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !130
  %7640 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !130
  %7641 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !130
  %7642 = shufflevector <16 x float> %7634, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !130
  br label %7643, !dbg !139

7643:                                             ; preds = %7618, %7569
  %7644 = phi <2 x float> [ %7635, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7645 = phi <2 x float> [ %7636, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7646 = phi <2 x float> [ %7637, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7647 = phi <2 x float> [ %7638, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7648 = phi <2 x float> [ %7639, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7649 = phi <2 x float> [ %7640, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7650 = phi <2 x float> [ %7641, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  %7651 = phi <2 x float> [ %7642, %7618 ], [ zeroinitializer, %7569 ], !dbg !130
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %7652 = shufflevector <2 x half> %6717, <2 x half> %6718, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7653 = shufflevector <2 x half> %6719, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7654 = shufflevector <8 x half> %7652, <8 x half> %7653, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !142
  %7655 = shufflevector <2 x half> %6720, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %7656 = shufflevector <8 x half> %7654, <8 x half> %7655, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !142
  store <8 x half> %7656, ptr addrspace(3) %6908, align 16, !dbg !142
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  br i1 %5581, label %7657, label %7839, !dbg !143

7657:                                             ; preds = %7643
  %7658 = load <1 x half>, ptr addrspace(3) %6945, align 2, !dbg !142
  %7659 = shufflevector <1 x half> %7658, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7660 = load <1 x half>, ptr addrspace(3) %6944, align 2, !dbg !142
  %7661 = shufflevector <1 x half> %7660, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7662 = load <1 x half>, ptr addrspace(3) %6943, align 2, !dbg !142
  %7663 = load <1 x half>, ptr addrspace(3) %6942, align 2, !dbg !142
  %7664 = load <1 x half>, ptr addrspace(3) %6941, align 2, !dbg !142
  %7665 = shufflevector <1 x half> %7664, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7666 = load <1 x half>, ptr addrspace(3) %6940, align 2, !dbg !142
  %7667 = shufflevector <1 x half> %7666, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7668 = load <1 x half>, ptr addrspace(3) %6939, align 2, !dbg !142
  %7669 = load <1 x half>, ptr addrspace(3) %6938, align 2, !dbg !142
  %7670 = load <1 x half>, ptr addrspace(3) %6937, align 2, !dbg !142
  %7671 = shufflevector <1 x half> %7670, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7672 = load <1 x half>, ptr addrspace(3) %6936, align 2, !dbg !142
  %7673 = shufflevector <1 x half> %7672, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7674 = load <1 x half>, ptr addrspace(3) %6935, align 2, !dbg !142
  %7675 = load <1 x half>, ptr addrspace(3) %6934, align 2, !dbg !142
  %7676 = load <1 x half>, ptr addrspace(3) %6933, align 2, !dbg !142
  %7677 = shufflevector <1 x half> %7676, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7678 = load <1 x half>, ptr addrspace(3) %6932, align 2, !dbg !142
  %7679 = shufflevector <1 x half> %7678, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7680 = load <1 x half>, ptr addrspace(3) %6931, align 2, !dbg !142
  %7681 = load <1 x half>, ptr addrspace(3) %6930, align 2, !dbg !142
  %7682 = load <1 x half>, ptr addrspace(3) %6929, align 2, !dbg !142
  %7683 = shufflevector <1 x half> %7682, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7684 = load <1 x half>, ptr addrspace(3) %6928, align 2, !dbg !142
  %7685 = shufflevector <1 x half> %7684, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7686 = load <1 x half>, ptr addrspace(3) %6927, align 2, !dbg !142
  %7687 = load <1 x half>, ptr addrspace(3) %6926, align 2, !dbg !142
  %7688 = load <1 x half>, ptr addrspace(3) %6925, align 2, !dbg !142
  %7689 = shufflevector <1 x half> %7688, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7690 = load <1 x half>, ptr addrspace(3) %6924, align 2, !dbg !142
  %7691 = shufflevector <1 x half> %7690, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7692 = load <1 x half>, ptr addrspace(3) %6923, align 2, !dbg !142
  %7693 = load <1 x half>, ptr addrspace(3) %6922, align 2, !dbg !142
  %7694 = load <1 x half>, ptr addrspace(3) %6921, align 2, !dbg !142
  %7695 = shufflevector <1 x half> %7694, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7696 = load <1 x half>, ptr addrspace(3) %6920, align 2, !dbg !142
  %7697 = shufflevector <1 x half> %7696, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7698 = load <1 x half>, ptr addrspace(3) %6919, align 2, !dbg !142
  %7699 = load <1 x half>, ptr addrspace(3) %6918, align 2, !dbg !142
  %7700 = load <1 x half>, ptr addrspace(3) %6917, align 2, !dbg !142
  %7701 = shufflevector <1 x half> %7700, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7702 = load <1 x half>, ptr addrspace(3) %6916, align 2, !dbg !142
  %7703 = shufflevector <1 x half> %7702, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %7704 = load <1 x half>, ptr addrspace(3) %6915, align 2, !dbg !142
  %7705 = load <1 x half>, ptr addrspace(3) %6914, align 2, !dbg !142
  %7706 = shufflevector <1 x float> %unmaskedload336, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !135
  %7707 = fsub <2 x float> %7645, %7706, !dbg !135
  %7708 = insertelement <2 x float> poison, float %7616, i64 0, !dbg !140
  %7709 = insertelement <2 x float> %7708, float %7617, i64 1, !dbg !140
  %7710 = fmul <2 x float> %7709, %7707, !dbg !140
  %7711 = fptrunc <2 x float> %7710 to <2 x half>, !dbg !141
  %7712 = fsub <2 x float> %7644, %7706, !dbg !135
  %7713 = insertelement <2 x float> poison, float %7614, i64 0, !dbg !140
  %7714 = insertelement <2 x float> %7713, float %7615, i64 1, !dbg !140
  %7715 = fmul <2 x float> %7714, %7712, !dbg !140
  %7716 = fptrunc <2 x float> %7715 to <2 x half>, !dbg !141
  %7717 = fsub <2 x float> %7647, %7706, !dbg !135
  %7718 = insertelement <2 x float> poison, float %7612, i64 0, !dbg !140
  %7719 = insertelement <2 x float> %7718, float %7613, i64 1, !dbg !140
  %7720 = fmul <2 x float> %7719, %7717, !dbg !140
  %7721 = fptrunc <2 x float> %7720 to <2 x half>, !dbg !141
  %7722 = fsub <2 x float> %7646, %7706, !dbg !135
  %7723 = insertelement <2 x float> poison, float %7610, i64 0, !dbg !140
  %7724 = insertelement <2 x float> %7723, float %7611, i64 1, !dbg !140
  %7725 = fmul <2 x float> %7724, %7722, !dbg !140
  %7726 = fptrunc <2 x float> %7725 to <2 x half>, !dbg !141
  %7727 = fsub <2 x float> %7649, %7706, !dbg !135
  %7728 = insertelement <2 x float> poison, float %7608, i64 0, !dbg !140
  %7729 = insertelement <2 x float> %7728, float %7609, i64 1, !dbg !140
  %7730 = fmul <2 x float> %7729, %7727, !dbg !140
  %7731 = fptrunc <2 x float> %7730 to <2 x half>, !dbg !141
  %7732 = fsub <2 x float> %7648, %7706, !dbg !135
  %7733 = insertelement <2 x float> poison, float %7606, i64 0, !dbg !140
  %7734 = insertelement <2 x float> %7733, float %7607, i64 1, !dbg !140
  %7735 = fmul <2 x float> %7734, %7732, !dbg !140
  %7736 = fptrunc <2 x float> %7735 to <2 x half>, !dbg !141
  %7737 = fsub <2 x float> %7651, %7706, !dbg !135
  %7738 = insertelement <2 x float> poison, float %7604, i64 0, !dbg !140
  %7739 = insertelement <2 x float> %7738, float %7605, i64 1, !dbg !140
  %7740 = fmul <2 x float> %7739, %7737, !dbg !140
  %7741 = fptrunc <2 x float> %7740 to <2 x half>, !dbg !141
  %7742 = fsub <2 x float> %7650, %7706, !dbg !135
  %7743 = insertelement <2 x float> poison, float %7602, i64 0, !dbg !140
  %7744 = insertelement <2 x float> %7743, float %7603, i64 1, !dbg !140
  %7745 = fmul <2 x float> %7744, %7742, !dbg !140
  %7746 = fptrunc <2 x float> %7745 to <2 x half>, !dbg !141
  %7747 = shufflevector <2 x half> %7746, <2 x half> %7741, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7748 = shufflevector <2 x half> %7736, <2 x half> %7731, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7749 = shufflevector <2 x half> %7726, <2 x half> %7721, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7750 = shufflevector <2 x half> %7716, <2 x half> %7711, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %7751 = shufflevector <1 x half> %7705, <1 x half> %7704, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7752 = shufflevector <4 x half> %7751, <4 x half> %7703, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7753 = shufflevector <4 x half> %7752, <4 x half> %7701, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7754 = shufflevector <1 x half> %7699, <1 x half> %7698, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7755 = shufflevector <4 x half> %7754, <4 x half> %7697, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7756 = shufflevector <4 x half> %7755, <4 x half> %7695, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7757 = shufflevector <1 x half> %7693, <1 x half> %7692, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7758 = shufflevector <4 x half> %7757, <4 x half> %7691, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7759 = shufflevector <4 x half> %7758, <4 x half> %7689, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7760 = shufflevector <1 x half> %7687, <1 x half> %7686, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7761 = shufflevector <4 x half> %7760, <4 x half> %7685, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7762 = shufflevector <4 x half> %7761, <4 x half> %7683, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7763 = shufflevector <1 x half> %7681, <1 x half> %7680, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7764 = shufflevector <4 x half> %7763, <4 x half> %7679, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7765 = shufflevector <4 x half> %7764, <4 x half> %7677, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7766 = shufflevector <1 x half> %7675, <1 x half> %7674, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7767 = shufflevector <4 x half> %7766, <4 x half> %7673, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7768 = shufflevector <4 x half> %7767, <4 x half> %7671, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7769 = shufflevector <1 x half> %7669, <1 x half> %7668, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7770 = shufflevector <4 x half> %7769, <4 x half> %7667, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7771 = shufflevector <4 x half> %7770, <4 x half> %7665, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7772 = shufflevector <1 x half> %7663, <1 x half> %7662, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %7773 = shufflevector <4 x half> %7772, <4 x half> %7661, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %7774 = shufflevector <4 x half> %7773, <4 x half> %7659, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %7775 = insertelement <16 x float> poison, float %7492, i64 0, !dbg !143
  %7776 = shufflevector <2 x float> %7493, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7777 = shufflevector <16 x float> %7775, <16 x float> %7776, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7778 = insertelement <16 x float> %7777, float %7491, i64 3, !dbg !143
  %7779 = insertelement <16 x float> %7778, float %7490, i64 4, !dbg !143
  %7780 = shufflevector <2 x float> %7494, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7781 = shufflevector <16 x float> %7779, <16 x float> %7780, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7782 = insertelement <16 x float> %7781, float %7489, i64 7, !dbg !143
  %7783 = insertelement <16 x float> %7782, float %7488, i64 8, !dbg !143
  %7784 = shufflevector <2 x float> %7495, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7785 = shufflevector <16 x float> %7783, <16 x float> %7784, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7786 = insertelement <16 x float> %7785, float %7487, i64 11, !dbg !143
  %7787 = insertelement <16 x float> %7786, float %7486, i64 12, !dbg !143
  %7788 = shufflevector <2 x float> %7496, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7789 = shufflevector <16 x float> %7787, <16 x float> %7788, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7790 = insertelement <16 x float> %7789, float %7485, i64 15, !dbg !143
  %7791 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7753, <4 x half> %7747, <16 x float> %7790, i32 0, i32 0, i32 0), !dbg !143
  %7792 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7756, <4 x half> %7748, <16 x float> %7791, i32 0, i32 0, i32 0), !dbg !143
  %7793 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7759, <4 x half> %7749, <16 x float> %7792, i32 0, i32 0, i32 0), !dbg !143
  %7794 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7762, <4 x half> %7750, <16 x float> %7793, i32 0, i32 0, i32 0), !dbg !143
  %7795 = extractelement <16 x float> %7794, i64 0, !dbg !143
  %7796 = extractelement <16 x float> %7794, i64 3, !dbg !143
  %7797 = extractelement <16 x float> %7794, i64 4, !dbg !143
  %7798 = extractelement <16 x float> %7794, i64 7, !dbg !143
  %7799 = extractelement <16 x float> %7794, i64 8, !dbg !143
  %7800 = extractelement <16 x float> %7794, i64 11, !dbg !143
  %7801 = extractelement <16 x float> %7794, i64 12, !dbg !143
  %7802 = extractelement <16 x float> %7794, i64 15, !dbg !143
  %7803 = insertelement <16 x float> poison, float %7484, i64 0, !dbg !143
  %7804 = shufflevector <2 x float> %7497, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7805 = shufflevector <16 x float> %7803, <16 x float> %7804, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7806 = insertelement <16 x float> %7805, float %7483, i64 3, !dbg !143
  %7807 = insertelement <16 x float> %7806, float %7482, i64 4, !dbg !143
  %7808 = shufflevector <2 x float> %7498, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7809 = shufflevector <16 x float> %7807, <16 x float> %7808, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7810 = insertelement <16 x float> %7809, float %7481, i64 7, !dbg !143
  %7811 = insertelement <16 x float> %7810, float %7480, i64 8, !dbg !143
  %7812 = shufflevector <2 x float> %7499, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7813 = shufflevector <16 x float> %7811, <16 x float> %7812, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7814 = insertelement <16 x float> %7813, float %7479, i64 11, !dbg !143
  %7815 = insertelement <16 x float> %7814, float %7478, i64 12, !dbg !143
  %7816 = shufflevector <2 x float> %7500, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %7817 = shufflevector <16 x float> %7815, <16 x float> %7816, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %7818 = insertelement <16 x float> %7817, float %7477, i64 15, !dbg !143
  %7819 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7765, <4 x half> %7747, <16 x float> %7818, i32 0, i32 0, i32 0), !dbg !143
  %7820 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7768, <4 x half> %7748, <16 x float> %7819, i32 0, i32 0, i32 0), !dbg !143
  %7821 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7771, <4 x half> %7749, <16 x float> %7820, i32 0, i32 0, i32 0), !dbg !143
  %7822 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7774, <4 x half> %7750, <16 x float> %7821, i32 0, i32 0, i32 0), !dbg !143
  %7823 = extractelement <16 x float> %7822, i64 0, !dbg !143
  %7824 = extractelement <16 x float> %7822, i64 3, !dbg !143
  %7825 = extractelement <16 x float> %7822, i64 4, !dbg !143
  %7826 = extractelement <16 x float> %7822, i64 7, !dbg !143
  %7827 = extractelement <16 x float> %7822, i64 8, !dbg !143
  %7828 = extractelement <16 x float> %7822, i64 11, !dbg !143
  %7829 = extractelement <16 x float> %7822, i64 12, !dbg !143
  %7830 = extractelement <16 x float> %7822, i64 15, !dbg !143
  %7831 = shufflevector <16 x float> %7794, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7832 = shufflevector <16 x float> %7794, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7833 = shufflevector <16 x float> %7794, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7834 = shufflevector <16 x float> %7794, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %7835 = shufflevector <16 x float> %7822, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %7836 = shufflevector <16 x float> %7822, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %7837 = shufflevector <16 x float> %7822, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %7838 = shufflevector <16 x float> %7822, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %7839, !dbg !143

7839:                                             ; preds = %7657, %7643
  %7840 = phi float [ %7830, %7657 ], [ %7477, %7643 ]
  %7841 = phi float [ %7829, %7657 ], [ %7478, %7643 ]
  %7842 = phi float [ %7828, %7657 ], [ %7479, %7643 ]
  %7843 = phi float [ %7827, %7657 ], [ %7480, %7643 ]
  %7844 = phi float [ %7826, %7657 ], [ %7481, %7643 ]
  %7845 = phi float [ %7825, %7657 ], [ %7482, %7643 ]
  %7846 = phi float [ %7824, %7657 ], [ %7483, %7643 ]
  %7847 = phi float [ %7823, %7657 ], [ %7484, %7643 ]
  %7848 = phi float [ %7802, %7657 ], [ %7485, %7643 ]
  %7849 = phi float [ %7801, %7657 ], [ %7486, %7643 ]
  %7850 = phi float [ %7800, %7657 ], [ %7487, %7643 ]
  %7851 = phi float [ %7799, %7657 ], [ %7488, %7643 ]
  %7852 = phi float [ %7798, %7657 ], [ %7489, %7643 ]
  %7853 = phi float [ %7797, %7657 ], [ %7490, %7643 ]
  %7854 = phi float [ %7796, %7657 ], [ %7491, %7643 ]
  %7855 = phi float [ %7795, %7657 ], [ %7492, %7643 ]
  %7856 = phi <2 x float> [ %7831, %7657 ], [ %7493, %7643 ]
  %7857 = phi <2 x float> [ %7832, %7657 ], [ %7494, %7643 ]
  %7858 = phi <2 x float> [ %7833, %7657 ], [ %7495, %7643 ]
  %7859 = phi <2 x float> [ %7834, %7657 ], [ %7496, %7643 ]
  %7860 = phi <2 x float> [ %7835, %7657 ], [ %7497, %7643 ]
  %7861 = phi <2 x float> [ %7836, %7657 ], [ %7498, %7643 ]
  %7862 = phi <2 x float> [ %7837, %7657 ], [ %7499, %7643 ]
  %7863 = phi <2 x float> [ %7838, %7657 ], [ %7500, %7643 ]
  %7864 = add i32 %7509, 1, !dbg !131
  %7865 = icmp slt i32 %7864, 4, !dbg !131
  %7866 = shl i32 %7864, 11, !dbg !134
  %7867 = select i1 %7865, i32 %7866, i32 0, !dbg !131
  %7868 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %7867, !dbg !134
  %7869 = getelementptr inbounds half, ptr addrspace(3) %7868, i32 %184, !dbg !134
  %7870 = shufflevector <2 x half> %6713, <2 x half> %6714, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7870, ptr addrspace(3) %7869, align 8, !dbg !134
  %7871 = getelementptr inbounds half, ptr addrspace(3) %7868, i32 %191, !dbg !134
  %7872 = shufflevector <2 x half> %6715, <2 x half> %6716, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !134
  store <4 x half> %7872, ptr addrspace(3) %7871, align 8, !dbg !134
  fence syncscope("workgroup") release, !dbg !134
  tail call void @llvm.amdgcn.s.barrier(), !dbg !134
  fence syncscope("workgroup") acquire, !dbg !134
  %7873 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2337, !dbg !134
  %7874 = load <4 x half>, ptr addrspace(3) %7873, align 8, !dbg !134
  %7875 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2339, !dbg !134
  %7876 = load <4 x half>, ptr addrspace(3) %7875, align 8, !dbg !134
  %7877 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2341, !dbg !134
  %7878 = load <4 x half>, ptr addrspace(3) %7877, align 8, !dbg !134
  %7879 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2343, !dbg !134
  %7880 = load <4 x half>, ptr addrspace(3) %7879, align 8, !dbg !134
  %7881 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2345, !dbg !134
  %7882 = load <4 x half>, ptr addrspace(3) %7881, align 8, !dbg !134
  %7883 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2347, !dbg !134
  %7884 = load <4 x half>, ptr addrspace(3) %7883, align 8, !dbg !134
  %7885 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2349, !dbg !134
  %7886 = load <4 x half>, ptr addrspace(3) %7885, align 8, !dbg !134
  %7887 = getelementptr half, ptr addrspace(3) %7868, i32 %.pre-phi2351, !dbg !134
  %7888 = load <4 x half>, ptr addrspace(3) %7887, align 8, !dbg !134
  %7889 = load <4 x half>, ptr addrspace(3) %249, align 8, !dbg !101
  %7890 = load <4 x half>, ptr addrspace(3) %251, align 8, !dbg !101
  %7891 = load <4 x half>, ptr addrspace(3) %253, align 8, !dbg !101
  %7892 = load <4 x half>, ptr addrspace(3) %255, align 8, !dbg !101
  %7893 = load <4 x half>, ptr addrspace(3) %257, align 8, !dbg !101
  %7894 = load <4 x half>, ptr addrspace(3) %259, align 8, !dbg !101
  %7895 = load <4 x half>, ptr addrspace(3) %261, align 8, !dbg !101
  %7896 = load <4 x half>, ptr addrspace(3) %263, align 8, !dbg !101
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  %7897 = shufflevector <2 x half> %6709, <2 x half> %6710, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7897, ptr addrspace(3) %185, align 8, !dbg !132
  %7898 = shufflevector <2 x half> %6711, <2 x half> %6712, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !132
  store <4 x half> %7898, ptr addrspace(3) %192, align 8, !dbg !132
  fence syncscope("workgroup") release, !dbg !132
  tail call void @llvm.amdgcn.s.barrier(), !dbg !132
  fence syncscope("workgroup") acquire, !dbg !132
  br i1 %5586, label %7899, label %7932, !dbg !136

7899:                                             ; preds = %7839
  %7900 = load <4 x half>, ptr addrspace(3) %2796, align 8, !dbg !132
  %7901 = load <4 x half>, ptr addrspace(3) %2795, align 8, !dbg !132
  %7902 = load <4 x half>, ptr addrspace(3) %2794, align 8, !dbg !132
  %7903 = load <4 x half>, ptr addrspace(3) %2793, align 8, !dbg !132
  %7904 = load <4 x half>, ptr addrspace(3) %2792, align 8, !dbg !132
  %7905 = load <4 x half>, ptr addrspace(3) %2791, align 8, !dbg !132
  %7906 = load <4 x half>, ptr addrspace(3) %2790, align 8, !dbg !132
  %7907 = load <4 x half>, ptr addrspace(3) %2789, align 8, !dbg !132
  %7908 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7907, <4 x half> %7889, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !136
  %7909 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7906, <4 x half> %7890, <16 x float> %7908, i32 0, i32 0, i32 0), !dbg !136
  %7910 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7905, <4 x half> %7891, <16 x float> %7909, i32 0, i32 0, i32 0), !dbg !136
  %7911 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7904, <4 x half> %7892, <16 x float> %7910, i32 0, i32 0, i32 0), !dbg !136
  %7912 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7903, <4 x half> %7893, <16 x float> %7911, i32 0, i32 0, i32 0), !dbg !136
  %7913 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7902, <4 x half> %7894, <16 x float> %7912, i32 0, i32 0, i32 0), !dbg !136
  %7914 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7901, <4 x half> %7895, <16 x float> %7913, i32 0, i32 0, i32 0), !dbg !136
  %7915 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7900, <4 x half> %7896, <16 x float> %7914, i32 0, i32 0, i32 0), !dbg !136
  %7916 = extractelement <16 x float> %7915, i64 0, !dbg !136
  %7917 = extractelement <16 x float> %7915, i64 1, !dbg !136
  %7918 = extractelement <16 x float> %7915, i64 2, !dbg !136
  %7919 = extractelement <16 x float> %7915, i64 3, !dbg !136
  %7920 = extractelement <16 x float> %7915, i64 4, !dbg !136
  %7921 = extractelement <16 x float> %7915, i64 5, !dbg !136
  %7922 = extractelement <16 x float> %7915, i64 6, !dbg !136
  %7923 = extractelement <16 x float> %7915, i64 7, !dbg !136
  %7924 = extractelement <16 x float> %7915, i64 8, !dbg !136
  %7925 = extractelement <16 x float> %7915, i64 9, !dbg !136
  %7926 = extractelement <16 x float> %7915, i64 10, !dbg !136
  %7927 = extractelement <16 x float> %7915, i64 11, !dbg !136
  %7928 = extractelement <16 x float> %7915, i64 12, !dbg !136
  %7929 = extractelement <16 x float> %7915, i64 13, !dbg !136
  %7930 = extractelement <16 x float> %7915, i64 14, !dbg !136
  %7931 = extractelement <16 x float> %7915, i64 15, !dbg !136
  br label %7932, !dbg !136

7932:                                             ; preds = %7899, %7839
  %7933 = phi float [ %7916, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7934 = phi float [ %7917, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7935 = phi float [ %7918, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7936 = phi float [ %7919, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7937 = phi float [ %7920, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7938 = phi float [ %7921, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7939 = phi float [ %7922, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7940 = phi float [ %7923, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7941 = phi float [ %7924, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7942 = phi float [ %7925, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7943 = phi float [ %7926, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7944 = phi float [ %7927, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7945 = phi float [ %7928, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7946 = phi float [ %7929, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7947 = phi float [ %7930, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7948 = phi float [ %7931, %7899 ], [ 0.000000e+00, %7839 ], !dbg !130
  %7949 = fsub float %7933, %2769, !dbg !137
  %7950 = fsub float %7934, %2769, !dbg !137
  %7951 = fsub float %7935, %2769, !dbg !137
  %7952 = fsub float %7936, %2769, !dbg !137
  %7953 = fsub float %7937, %2769, !dbg !137
  %7954 = fsub float %7938, %2769, !dbg !137
  %7955 = fsub float %7939, %2769, !dbg !137
  %7956 = fsub float %7940, %2769, !dbg !137
  %7957 = fsub float %7941, %2769, !dbg !137
  %7958 = fsub float %7942, %2769, !dbg !137
  %7959 = fsub float %7943, %2769, !dbg !137
  %7960 = fsub float %7944, %2769, !dbg !137
  %7961 = fsub float %7945, %2769, !dbg !137
  %7962 = fsub float %7946, %2769, !dbg !137
  %7963 = fsub float %7947, %2769, !dbg !137
  %7964 = fsub float %7948, %2769, !dbg !137
  %7965 = tail call float @llvm.amdgcn.exp2.f32(float %7949), !dbg !138
  %7966 = tail call float @llvm.amdgcn.exp2.f32(float %7950), !dbg !138
  %7967 = tail call float @llvm.amdgcn.exp2.f32(float %7951), !dbg !138
  %7968 = tail call float @llvm.amdgcn.exp2.f32(float %7952), !dbg !138
  %7969 = tail call float @llvm.amdgcn.exp2.f32(float %7953), !dbg !138
  %7970 = tail call float @llvm.amdgcn.exp2.f32(float %7954), !dbg !138
  %7971 = tail call float @llvm.amdgcn.exp2.f32(float %7955), !dbg !138
  %7972 = tail call float @llvm.amdgcn.exp2.f32(float %7956), !dbg !138
  %7973 = tail call float @llvm.amdgcn.exp2.f32(float %7957), !dbg !138
  %7974 = tail call float @llvm.amdgcn.exp2.f32(float %7958), !dbg !138
  %7975 = tail call float @llvm.amdgcn.exp2.f32(float %7959), !dbg !138
  %7976 = tail call float @llvm.amdgcn.exp2.f32(float %7960), !dbg !138
  %7977 = tail call float @llvm.amdgcn.exp2.f32(float %7961), !dbg !138
  %7978 = tail call float @llvm.amdgcn.exp2.f32(float %7962), !dbg !138
  %7979 = tail call float @llvm.amdgcn.exp2.f32(float %7963), !dbg !138
  %7980 = tail call float @llvm.amdgcn.exp2.f32(float %7964), !dbg !138
  br i1 %5586, label %7981, label %8006, !dbg !139

7981:                                             ; preds = %7932
  %7982 = load <4 x half>, ptr addrspace(3) %5229, align 8, !dbg !102
  %7983 = load <4 x half>, ptr addrspace(3) %5227, align 8, !dbg !102
  %7984 = load <4 x half>, ptr addrspace(3) %5225, align 8, !dbg !102
  %7985 = load <4 x half>, ptr addrspace(3) %5223, align 8, !dbg !102
  %7986 = load <4 x half>, ptr addrspace(3) %5221, align 8, !dbg !102
  %7987 = load <4 x half>, ptr addrspace(3) %5219, align 8, !dbg !102
  %7988 = load <4 x half>, ptr addrspace(3) %5217, align 8, !dbg !102
  %7989 = load <4 x half>, ptr addrspace(3) %5215, align 8, !dbg !102
  %7990 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7874, <4 x half> %7989, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !139
  %7991 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7876, <4 x half> %7988, <16 x float> %7990, i32 0, i32 0, i32 0), !dbg !139
  %7992 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7878, <4 x half> %7987, <16 x float> %7991, i32 0, i32 0, i32 0), !dbg !139
  %7993 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7880, <4 x half> %7986, <16 x float> %7992, i32 0, i32 0, i32 0), !dbg !139
  %7994 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7882, <4 x half> %7985, <16 x float> %7993, i32 0, i32 0, i32 0), !dbg !139
  %7995 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7884, <4 x half> %7984, <16 x float> %7994, i32 0, i32 0, i32 0), !dbg !139
  %7996 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7886, <4 x half> %7983, <16 x float> %7995, i32 0, i32 0, i32 0), !dbg !139
  %7997 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %7888, <4 x half> %7982, <16 x float> %7996, i32 0, i32 0, i32 0), !dbg !139
  %7998 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !130
  %7999 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !130
  %8000 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !130
  %8001 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !130
  %8002 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !130
  %8003 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !130
  %8004 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !130
  %8005 = shufflevector <16 x float> %7997, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !130
  br label %8006, !dbg !139

8006:                                             ; preds = %7981, %7932
  %8007 = phi <2 x float> [ %7998, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8008 = phi <2 x float> [ %7999, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8009 = phi <2 x float> [ %8000, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8010 = phi <2 x float> [ %8001, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8011 = phi <2 x float> [ %8002, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8012 = phi <2 x float> [ %8003, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8013 = phi <2 x float> [ %8004, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  %8014 = phi <2 x float> [ %8005, %7981 ], [ zeroinitializer, %7932 ], !dbg !130
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  %8015 = shufflevector <2 x half> %6709, <2 x half> %6710, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %8016 = shufflevector <2 x half> %6711, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %8017 = shufflevector <8 x half> %8015, <8 x half> %8016, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !142
  %8018 = shufflevector <2 x half> %6712, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !142
  %8019 = shufflevector <8 x half> %8017, <8 x half> %8018, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !142
  store <8 x half> %8019, ptr addrspace(3) %2880, align 16, !dbg !142
  fence syncscope("workgroup") release, !dbg !142
  tail call void @llvm.amdgcn.s.barrier(), !dbg !142
  fence syncscope("workgroup") acquire, !dbg !142
  br i1 %5586, label %8020, label %8202, !dbg !143

8020:                                             ; preds = %8006
  %8021 = load <1 x half>, ptr addrspace(3) %2917, align 2, !dbg !142
  %8022 = shufflevector <1 x half> %8021, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8023 = load <1 x half>, ptr addrspace(3) %2916, align 2, !dbg !142
  %8024 = shufflevector <1 x half> %8023, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8025 = load <1 x half>, ptr addrspace(3) %2915, align 2, !dbg !142
  %8026 = load <1 x half>, ptr addrspace(3) %2914, align 2, !dbg !142
  %8027 = load <1 x half>, ptr addrspace(3) %2913, align 2, !dbg !142
  %8028 = shufflevector <1 x half> %8027, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8029 = load <1 x half>, ptr addrspace(3) %2912, align 2, !dbg !142
  %8030 = shufflevector <1 x half> %8029, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8031 = load <1 x half>, ptr addrspace(3) %2911, align 2, !dbg !142
  %8032 = load <1 x half>, ptr addrspace(3) %2910, align 2, !dbg !142
  %8033 = load <1 x half>, ptr addrspace(3) %391, align 2, !dbg !142
  %8034 = shufflevector <1 x half> %8033, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8035 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !142
  %8036 = shufflevector <1 x half> %8035, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8037 = load <1 x half>, ptr addrspace(3) %389, align 2, !dbg !142
  %8038 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !142
  %8039 = load <1 x half>, ptr addrspace(3) %387, align 2, !dbg !142
  %8040 = shufflevector <1 x half> %8039, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8041 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !142
  %8042 = shufflevector <1 x half> %8041, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8043 = load <1 x half>, ptr addrspace(3) %385, align 2, !dbg !142
  %8044 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !142
  %8045 = load <1 x half>, ptr addrspace(3) %2909, align 2, !dbg !142
  %8046 = shufflevector <1 x half> %8045, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8047 = load <1 x half>, ptr addrspace(3) %2908, align 2, !dbg !142
  %8048 = shufflevector <1 x half> %8047, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8049 = load <1 x half>, ptr addrspace(3) %2907, align 2, !dbg !142
  %8050 = load <1 x half>, ptr addrspace(3) %2906, align 2, !dbg !142
  %8051 = load <1 x half>, ptr addrspace(3) %2905, align 2, !dbg !142
  %8052 = shufflevector <1 x half> %8051, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8053 = load <1 x half>, ptr addrspace(3) %2904, align 2, !dbg !142
  %8054 = shufflevector <1 x half> %8053, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8055 = load <1 x half>, ptr addrspace(3) %2903, align 2, !dbg !142
  %8056 = load <1 x half>, ptr addrspace(3) %2902, align 2, !dbg !142
  %8057 = load <1 x half>, ptr addrspace(3) %383, align 2, !dbg !142
  %8058 = shufflevector <1 x half> %8057, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8059 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !142
  %8060 = shufflevector <1 x half> %8059, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8061 = load <1 x half>, ptr addrspace(3) %381, align 2, !dbg !142
  %8062 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !142
  %8063 = load <1 x half>, ptr addrspace(3) %379, align 2, !dbg !142
  %8064 = shufflevector <1 x half> %8063, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8065 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !142
  %8066 = shufflevector <1 x half> %8065, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %8067 = load <1 x half>, ptr addrspace(3) %377, align 2, !dbg !142
  %8068 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !142
  %8069 = shufflevector <1 x float> %unmaskedload336, <1 x float> poison, <2 x i32> zeroinitializer, !dbg !135
  %8070 = fsub <2 x float> %8008, %8069, !dbg !135
  %8071 = insertelement <2 x float> poison, float %7979, i64 0, !dbg !140
  %8072 = insertelement <2 x float> %8071, float %7980, i64 1, !dbg !140
  %8073 = fmul <2 x float> %8072, %8070, !dbg !140
  %8074 = fptrunc <2 x float> %8073 to <2 x half>, !dbg !141
  %8075 = fsub <2 x float> %8007, %8069, !dbg !135
  %8076 = insertelement <2 x float> poison, float %7977, i64 0, !dbg !140
  %8077 = insertelement <2 x float> %8076, float %7978, i64 1, !dbg !140
  %8078 = fmul <2 x float> %8077, %8075, !dbg !140
  %8079 = fptrunc <2 x float> %8078 to <2 x half>, !dbg !141
  %8080 = fsub <2 x float> %8010, %8069, !dbg !135
  %8081 = insertelement <2 x float> poison, float %7975, i64 0, !dbg !140
  %8082 = insertelement <2 x float> %8081, float %7976, i64 1, !dbg !140
  %8083 = fmul <2 x float> %8082, %8080, !dbg !140
  %8084 = fptrunc <2 x float> %8083 to <2 x half>, !dbg !141
  %8085 = fsub <2 x float> %8009, %8069, !dbg !135
  %8086 = insertelement <2 x float> poison, float %7973, i64 0, !dbg !140
  %8087 = insertelement <2 x float> %8086, float %7974, i64 1, !dbg !140
  %8088 = fmul <2 x float> %8087, %8085, !dbg !140
  %8089 = fptrunc <2 x float> %8088 to <2 x half>, !dbg !141
  %8090 = fsub <2 x float> %8012, %8069, !dbg !135
  %8091 = insertelement <2 x float> poison, float %7971, i64 0, !dbg !140
  %8092 = insertelement <2 x float> %8091, float %7972, i64 1, !dbg !140
  %8093 = fmul <2 x float> %8092, %8090, !dbg !140
  %8094 = fptrunc <2 x float> %8093 to <2 x half>, !dbg !141
  %8095 = fsub <2 x float> %8011, %8069, !dbg !135
  %8096 = insertelement <2 x float> poison, float %7969, i64 0, !dbg !140
  %8097 = insertelement <2 x float> %8096, float %7970, i64 1, !dbg !140
  %8098 = fmul <2 x float> %8097, %8095, !dbg !140
  %8099 = fptrunc <2 x float> %8098 to <2 x half>, !dbg !141
  %8100 = fsub <2 x float> %8014, %8069, !dbg !135
  %8101 = insertelement <2 x float> poison, float %7967, i64 0, !dbg !140
  %8102 = insertelement <2 x float> %8101, float %7968, i64 1, !dbg !140
  %8103 = fmul <2 x float> %8102, %8100, !dbg !140
  %8104 = fptrunc <2 x float> %8103 to <2 x half>, !dbg !141
  %8105 = fsub <2 x float> %8013, %8069, !dbg !135
  %8106 = insertelement <2 x float> poison, float %7965, i64 0, !dbg !140
  %8107 = insertelement <2 x float> %8106, float %7966, i64 1, !dbg !140
  %8108 = fmul <2 x float> %8107, %8105, !dbg !140
  %8109 = fptrunc <2 x float> %8108 to <2 x half>, !dbg !141
  %8110 = shufflevector <2 x half> %8109, <2 x half> %8104, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %8111 = shufflevector <2 x half> %8099, <2 x half> %8094, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %8112 = shufflevector <2 x half> %8089, <2 x half> %8084, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %8113 = shufflevector <2 x half> %8079, <2 x half> %8074, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !143
  %8114 = shufflevector <1 x half> %8068, <1 x half> %8067, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8115 = shufflevector <4 x half> %8114, <4 x half> %8066, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8116 = shufflevector <4 x half> %8115, <4 x half> %8064, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8117 = shufflevector <1 x half> %8062, <1 x half> %8061, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8118 = shufflevector <4 x half> %8117, <4 x half> %8060, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8119 = shufflevector <4 x half> %8118, <4 x half> %8058, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8120 = shufflevector <1 x half> %8056, <1 x half> %8055, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8121 = shufflevector <4 x half> %8120, <4 x half> %8054, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8122 = shufflevector <4 x half> %8121, <4 x half> %8052, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8123 = shufflevector <1 x half> %8050, <1 x half> %8049, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8124 = shufflevector <4 x half> %8123, <4 x half> %8048, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8125 = shufflevector <4 x half> %8124, <4 x half> %8046, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8126 = shufflevector <1 x half> %8044, <1 x half> %8043, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8127 = shufflevector <4 x half> %8126, <4 x half> %8042, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8128 = shufflevector <4 x half> %8127, <4 x half> %8040, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8129 = shufflevector <1 x half> %8038, <1 x half> %8037, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8130 = shufflevector <4 x half> %8129, <4 x half> %8036, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8131 = shufflevector <4 x half> %8130, <4 x half> %8034, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8132 = shufflevector <1 x half> %8032, <1 x half> %8031, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8133 = shufflevector <4 x half> %8132, <4 x half> %8030, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8134 = shufflevector <4 x half> %8133, <4 x half> %8028, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8135 = shufflevector <1 x half> %8026, <1 x half> %8025, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !143
  %8136 = shufflevector <4 x half> %8135, <4 x half> %8024, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !143
  %8137 = shufflevector <4 x half> %8136, <4 x half> %8022, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !143
  %8138 = insertelement <16 x float> poison, float %7855, i64 0, !dbg !143
  %8139 = shufflevector <2 x float> %7856, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8140 = shufflevector <16 x float> %8138, <16 x float> %8139, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8141 = insertelement <16 x float> %8140, float %7854, i64 3, !dbg !143
  %8142 = insertelement <16 x float> %8141, float %7853, i64 4, !dbg !143
  %8143 = shufflevector <2 x float> %7857, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8144 = shufflevector <16 x float> %8142, <16 x float> %8143, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8145 = insertelement <16 x float> %8144, float %7852, i64 7, !dbg !143
  %8146 = insertelement <16 x float> %8145, float %7851, i64 8, !dbg !143
  %8147 = shufflevector <2 x float> %7858, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8148 = shufflevector <16 x float> %8146, <16 x float> %8147, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8149 = insertelement <16 x float> %8148, float %7850, i64 11, !dbg !143
  %8150 = insertelement <16 x float> %8149, float %7849, i64 12, !dbg !143
  %8151 = shufflevector <2 x float> %7859, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8152 = shufflevector <16 x float> %8150, <16 x float> %8151, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %8153 = insertelement <16 x float> %8152, float %7848, i64 15, !dbg !143
  %8154 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8116, <4 x half> %8110, <16 x float> %8153, i32 0, i32 0, i32 0), !dbg !143
  %8155 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8119, <4 x half> %8111, <16 x float> %8154, i32 0, i32 0, i32 0), !dbg !143
  %8156 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8122, <4 x half> %8112, <16 x float> %8155, i32 0, i32 0, i32 0), !dbg !143
  %8157 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8125, <4 x half> %8113, <16 x float> %8156, i32 0, i32 0, i32 0), !dbg !143
  %8158 = extractelement <16 x float> %8157, i64 0, !dbg !143
  %8159 = extractelement <16 x float> %8157, i64 3, !dbg !143
  %8160 = extractelement <16 x float> %8157, i64 4, !dbg !143
  %8161 = extractelement <16 x float> %8157, i64 7, !dbg !143
  %8162 = extractelement <16 x float> %8157, i64 8, !dbg !143
  %8163 = extractelement <16 x float> %8157, i64 11, !dbg !143
  %8164 = extractelement <16 x float> %8157, i64 12, !dbg !143
  %8165 = extractelement <16 x float> %8157, i64 15, !dbg !143
  %8166 = insertelement <16 x float> poison, float %7847, i64 0, !dbg !143
  %8167 = shufflevector <2 x float> %7860, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8168 = shufflevector <16 x float> %8166, <16 x float> %8167, <16 x i32> <i32 0, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8169 = insertelement <16 x float> %8168, float %7846, i64 3, !dbg !143
  %8170 = insertelement <16 x float> %8169, float %7845, i64 4, !dbg !143
  %8171 = shufflevector <2 x float> %7861, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8172 = shufflevector <16 x float> %8170, <16 x float> %8171, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8173 = insertelement <16 x float> %8172, float %7844, i64 7, !dbg !143
  %8174 = insertelement <16 x float> %8173, float %7843, i64 8, !dbg !143
  %8175 = shufflevector <2 x float> %7862, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8176 = shufflevector <16 x float> %8174, <16 x float> %8175, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8177 = insertelement <16 x float> %8176, float %7842, i64 11, !dbg !143
  %8178 = insertelement <16 x float> %8177, float %7841, i64 12, !dbg !143
  %8179 = shufflevector <2 x float> %7863, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !143
  %8180 = shufflevector <16 x float> %8178, <16 x float> %8179, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 17, i32 poison>, !dbg !143
  %8181 = insertelement <16 x float> %8180, float %7840, i64 15, !dbg !143
  %8182 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8128, <4 x half> %8110, <16 x float> %8181, i32 0, i32 0, i32 0), !dbg !143
  %8183 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8131, <4 x half> %8111, <16 x float> %8182, i32 0, i32 0, i32 0), !dbg !143
  %8184 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8134, <4 x half> %8112, <16 x float> %8183, i32 0, i32 0, i32 0), !dbg !143
  %8185 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %8137, <4 x half> %8113, <16 x float> %8184, i32 0, i32 0, i32 0), !dbg !143
  %8186 = extractelement <16 x float> %8185, i64 0, !dbg !143
  %8187 = extractelement <16 x float> %8185, i64 3, !dbg !143
  %8188 = extractelement <16 x float> %8185, i64 4, !dbg !143
  %8189 = extractelement <16 x float> %8185, i64 7, !dbg !143
  %8190 = extractelement <16 x float> %8185, i64 8, !dbg !143
  %8191 = extractelement <16 x float> %8185, i64 11, !dbg !143
  %8192 = extractelement <16 x float> %8185, i64 12, !dbg !143
  %8193 = extractelement <16 x float> %8185, i64 15, !dbg !143
  %8194 = shufflevector <16 x float> %8157, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %8195 = shufflevector <16 x float> %8157, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %8196 = shufflevector <16 x float> %8157, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %8197 = shufflevector <16 x float> %8157, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  %8198 = shufflevector <16 x float> %8185, <16 x float> poison, <2 x i32> <i32 1, i32 2>
  %8199 = shufflevector <16 x float> %8185, <16 x float> poison, <2 x i32> <i32 5, i32 6>
  %8200 = shufflevector <16 x float> %8185, <16 x float> poison, <2 x i32> <i32 9, i32 10>
  %8201 = shufflevector <16 x float> %8185, <16 x float> poison, <2 x i32> <i32 13, i32 14>
  br label %8202, !dbg !143

8202:                                             ; preds = %8020, %8006
  %8203 = phi float [ %8193, %8020 ], [ %7840, %8006 ]
  %8204 = phi float [ %8192, %8020 ], [ %7841, %8006 ]
  %8205 = phi float [ %8191, %8020 ], [ %7842, %8006 ]
  %8206 = phi float [ %8190, %8020 ], [ %7843, %8006 ]
  %8207 = phi float [ %8189, %8020 ], [ %7844, %8006 ]
  %8208 = phi float [ %8188, %8020 ], [ %7845, %8006 ]
  %8209 = phi float [ %8187, %8020 ], [ %7846, %8006 ]
  %8210 = phi float [ %8186, %8020 ], [ %7847, %8006 ]
  %8211 = phi float [ %8165, %8020 ], [ %7848, %8006 ]
  %8212 = phi float [ %8164, %8020 ], [ %7849, %8006 ]
  %8213 = phi float [ %8163, %8020 ], [ %7850, %8006 ]
  %8214 = phi float [ %8162, %8020 ], [ %7851, %8006 ]
  %8215 = phi float [ %8161, %8020 ], [ %7852, %8006 ]
  %8216 = phi float [ %8160, %8020 ], [ %7853, %8006 ]
  %8217 = phi float [ %8159, %8020 ], [ %7854, %8006 ]
  %8218 = phi float [ %8158, %8020 ], [ %7855, %8006 ]
  %8219 = phi <2 x float> [ %8194, %8020 ], [ %7856, %8006 ]
  %8220 = phi <2 x float> [ %8195, %8020 ], [ %7857, %8006 ]
  %8221 = phi <2 x float> [ %8196, %8020 ], [ %7858, %8006 ]
  %8222 = phi <2 x float> [ %8197, %8020 ], [ %7859, %8006 ]
  %8223 = phi <2 x float> [ %8198, %8020 ], [ %7860, %8006 ]
  %8224 = phi <2 x float> [ %8199, %8020 ], [ %7861, %8006 ]
  %8225 = phi <2 x float> [ %8200, %8020 ], [ %7862, %8006 ]
  %8226 = phi <2 x float> [ %8201, %8020 ], [ %7863, %8006 ]
  %8227 = getelementptr half, ptr addrspace(1) %5, i64 %22, !dbg !144
  %8228 = getelementptr half, ptr addrspace(1) %8227, i64 %44, !dbg !145
  %8229 = fmul float %8218, 0x3FE62E4300000000, !dbg !146
  %8230 = fmul <2 x float> %8219, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8231 = fmul float %8217, 0x3FE62E4300000000, !dbg !146
  %8232 = fmul float %8216, 0x3FE62E4300000000, !dbg !146
  %8233 = fmul <2 x float> %8220, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8234 = fmul float %8215, 0x3FE62E4300000000, !dbg !146
  %8235 = fmul float %8214, 0x3FE62E4300000000, !dbg !146
  %8236 = fmul <2 x float> %8221, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8237 = fmul float %8213, 0x3FE62E4300000000, !dbg !146
  %8238 = fmul float %8212, 0x3FE62E4300000000, !dbg !146
  %8239 = fmul <2 x float> %8222, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8240 = fmul float %8211, 0x3FE62E4300000000, !dbg !146
  %8241 = fmul float %8210, 0x3FE62E4300000000, !dbg !146
  %8242 = fmul <2 x float> %8223, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8243 = fmul float %8209, 0x3FE62E4300000000, !dbg !146
  %8244 = fmul float %8208, 0x3FE62E4300000000, !dbg !146
  %8245 = fmul <2 x float> %8224, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8246 = fmul float %8207, 0x3FE62E4300000000, !dbg !146
  %8247 = fmul float %8206, 0x3FE62E4300000000, !dbg !146
  %8248 = fmul <2 x float> %8225, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8249 = fmul float %8205, 0x3FE62E4300000000, !dbg !146
  %8250 = fmul float %8204, 0x3FE62E4300000000, !dbg !146
  %8251 = fmul <2 x float> %8226, <float 0x3FE62E4300000000, float 0x3FE62E4300000000>, !dbg !146
  %8252 = fmul float %8203, 0x3FE62E4300000000, !dbg !146
  %8253 = fptrunc float %8229 to half, !dbg !147
  %8254 = fptrunc <2 x float> %8230 to <2 x half>, !dbg !147
  %8255 = fptrunc float %8231 to half, !dbg !147
  %8256 = fptrunc float %8232 to half, !dbg !147
  %8257 = fptrunc <2 x float> %8233 to <2 x half>, !dbg !147
  %8258 = fptrunc float %8234 to half, !dbg !147
  %8259 = fptrunc float %8235 to half, !dbg !147
  %8260 = fptrunc <2 x float> %8236 to <2 x half>, !dbg !147
  %8261 = fptrunc float %8237 to half, !dbg !147
  %8262 = fptrunc float %8238 to half, !dbg !147
  %8263 = fptrunc <2 x float> %8239 to <2 x half>, !dbg !147
  %8264 = fptrunc float %8240 to half, !dbg !147
  %8265 = fptrunc float %8241 to half, !dbg !147
  %8266 = fptrunc <2 x float> %8242 to <2 x half>, !dbg !147
  %8267 = fptrunc float %8243 to half, !dbg !147
  %8268 = fptrunc float %8244 to half, !dbg !147
  %8269 = fptrunc <2 x float> %8245 to <2 x half>, !dbg !147
  %8270 = fptrunc float %8246 to half, !dbg !147
  %8271 = fptrunc float %8247 to half, !dbg !147
  %8272 = fptrunc <2 x float> %8248 to <2 x half>, !dbg !147
  %8273 = fptrunc float %8249 to half, !dbg !147
  %8274 = fptrunc float %8250 to half, !dbg !147
  %8275 = fptrunc <2 x float> %8251 to <2 x half>, !dbg !147
  %8276 = fptrunc float %8252 to half, !dbg !147
  %8277 = getelementptr half, ptr addrspace(1) %8228, i64 %5004, !dbg !147
  %8278 = getelementptr half, ptr addrspace(1) %8228, i64 %5005, !dbg !147
  %8279 = getelementptr half, ptr addrspace(1) %8228, i64 %5006, !dbg !147
  %8280 = getelementptr half, ptr addrspace(1) %8228, i64 %5007, !dbg !147
  %8281 = getelementptr half, ptr addrspace(1) %8228, i64 %5008, !dbg !147
  %8282 = getelementptr half, ptr addrspace(1) %8228, i64 %5009, !dbg !147
  %8283 = getelementptr half, ptr addrspace(1) %8228, i64 %5010, !dbg !147
  %8284 = getelementptr half, ptr addrspace(1) %8228, i64 %5011, !dbg !147
  %8285 = insertelement <4 x half> poison, half %8253, i64 0, !dbg !147
  %8286 = shufflevector <2 x half> %8254, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8287 = shufflevector <4 x half> %8285, <4 x half> %8286, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8288 = insertelement <4 x half> %8287, half %8255, i64 3, !dbg !147
  store <4 x half> %8288, ptr addrspace(1) %8277, align 16, !dbg !147
  %8289 = insertelement <4 x half> poison, half %8256, i64 0, !dbg !147
  %8290 = shufflevector <2 x half> %8257, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8291 = shufflevector <4 x half> %8289, <4 x half> %8290, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8292 = insertelement <4 x half> %8291, half %8258, i64 3, !dbg !147
  store <4 x half> %8292, ptr addrspace(1) %8278, align 16, !dbg !147
  %8293 = insertelement <4 x half> poison, half %8259, i64 0, !dbg !147
  %8294 = shufflevector <2 x half> %8260, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8295 = shufflevector <4 x half> %8293, <4 x half> %8294, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8296 = insertelement <4 x half> %8295, half %8261, i64 3, !dbg !147
  store <4 x half> %8296, ptr addrspace(1) %8279, align 16, !dbg !147
  %8297 = insertelement <4 x half> poison, half %8262, i64 0, !dbg !147
  %8298 = shufflevector <2 x half> %8263, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8299 = shufflevector <4 x half> %8297, <4 x half> %8298, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8300 = insertelement <4 x half> %8299, half %8264, i64 3, !dbg !147
  store <4 x half> %8300, ptr addrspace(1) %8280, align 16, !dbg !147
  %8301 = insertelement <4 x half> poison, half %8265, i64 0, !dbg !147
  %8302 = shufflevector <2 x half> %8266, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8303 = shufflevector <4 x half> %8301, <4 x half> %8302, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8304 = insertelement <4 x half> %8303, half %8267, i64 3, !dbg !147
  store <4 x half> %8304, ptr addrspace(1) %8281, align 16, !dbg !147
  %8305 = insertelement <4 x half> poison, half %8268, i64 0, !dbg !147
  %8306 = shufflevector <2 x half> %8269, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8307 = shufflevector <4 x half> %8305, <4 x half> %8306, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8308 = insertelement <4 x half> %8307, half %8270, i64 3, !dbg !147
  store <4 x half> %8308, ptr addrspace(1) %8282, align 16, !dbg !147
  %8309 = insertelement <4 x half> poison, half %8271, i64 0, !dbg !147
  %8310 = shufflevector <2 x half> %8272, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8311 = shufflevector <4 x half> %8309, <4 x half> %8310, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8312 = insertelement <4 x half> %8311, half %8273, i64 3, !dbg !147
  store <4 x half> %8312, ptr addrspace(1) %8283, align 16, !dbg !147
  %8313 = insertelement <4 x half> poison, half %8274, i64 0, !dbg !147
  %8314 = shufflevector <2 x half> %8275, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !147
  %8315 = shufflevector <4 x half> %8313, <4 x half> %8314, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !147
  %8316 = insertelement <4 x half> %8315, half %8276, i64 3, !dbg !147
  store <4 x half> %8316, ptr addrspace(1) %8284, align 16, !dbg !147
  ret void, !dbg !148
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.z() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #0

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.f32.16x16x16f16(<4 x half>, <4 x half>, <4 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half>, <4 x half>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <8 x half> @llvm.masked.load.v8f16.p1(ptr addrspace(1) nocapture, i32 immarg, <8 x i1>, <8 x half>) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x float> @llvm.masked.load.v4f32.p1(ptr addrspace(1) nocapture, i32 immarg, <4 x i1>, <4 x float>) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "06-fused-attention.py", directory: "/triton/python/tutorials")
!4 = !DISubprogram(name: "llvm.amdgcn.exp2.f32", linkageName: "llvm.amdgcn.exp2.f32", scope: !3, file: !3, line: 367, type: !5, scopeLine: 367, spFlags: DISPFlagOptimized)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = distinct !DISubprogram(name: "_attn_bwd", linkageName: "_attn_bwd", scope: !3, file: !3, line: 311, type: !5, scopeLine: 311, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DILocation(line: 326, column: 25, scope: !7)
!9 = !DILocation(line: 328, column: 55, scope: !7)
!10 = !DILocation(line: 328, column: 30, scope: !7)
!11 = !DILocation(line: 328, column: 23, scope: !7)
!12 = !DILocation(line: 328, column: 47, scope: !7)
!13 = !DILocation(line: 328, column: 35, scope: !7)
!14 = !DILocation(line: 328, column: 62, scope: !7)
!15 = !DILocation(line: 333, column: 9, scope: !7)
!16 = !DILocation(line: 329, column: 24, scope: !7)
!17 = !DILocation(line: 345, column: 20, scope: !7)
!18 = !DILocation(line: 349, column: 36, scope: !7)
!19 = !DILocation(line: 404, column: 22, scope: !7)
!20 = !DILocation(line: 355, column: 20, scope: !7)
!21 = !DILocation(line: 355, column: 58, scope: !7)
!22 = !DILocation(line: 355, column: 51, scope: !7)
!23 = !DILocation(line: 355, column: 16, scope: !7)
!24 = !DILocation(line: 334, column: 9, scope: !7)
!25 = !DILocation(line: 356, column: 20, scope: !7)
!26 = !DILocation(line: 356, column: 16, scope: !7)
!27 = !DILocation(line: 327, column: 22, scope: !7)
!28 = !DILocation(line: 327, column: 32, scope: !7)
!29 = !DILocation(line: 339, column: 9, scope: !7)
!30 = !DILocation(line: 223, column: 36, scope: !31, inlinedAt: !32)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!32 = !DILocation(line: 367, column: 46, scope: !7)
!33 = !DILocation(line: 235, column: 26, scope: !31, inlinedAt: !32)
!34 = !DILocation(line: 236, column: 24, scope: !31, inlinedAt: !32)
!35 = !DILocation(line: 236, column: 20, scope: !31, inlinedAt: !32)
!36 = !DILocation(line: 340, column: 9, scope: !7)
!37 = !DILocation(line: 249, column: 25, scope: !31, inlinedAt: !32)
!38 = !DILocation(line: 249, column: 21, scope: !31, inlinedAt: !32)
!39 = !DILocation(line: 256, column: 18, scope: !31, inlinedAt: !32)
!40 = !DILocation(line: 332, column: 9, scope: !7)
!41 = !DILocation(line: 279, column: 18, scope: !31, inlinedAt: !42)
!42 = !DILocation(line: 420, column: 66, scope: !7)
!43 = !DILocation(line: 226, column: 18, scope: !31, inlinedAt: !32)
!44 = !DILocation(line: 226, column: 56, scope: !31, inlinedAt: !32)
!45 = !DILocation(line: 226, column: 49, scope: !31, inlinedAt: !32)
!46 = !DILocation(line: 257, column: 28, scope: !31, inlinedAt: !32)
!47 = !DILocation(line: 257, column: 19, scope: !31, inlinedAt: !32)
!48 = !DILocation(line: 233, column: 21, scope: !31, inlinedAt: !32)
!49 = !DILocation(line: 335, column: 10, scope: !7)
!50 = !DILocation(line: 227, column: 19, scope: !31, inlinedAt: !32)
!51 = !DILocation(line: 258, column: 19, scope: !31, inlinedAt: !32)
!52 = !DILocation(line: 243, column: 21, scope: !31, inlinedAt: !32)
!53 = !DILocation(line: 337, column: 10, scope: !7)
!54 = !DILocation(line: 349, column: 23, scope: !7)
!55 = !DILocation(line: 387, column: 19, scope: !7)
!56 = !DILocation(line: 232, column: 25, scope: !31, inlinedAt: !32)
!57 = !DILocation(line: 241, column: 39, scope: !31, inlinedAt: !32)
!58 = !DILocation(line: 237, column: 24, scope: !31, inlinedAt: !32)
!59 = !DILocation(line: 238, column: 32, scope: !31, inlinedAt: !32)
!60 = !DILocation(line: 238, column: 26, scope: !31, inlinedAt: !32)
!61 = !DILocation(line: 246, column: 21, scope: !31, inlinedAt: !32)
!62 = !DILocation(line: 247, column: 26, scope: !31, inlinedAt: !32)
!63 = !DILocation(line: 242, column: 36, scope: !31, inlinedAt: !32)
!64 = !DILocation(line: 251, column: 33, scope: !31, inlinedAt: !32)
!65 = !DILocation(line: 251, column: 24, scope: !31, inlinedAt: !32)
!66 = !DILocation(line: 252, column: 26, scope: !31, inlinedAt: !32)
!67 = !DILocation(line: 252, column: 20, scope: !31, inlinedAt: !32)
!68 = !DILocation(line: 253, column: 21, scope: !31, inlinedAt: !32)
!69 = !DILocation(line: 254, column: 35, scope: !31, inlinedAt: !32)
!70 = !DILocation(line: 254, column: 26, scope: !31, inlinedAt: !32)
!71 = !DILocation(line: 338, column: 10, scope: !7)
!72 = !DILocation(line: 371, column: 15, scope: !7)
!73 = !DILocation(line: 236, column: 24, scope: !31, inlinedAt: !74)
!74 = !DILocation(line: 383, column: 26, scope: !7)
!75 = !DILocation(line: 372, column: 25, scope: !7)
!76 = !DILocation(line: 232, column: 25, scope: !31, inlinedAt: !74)
!77 = !DILocation(line: 236, column: 20, scope: !31, inlinedAt: !74)
!78 = !DILocation(line: 249, column: 25, scope: !31, inlinedAt: !74)
!79 = !DILocation(line: 249, column: 21, scope: !31, inlinedAt: !74)
!80 = !DILocation(line: 256, column: 18, scope: !31, inlinedAt: !74)
!81 = !DILocation(line: 226, column: 18, scope: !31, inlinedAt: !74)
!82 = !DILocation(line: 257, column: 28, scope: !31, inlinedAt: !74)
!83 = !DILocation(line: 257, column: 19, scope: !31, inlinedAt: !74)
!84 = !DILocation(line: 233, column: 21, scope: !31, inlinedAt: !74)
!85 = !DILocation(line: 227, column: 19, scope: !31, inlinedAt: !74)
!86 = !DILocation(line: 258, column: 19, scope: !31, inlinedAt: !74)
!87 = !DILocation(line: 243, column: 21, scope: !31, inlinedAt: !74)
!88 = !DILocation(line: 372, column: 37, scope: !7)
!89 = !DILocation(line: 237, column: 24, scope: !31, inlinedAt: !74)
!90 = !DILocation(line: 238, column: 32, scope: !31, inlinedAt: !74)
!91 = !DILocation(line: 238, column: 26, scope: !31, inlinedAt: !74)
!92 = !DILocation(line: 246, column: 21, scope: !31, inlinedAt: !74)
!93 = !DILocation(line: 247, column: 26, scope: !31, inlinedAt: !74)
!94 = !DILocation(line: 251, column: 33, scope: !31, inlinedAt: !74)
!95 = !DILocation(line: 251, column: 24, scope: !31, inlinedAt: !74)
!96 = !DILocation(line: 252, column: 26, scope: !31, inlinedAt: !74)
!97 = !DILocation(line: 252, column: 20, scope: !31, inlinedAt: !74)
!98 = !DILocation(line: 253, column: 21, scope: !31, inlinedAt: !74)
!99 = !DILocation(line: 254, column: 35, scope: !31, inlinedAt: !74)
!100 = !DILocation(line: 254, column: 26, scope: !31, inlinedAt: !74)
!101 = !DILocation(line: 402, column: 16, scope: !7)
!102 = !DILocation(line: 404, column: 17, scope: !7)
!103 = !DILocation(line: 406, column: 16, scope: !7)
!104 = !DILocation(line: 281, column: 17, scope: !31, inlinedAt: !42)
!105 = !DILocation(line: 305, column: 19, scope: !31, inlinedAt: !42)
!106 = !DILocation(line: 287, column: 21, scope: !31, inlinedAt: !42)
!107 = !DILocation(line: 306, column: 19, scope: !31, inlinedAt: !42)
!108 = !DILocation(line: 288, column: 21, scope: !31, inlinedAt: !42)
!109 = !DILocation(line: 387, column: 50, scope: !7)
!110 = !DILocation(line: 388, column: 22, scope: !7)
!111 = !DILocation(line: 391, column: 10, scope: !7)
!112 = !DILocation(line: 392, column: 19, scope: !7)
!113 = !DILocation(line: 393, column: 22, scope: !7)
!114 = !DILocation(line: 298, column: 23, scope: !31, inlinedAt: !42)
!115 = !DILocation(line: 286, column: 25, scope: !31, inlinedAt: !42)
!116 = !DILocation(line: 289, column: 23, scope: !31, inlinedAt: !42)
!117 = !DILocation(line: 290, column: 30, scope: !31, inlinedAt: !42)
!118 = !DILocation(line: 290, column: 25, scope: !31, inlinedAt: !42)
!119 = !DILocation(line: 293, column: 30, scope: !31, inlinedAt: !42)
!120 = !DILocation(line: 297, column: 24, scope: !31, inlinedAt: !42)
!121 = !DILocation(line: 294, column: 39, scope: !31, inlinedAt: !42)
!122 = !DILocation(line: 295, column: 34, scope: !31, inlinedAt: !42)
!123 = !DILocation(line: 298, column: 18, scope: !31, inlinedAt: !42)
!124 = !DILocation(line: 299, column: 19, scope: !31, inlinedAt: !42)
!125 = !DILocation(line: 302, column: 34, scope: !31, inlinedAt: !42)
!126 = !DILocation(line: 302, column: 25, scope: !31, inlinedAt: !42)
!127 = !DILocation(line: 304, column: 18, scope: !31, inlinedAt: !42)
!128 = !DILocation(line: 425, column: 25, scope: !7)
!129 = !DILocation(line: 305, column: 19, scope: !31, inlinedAt: !130)
!130 = !DILocation(line: 431, column: 61, scope: !7)
!131 = !DILocation(line: 286, column: 25, scope: !31, inlinedAt: !130)
!132 = !DILocation(line: 287, column: 21, scope: !31, inlinedAt: !130)
!133 = !DILocation(line: 306, column: 19, scope: !31, inlinedAt: !130)
!134 = !DILocation(line: 288, column: 21, scope: !31, inlinedAt: !130)
!135 = !DILocation(line: 298, column: 23, scope: !31, inlinedAt: !130)
!136 = !DILocation(line: 289, column: 23, scope: !31, inlinedAt: !130)
!137 = !DILocation(line: 290, column: 30, scope: !31, inlinedAt: !130)
!138 = !DILocation(line: 290, column: 25, scope: !31, inlinedAt: !130)
!139 = !DILocation(line: 297, column: 24, scope: !31, inlinedAt: !130)
!140 = !DILocation(line: 298, column: 18, scope: !31, inlinedAt: !130)
!141 = !DILocation(line: 299, column: 19, scope: !31, inlinedAt: !130)
!142 = !DILocation(line: 302, column: 34, scope: !31, inlinedAt: !130)
!143 = !DILocation(line: 302, column: 25, scope: !31, inlinedAt: !130)
!144 = !DILocation(line: 336, column: 10, scope: !7)
!145 = !DILocation(line: 435, column: 19, scope: !7)
!146 = !DILocation(line: 436, column: 10, scope: !7)
!147 = !DILocation(line: 437, column: 22, scope: !7)
!148 = !DILocation(line: 437, column: 4, scope: !7)
