; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: mustprogress nofree norecurse nounwind willreturn
define amdgpu_kernel void @_attn_bwd_preprocess(ptr addrspace(1) inreg nocapture readonly %0, ptr addrspace(1) inreg nocapture readonly %1, ptr addrspace(1) inreg nocapture writeonly %2, i32 inreg %3, i32 inreg %4) local_unnamed_addr #0 !dbg !4 {
  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y(), !dbg !7
  %7 = shl i32 %6, 6, !dbg !8
  %8 = mul i32 %7, %4, !dbg !9
  %9 = sext i32 %8 to i64, !dbg !10
  %10 = getelementptr half, ptr addrspace(1) %0, i64 %9, !dbg !10
  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !11
  %12 = shl i32 %11, 7, !dbg !12
  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !13
  %14 = lshr i32 %13, 3, !dbg !13
  %15 = and i32 %14, 31, !dbg !13
  %16 = or disjoint i32 %15, 32, !dbg !13
  %17 = or disjoint i32 %15, 64, !dbg !13
  %18 = or disjoint i32 %15, 96, !dbg !13
  %19 = shl i32 %11, 13, !dbg !14
  %20 = shl nuw nsw i32 %15, 6, !dbg !14
  %21 = shl nuw nsw i32 %16, 6, !dbg !14
  %22 = shl nuw nsw i32 %17, 6, !dbg !14
  %23 = shl nuw nsw i32 %18, 6, !dbg !14
  %24 = sext i32 %19 to i64, !dbg !15
  %25 = getelementptr half, ptr addrspace(1) %10, i64 %24, !dbg !15
  %26 = shl i32 %13, 3, !dbg !16
  %27 = and i32 %26, 56, !dbg !16
  %28 = or disjoint i32 %20, %27, !dbg !17
  %29 = zext nneg i32 %28 to i64, !dbg !17
  %30 = or disjoint i32 %21, %27, !dbg !17
  %31 = zext nneg i32 %30 to i64, !dbg !17
  %32 = or disjoint i32 %22, %27, !dbg !17
  %33 = zext nneg i32 %32 to i64, !dbg !17
  %34 = or disjoint i32 %23, %27, !dbg !17
  %35 = zext nneg i32 %34 to i64, !dbg !17
  %36 = getelementptr half, ptr addrspace(1) %25, i64 %29, !dbg !18
  %37 = getelementptr half, ptr addrspace(1) %25, i64 %31, !dbg !18
  %38 = getelementptr half, ptr addrspace(1) %25, i64 %33, !dbg !18
  %39 = getelementptr half, ptr addrspace(1) %25, i64 %35, !dbg !18
  %unmaskedload = load <8 x half>, ptr addrspace(1) %36, align 16, !dbg !18
  %unmaskedload2 = load <8 x half>, ptr addrspace(1) %37, align 16, !dbg !18
  %unmaskedload3 = load <8 x half>, ptr addrspace(1) %38, align 16, !dbg !18
  %unmaskedload4 = load <8 x half>, ptr addrspace(1) %39, align 16, !dbg !18
  %40 = getelementptr half, ptr addrspace(1) %1, i64 %9, !dbg !19
  %41 = getelementptr half, ptr addrspace(1) %40, i64 %24, !dbg !14
  %42 = getelementptr half, ptr addrspace(1) %41, i64 %29, !dbg !20
  %43 = getelementptr half, ptr addrspace(1) %41, i64 %31, !dbg !20
  %44 = getelementptr half, ptr addrspace(1) %41, i64 %33, !dbg !20
  %45 = getelementptr half, ptr addrspace(1) %41, i64 %35, !dbg !20
  %unmaskedload5 = load <8 x half>, ptr addrspace(1) %42, align 16, !dbg !20
  %unmaskedload6 = load <8 x half>, ptr addrspace(1) %43, align 16, !dbg !20
  %unmaskedload7 = load <8 x half>, ptr addrspace(1) %44, align 16, !dbg !20
  %unmaskedload8 = load <8 x half>, ptr addrspace(1) %45, align 16, !dbg !20
  %46 = and i32 %13, 127, !dbg !13
  %47 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !21
  %48 = fpext <2 x half> %47 to <2 x float>, !dbg !21
  %49 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !22
  %50 = fpext <2 x half> %49 to <2 x float>, !dbg !22
  %51 = fmul <2 x float> %50, %48, !dbg !22
  %52 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !21
  %53 = fpext <2 x half> %52 to <2 x float>, !dbg !21
  %54 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !22
  %55 = fpext <2 x half> %54 to <2 x float>, !dbg !22
  %56 = fmul <2 x float> %55, %53, !dbg !22
  %57 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !21
  %58 = fpext <2 x half> %57 to <2 x float>, !dbg !21
  %59 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !22
  %60 = fpext <2 x half> %59 to <2 x float>, !dbg !22
  %61 = fmul <2 x float> %60, %58, !dbg !22
  %62 = shufflevector <8 x half> %unmaskedload5, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !21
  %63 = fpext <2 x half> %62 to <2 x float>, !dbg !21
  %64 = shufflevector <8 x half> %unmaskedload, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !22
  %65 = fpext <2 x half> %64 to <2 x float>, !dbg !22
  %66 = fmul <2 x float> %65, %63, !dbg !22
  %67 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !21
  %68 = fpext <2 x half> %67 to <2 x float>, !dbg !21
  %69 = shufflevector <8 x half> %unmaskedload2, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !22
  %70 = fpext <2 x half> %69 to <2 x float>, !dbg !22
  %71 = fmul <2 x float> %70, %68, !dbg !22
  %72 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !21
  %73 = fpext <2 x half> %72 to <2 x float>, !dbg !21
  %74 = shufflevector <8 x half> %unmaskedload2, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !22
  %75 = fpext <2 x half> %74 to <2 x float>, !dbg !22
  %76 = fmul <2 x float> %75, %73, !dbg !22
  %77 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !21
  %78 = fpext <2 x half> %77 to <2 x float>, !dbg !21
  %79 = shufflevector <8 x half> %unmaskedload2, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !22
  %80 = fpext <2 x half> %79 to <2 x float>, !dbg !22
  %81 = fmul <2 x float> %80, %78, !dbg !22
  %82 = shufflevector <8 x half> %unmaskedload6, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !21
  %83 = fpext <2 x half> %82 to <2 x float>, !dbg !21
  %84 = shufflevector <8 x half> %unmaskedload2, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !22
  %85 = fpext <2 x half> %84 to <2 x float>, !dbg !22
  %86 = fmul <2 x float> %85, %83, !dbg !22
  %87 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !21
  %88 = fpext <2 x half> %87 to <2 x float>, !dbg !21
  %89 = shufflevector <8 x half> %unmaskedload3, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !22
  %90 = fpext <2 x half> %89 to <2 x float>, !dbg !22
  %91 = fmul <2 x float> %90, %88, !dbg !22
  %92 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !21
  %93 = fpext <2 x half> %92 to <2 x float>, !dbg !21
  %94 = shufflevector <8 x half> %unmaskedload3, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !22
  %95 = fpext <2 x half> %94 to <2 x float>, !dbg !22
  %96 = fmul <2 x float> %95, %93, !dbg !22
  %97 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !21
  %98 = fpext <2 x half> %97 to <2 x float>, !dbg !21
  %99 = shufflevector <8 x half> %unmaskedload3, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !22
  %100 = fpext <2 x half> %99 to <2 x float>, !dbg !22
  %101 = fmul <2 x float> %100, %98, !dbg !22
  %102 = shufflevector <8 x half> %unmaskedload7, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !21
  %103 = fpext <2 x half> %102 to <2 x float>, !dbg !21
  %104 = shufflevector <8 x half> %unmaskedload3, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !22
  %105 = fpext <2 x half> %104 to <2 x float>, !dbg !22
  %106 = fmul <2 x float> %105, %103, !dbg !22
  %107 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !21
  %108 = fpext <2 x half> %107 to <2 x float>, !dbg !21
  %109 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !22
  %110 = fpext <2 x half> %109 to <2 x float>, !dbg !22
  %111 = fmul <2 x float> %110, %108, !dbg !22
  %112 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !21
  %113 = fpext <2 x half> %112 to <2 x float>, !dbg !21
  %114 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !22
  %115 = fpext <2 x half> %114 to <2 x float>, !dbg !22
  %116 = fmul <2 x float> %115, %113, !dbg !22
  %117 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !21
  %118 = fpext <2 x half> %117 to <2 x float>, !dbg !21
  %119 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !22
  %120 = fpext <2 x half> %119 to <2 x float>, !dbg !22
  %121 = fmul <2 x float> %120, %118, !dbg !22
  %122 = shufflevector <8 x half> %unmaskedload8, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !21
  %123 = fpext <2 x half> %122 to <2 x float>, !dbg !21
  %124 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !22
  %125 = fpext <2 x half> %124 to <2 x float>, !dbg !22
  %126 = fmul <2 x float> %125, %123, !dbg !22
  %shift = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %127 = fadd <2 x float> %51, %shift, !dbg !23
  %128 = fadd <2 x float> %56, %127, !dbg !23
  %shift9 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %129 = fadd <2 x float> %shift9, %128, !dbg !23
  %130 = fadd <2 x float> %61, %129, !dbg !23
  %shift10 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %131 = fadd <2 x float> %shift10, %130, !dbg !23
  %132 = fadd <2 x float> %66, %131, !dbg !23
  %shift11 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %133 = fadd <2 x float> %shift11, %132, !dbg !23
  %134 = extractelement <2 x float> %133, i64 0, !dbg !23
  %shift12 = shufflevector <2 x float> %71, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %135 = fadd <2 x float> %71, %shift12, !dbg !23
  %136 = fadd <2 x float> %76, %135, !dbg !23
  %shift13 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %137 = fadd <2 x float> %shift13, %136, !dbg !23
  %138 = fadd <2 x float> %81, %137, !dbg !23
  %shift14 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %139 = fadd <2 x float> %shift14, %138, !dbg !23
  %140 = fadd <2 x float> %86, %139, !dbg !23
  %shift15 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %141 = fadd <2 x float> %shift15, %140, !dbg !23
  %142 = extractelement <2 x float> %141, i64 0, !dbg !23
  %shift16 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %143 = fadd <2 x float> %91, %shift16, !dbg !23
  %144 = fadd <2 x float> %96, %143, !dbg !23
  %shift17 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %145 = fadd <2 x float> %shift17, %144, !dbg !23
  %146 = fadd <2 x float> %101, %145, !dbg !23
  %shift18 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %147 = fadd <2 x float> %shift18, %146, !dbg !23
  %148 = fadd <2 x float> %106, %147, !dbg !23
  %shift19 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %149 = fadd <2 x float> %shift19, %148, !dbg !23
  %150 = extractelement <2 x float> %149, i64 0, !dbg !23
  %shift20 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %151 = fadd <2 x float> %111, %shift20, !dbg !23
  %152 = fadd <2 x float> %116, %151, !dbg !23
  %shift21 = shufflevector <2 x float> %116, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %153 = fadd <2 x float> %shift21, %152, !dbg !23
  %154 = fadd <2 x float> %121, %153, !dbg !23
  %shift22 = shufflevector <2 x float> %121, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %155 = fadd <2 x float> %shift22, %154, !dbg !23
  %156 = fadd <2 x float> %126, %155, !dbg !23
  %shift23 = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %157 = fadd <2 x float> %shift23, %156, !dbg !23
  %158 = extractelement <2 x float> %157, i64 0, !dbg !23
  %159 = bitcast float %134 to i32, !dbg !28
  %160 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %159, i32 4127), !dbg !28
  %161 = bitcast i32 %160 to float, !dbg !28
  %162 = fadd float %134, %161, !dbg !23
  %163 = bitcast float %162 to i32, !dbg !28
  %164 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %163, i32 2079), !dbg !28
  %165 = bitcast i32 %164 to float, !dbg !28
  %166 = fadd float %162, %165, !dbg !23
  %167 = bitcast float %166 to i32, !dbg !28
  %168 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %167, i32 1055), !dbg !28
  %169 = bitcast i32 %168 to float, !dbg !28
  %170 = fadd float %166, %169, !dbg !23
  %171 = bitcast float %142 to i32, !dbg !28
  %172 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %171, i32 4127), !dbg !28
  %173 = bitcast i32 %172 to float, !dbg !28
  %174 = fadd float %142, %173, !dbg !23
  %175 = bitcast float %174 to i32, !dbg !28
  %176 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %175, i32 2079), !dbg !28
  %177 = bitcast i32 %176 to float, !dbg !28
  %178 = fadd float %174, %177, !dbg !23
  %179 = bitcast float %178 to i32, !dbg !28
  %180 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %179, i32 1055), !dbg !28
  %181 = bitcast i32 %180 to float, !dbg !28
  %182 = fadd float %178, %181, !dbg !23
  %183 = bitcast float %150 to i32, !dbg !28
  %184 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %183, i32 4127), !dbg !28
  %185 = bitcast i32 %184 to float, !dbg !28
  %186 = fadd float %150, %185, !dbg !23
  %187 = bitcast float %186 to i32, !dbg !28
  %188 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %187, i32 2079), !dbg !28
  %189 = bitcast i32 %188 to float, !dbg !28
  %190 = fadd float %186, %189, !dbg !23
  %191 = bitcast float %190 to i32, !dbg !28
  %192 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %191, i32 1055), !dbg !28
  %193 = bitcast i32 %192 to float, !dbg !28
  %194 = fadd float %190, %193, !dbg !23
  %195 = bitcast float %158 to i32, !dbg !28
  %196 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %195, i32 4127), !dbg !28
  %197 = bitcast i32 %196 to float, !dbg !28
  %198 = fadd float %158, %197, !dbg !23
  %199 = bitcast float %198 to i32, !dbg !28
  %200 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %199, i32 2079), !dbg !28
  %201 = bitcast i32 %200 to float, !dbg !28
  %202 = fadd float %198, %201, !dbg !23
  %203 = bitcast float %202 to i32, !dbg !28
  %204 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %203, i32 1055), !dbg !28
  %205 = bitcast i32 %204 to float, !dbg !28
  %206 = fadd float %202, %205, !dbg !23
  %207 = mul i32 %4, %6, !dbg !29
  %208 = sext i32 %207 to i64, !dbg !30
  %209 = getelementptr float, ptr addrspace(1) %2, i64 %208, !dbg !30
  %210 = sext i32 %12 to i64, !dbg !31
  %211 = getelementptr float, ptr addrspace(1) %209, i64 %210, !dbg !31
  %212 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %15, !dbg !32
  %213 = insertelement <1 x float> poison, float %170, i64 0, !dbg !32
  store <1 x float> %213, ptr addrspace(3) %212, align 4, !dbg !32
  %214 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %16, !dbg !32
  %215 = insertelement <1 x float> poison, float %182, i64 0, !dbg !32
  store <1 x float> %215, ptr addrspace(3) %214, align 4, !dbg !32
  %216 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %17, !dbg !32
  %217 = insertelement <1 x float> poison, float %194, i64 0, !dbg !32
  store <1 x float> %217, ptr addrspace(3) %216, align 4, !dbg !32
  %218 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %18, !dbg !32
  %219 = insertelement <1 x float> poison, float %206, i64 0, !dbg !32
  store <1 x float> %219, ptr addrspace(3) %218, align 4, !dbg !32
  fence syncscope("workgroup") release, !dbg !32
  tail call void @llvm.amdgcn.s.barrier(), !dbg !32
  fence syncscope("workgroup") acquire, !dbg !32
  %220 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %46, !dbg !32
  %221 = load <1 x float>, ptr addrspace(3) %220, align 4, !dbg !32
  %222 = zext nneg i32 %46 to i64, !dbg !32
  %223 = getelementptr float, ptr addrspace(1) %211, i64 %222, !dbg !32
  %224 = and i32 %13, 128, !dbg !32
  %225 = icmp eq i32 %224, 0, !dbg !32
  %226 = insertelement <1 x i1> poison, i1 %225, i64 0, !dbg !32
  tail call void @llvm.masked.store.v1f32.p1(<1 x float> %221, ptr addrspace(1) %223, i32 16, <1 x i1> %226), !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.swizzle(i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.masked.store.v1f32.p1(<1 x float>, ptr addrspace(1) nocapture, i32 immarg, <1 x i1>) #4

attributes #0 = { mustprogress nofree norecurse nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "06-fused-attention.py", directory: "/triton/python/tutorials")
!4 = distinct !DISubprogram(name: "_attn_bwd_preprocess", linkageName: "_attn_bwd_preprocess", scope: !3, file: !3, line: 193, type: !5, scopeLine: 193, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 199, column: 27, scope: !4)
!8 = !DILocation(line: 202, column: 29, scope: !4)
!9 = !DILocation(line: 202, column: 40, scope: !4)
!10 = !DILocation(line: 202, column: 20, scope: !4)
!11 = !DILocation(line: 198, column: 26, scope: !4)
!12 = !DILocation(line: 198, column: 31, scope: !4)
!13 = !DILocation(line: 198, column: 54, scope: !4)
!14 = !DILocation(line: 203, column: 50, scope: !4)
!15 = !DILocation(line: 202, column: 48, scope: !4)
!16 = !DILocation(line: 202, column: 82, scope: !4)
!17 = !DILocation(line: 202, column: 76, scope: !4)
!18 = !DILocation(line: 202, column: 16, scope: !4)
!19 = !DILocation(line: 203, column: 22, scope: !4)
!20 = !DILocation(line: 203, column: 17, scope: !4)
!21 = !DILocation(line: 203, column: 97, scope: !4)
!22 = !DILocation(line: 204, column: 23, scope: !4)
!23 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !27)
!24 = distinct !DILexicalBlockFile(scope: !26, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!26 = distinct !DILexicalBlockFile(scope: !4, file: !25, discriminator: 0)
!27 = !DILocation(line: 204, column: 19, scope: !4)
!28 = !DILocation(line: 267, column: 36, scope: !26, inlinedAt: !27)
!29 = !DILocation(line: 206, column: 30, scope: !4)
!30 = !DILocation(line: 206, column: 21, scope: !4)
!31 = !DILocation(line: 206, column: 38, scope: !4)
!32 = !DILocation(line: 206, column: 45, scope: !4)
!33 = !DILocation(line: 206, column: 4, scope: !4)
