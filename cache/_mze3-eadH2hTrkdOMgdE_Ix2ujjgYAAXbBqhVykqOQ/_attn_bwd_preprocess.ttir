#loc = loc("/triton/python/tutorials/06-fused-attention.py":193:0)
#loc1 = loc(unknown)
#loc24 = loc("/triton/python/tutorials/06-fused-attention.py":204:19)
#loc32 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @_attn_bwd_preprocess(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":193:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":193:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":193:0), %arg3: i32 loc("/triton/python/tutorials/06-fused-attention.py":193:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":193:0)) attributes {noinline = false} {
    %cst = arith.constant dense<64> : tensor<128x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = tt.get_program_id y : i32 loc(#loc6)
    %6 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc7)
    %7 = arith.muli %5, %c64_i32 : i32 loc(#loc8)
    %8 = arith.muli %7, %arg4 : i32 loc(#loc9)
    %9 = tt.addptr %arg0, %8 : !tt.ptr<f16>, i32 loc(#loc10)
    %10 = tt.expand_dims %4 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc11)
    %11 = arith.muli %10, %cst : tensor<128x1xi32> loc(#loc12)
    %12 = tt.splat %9 : !tt.ptr<f16> -> tensor<128x1x!tt.ptr<f16>> loc(#loc13)
    %13 = tt.addptr %12, %11 : tensor<128x1x!tt.ptr<f16>>, tensor<128x1xi32> loc(#loc13)
    %14 = tt.expand_dims %6 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc14)
    %15 = tt.broadcast %13 : tensor<128x1x!tt.ptr<f16>> -> tensor<128x64x!tt.ptr<f16>> loc(#loc15)
    %16 = tt.broadcast %14 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc15)
    %17 = tt.addptr %15, %16 : tensor<128x64x!tt.ptr<f16>>, tensor<128x64xi32> loc(#loc15)
    %18 = tt.load %17 : tensor<128x64x!tt.ptr<f16>> loc(#loc16)
    %19 = tt.addptr %arg1, %8 : !tt.ptr<f16>, i32 loc(#loc17)
    %20 = tt.splat %19 : !tt.ptr<f16> -> tensor<128x1x!tt.ptr<f16>> loc(#loc18)
    %21 = tt.addptr %20, %11 : tensor<128x1x!tt.ptr<f16>>, tensor<128x1xi32> loc(#loc18)
    %22 = tt.broadcast %21 : tensor<128x1x!tt.ptr<f16>> -> tensor<128x64x!tt.ptr<f16>> loc(#loc19)
    %23 = tt.addptr %22, %16 : tensor<128x64x!tt.ptr<f16>>, tensor<128x64xi32> loc(#loc19)
    %24 = tt.load %23 : tensor<128x64x!tt.ptr<f16>> loc(#loc20)
    %25 = arith.extf %24 : tensor<128x64xf16> to tensor<128x64xf32> loc(#loc21)
    %26 = arith.extf %18 : tensor<128x64xf16> to tensor<128x64xf32> loc(#loc22)
    %27 = arith.mulf %26, %25 : tensor<128x64xf32> loc(#loc22)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc24)), %arg6: f32 loc(callsite(#loc1 at #loc24))):
      %33 = arith.addf %arg5, %arg6 : f32 loc(#loc34)
      tt.reduce.return %33 : f32 loc(#loc31)
    }) : (tensor<128x64xf32>) -> tensor<128xf32> loc(#loc31)
    %29 = arith.muli %5, %arg4 : i32 loc(#loc26)
    %30 = tt.addptr %arg2, %29 : !tt.ptr<f32>, i32 loc(#loc27)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc28)
    %32 = tt.addptr %31, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc28)
    tt.store %32, %28 : tensor<128x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/triton/python/tutorials/06-fused-attention.py":198:26)
#loc3 = loc("/triton/python/tutorials/06-fused-attention.py":198:31)
#loc4 = loc("/triton/python/tutorials/06-fused-attention.py":198:54)
#loc5 = loc("/triton/python/tutorials/06-fused-attention.py":198:41)
#loc6 = loc("/triton/python/tutorials/06-fused-attention.py":199:27)
#loc7 = loc("/triton/python/tutorials/06-fused-attention.py":200:25)
#loc8 = loc("/triton/python/tutorials/06-fused-attention.py":202:29)
#loc9 = loc("/triton/python/tutorials/06-fused-attention.py":202:40)
#loc10 = loc("/triton/python/tutorials/06-fused-attention.py":202:20)
#loc11 = loc("/triton/python/tutorials/06-fused-attention.py":202:54)
#loc12 = loc("/triton/python/tutorials/06-fused-attention.py":202:65)
#loc13 = loc("/triton/python/tutorials/06-fused-attention.py":202:48)
#loc14 = loc("/triton/python/tutorials/06-fused-attention.py":202:82)
#loc15 = loc("/triton/python/tutorials/06-fused-attention.py":202:76)
#loc16 = loc("/triton/python/tutorials/06-fused-attention.py":202:16)
#loc17 = loc("/triton/python/tutorials/06-fused-attention.py":203:22)
#loc18 = loc("/triton/python/tutorials/06-fused-attention.py":203:50)
#loc19 = loc("/triton/python/tutorials/06-fused-attention.py":203:78)
#loc20 = loc("/triton/python/tutorials/06-fused-attention.py":203:17)
#loc21 = loc("/triton/python/tutorials/06-fused-attention.py":203:97)
#loc22 = loc("/triton/python/tutorials/06-fused-attention.py":204:23)
#loc23 = loc("/triton/python/triton/language/standard.py":267:36)
#loc25 = loc("/triton/python/triton/language/standard.py":256:15)
#loc26 = loc("/triton/python/tutorials/06-fused-attention.py":206:30)
#loc27 = loc("/triton/python/tutorials/06-fused-attention.py":206:21)
#loc28 = loc("/triton/python/tutorials/06-fused-attention.py":206:38)
#loc29 = loc("/triton/python/tutorials/06-fused-attention.py":206:45)
#loc30 = loc("/triton/python/tutorials/06-fused-attention.py":206:4)
#loc31 = loc(callsite(#loc23 at #loc24))
#loc33 = loc(callsite(#loc25 at #loc23))
#loc34 = loc(callsite(#loc33 at #loc24))
