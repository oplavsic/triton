#blocked = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [8, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [4], order = [0]}>
#loc = loc("/triton/python/tutorials/06-fused-attention.py":191:0)
#loc1 = loc(unknown)
#loc23 = loc("/triton/python/tutorials/06-fused-attention.py":202:19)
#loc31 = loc(callsite(#loc1 at #loc23))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "hip:gfx942", "triton_gpu.threads-per-warp" = 64 : i32} {
  tt.func public @_attn_bwd_preprocess(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":191:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":191:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":191:0), %arg3: i32 loc("/triton/python/tutorials/06-fused-attention.py":191:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/triton/python/tutorials/06-fused-attention.py":191:0)) attributes {noinline = false} {
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<64> : tensor<128x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<128xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<128xi32, #blocked1> loc(#loc5)
    %8 = tt.get_program_id y : i32 loc(#loc6)
    %9 = arith.muli %8, %c64_i32 : i32 loc(#loc7)
    %10 = arith.muli %9, %arg4 : i32 loc(#loc8)
    %11 = tt.addptr %arg0, %10 : !tt.ptr<f16>, i32 loc(#loc9)
    %12 = tt.expand_dims %6 {axis = 1 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi32, #blocked> loc(#loc10)
    %13 = arith.muli %12, %cst : tensor<128x1xi32, #blocked> loc(#loc11)
    %14 = tt.splat %11 : !tt.ptr<f16> -> tensor<128x1x!tt.ptr<f16>, #blocked> loc(#loc12)
    %15 = tt.addptr %14, %13 : tensor<128x1x!tt.ptr<f16>, #blocked>, tensor<128x1xi32, #blocked> loc(#loc12)
    %16 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc13)
    %17 = tt.expand_dims %16 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc13)
    %18 = tt.broadcast %15 : tensor<128x1x!tt.ptr<f16>, #blocked> -> tensor<128x64x!tt.ptr<f16>, #blocked> loc(#loc14)
    %19 = tt.broadcast %17 : tensor<1x64xi32, #blocked> -> tensor<128x64xi32, #blocked> loc(#loc14)
    %20 = tt.addptr %18, %19 : tensor<128x64x!tt.ptr<f16>, #blocked>, tensor<128x64xi32, #blocked> loc(#loc14)
    %21 = tt.load %20 : tensor<128x64x!tt.ptr<f16>, #blocked> loc(#loc15)
    %22 = tt.addptr %arg1, %10 : !tt.ptr<f16>, i32 loc(#loc16)
    %23 = tt.splat %22 : !tt.ptr<f16> -> tensor<128x1x!tt.ptr<f16>, #blocked> loc(#loc17)
    %24 = tt.addptr %23, %13 : tensor<128x1x!tt.ptr<f16>, #blocked>, tensor<128x1xi32, #blocked> loc(#loc17)
    %25 = tt.broadcast %24 : tensor<128x1x!tt.ptr<f16>, #blocked> -> tensor<128x64x!tt.ptr<f16>, #blocked> loc(#loc18)
    %26 = tt.addptr %25, %19 : tensor<128x64x!tt.ptr<f16>, #blocked>, tensor<128x64xi32, #blocked> loc(#loc18)
    %27 = tt.load %26 : tensor<128x64x!tt.ptr<f16>, #blocked> loc(#loc19)
    %28 = arith.extf %27 : tensor<128x64xf16, #blocked> to tensor<128x64xf32, #blocked> loc(#loc20)
    %29 = arith.extf %21 : tensor<128x64xf16, #blocked> to tensor<128x64xf32, #blocked> loc(#loc21)
    %30 = arith.mulf %29, %28 : tensor<128x64xf32, #blocked> loc(#loc21)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc23)), %arg6: f32 loc(callsite(#loc1 at #loc23))):
      %37 = arith.addf %arg5, %arg6 : f32 loc(#loc33)
      tt.reduce.return %37 : f32 loc(#loc30)
    }) : (tensor<128x64xf32, #blocked>) -> tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc30)
    %32 = arith.muli %8, %arg4 : i32 loc(#loc25)
    %33 = tt.addptr %arg2, %32 : !tt.ptr<f32>, i32 loc(#loc26)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked1> loc(#loc27)
    %35 = tt.addptr %34, %7 : tensor<128x!tt.ptr<f32>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc27)
    %36 = triton_gpu.convert_layout %31 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128xf32, #blocked1> loc(#loc28)
    tt.store %35, %36 : tensor<128x!tt.ptr<f32>, #blocked1> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/triton/python/tutorials/06-fused-attention.py":196:26)
#loc3 = loc("/triton/python/tutorials/06-fused-attention.py":196:31)
#loc4 = loc("/triton/python/tutorials/06-fused-attention.py":196:54)
#loc5 = loc("/triton/python/tutorials/06-fused-attention.py":196:41)
#loc6 = loc("/triton/python/tutorials/06-fused-attention.py":197:27)
#loc7 = loc("/triton/python/tutorials/06-fused-attention.py":200:29)
#loc8 = loc("/triton/python/tutorials/06-fused-attention.py":200:40)
#loc9 = loc("/triton/python/tutorials/06-fused-attention.py":200:20)
#loc10 = loc("/triton/python/tutorials/06-fused-attention.py":200:54)
#loc11 = loc("/triton/python/tutorials/06-fused-attention.py":200:65)
#loc12 = loc("/triton/python/tutorials/06-fused-attention.py":200:48)
#loc13 = loc("/triton/python/tutorials/06-fused-attention.py":200:82)
#loc14 = loc("/triton/python/tutorials/06-fused-attention.py":200:76)
#loc15 = loc("/triton/python/tutorials/06-fused-attention.py":200:16)
#loc16 = loc("/triton/python/tutorials/06-fused-attention.py":201:22)
#loc17 = loc("/triton/python/tutorials/06-fused-attention.py":201:50)
#loc18 = loc("/triton/python/tutorials/06-fused-attention.py":201:78)
#loc19 = loc("/triton/python/tutorials/06-fused-attention.py":201:17)
#loc20 = loc("/triton/python/tutorials/06-fused-attention.py":201:97)
#loc21 = loc("/triton/python/tutorials/06-fused-attention.py":202:23)
#loc22 = loc("/triton/python/triton/language/standard.py":267:36)
#loc24 = loc("/triton/python/triton/language/standard.py":256:15)
#loc25 = loc("/triton/python/tutorials/06-fused-attention.py":204:30)
#loc26 = loc("/triton/python/tutorials/06-fused-attention.py":204:21)
#loc27 = loc("/triton/python/tutorials/06-fused-attention.py":204:38)
#loc28 = loc("/triton/python/tutorials/06-fused-attention.py":204:45)
#loc29 = loc("/triton/python/tutorials/06-fused-attention.py":204:4)
#loc30 = loc(callsite(#loc22 at #loc23))
#loc32 = loc(callsite(#loc24 at #loc22))
#loc33 = loc(callsite(#loc32 at #loc23))
